//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AppPublishingFilter {
    CDUnknownFunctionPointerType *_field1;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field2[6];
};

struct ApplianceView;

struct AsyncSocket;

struct Audio {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<cui::vmdevice::Audio::EmulatedDevice, cui::ConfigTransaction> _field2;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field7;
    struct string _field8;
    struct Ctx _field9;
    struct connection _field10;
    CDUnknownFunctionPointerType *_field11;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field15;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field16;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field17;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field18;
    _Bool _field19;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field24;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field25;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field26;
    struct TransactionProperty<int, cui::ConfigTransaction> _field27;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field28;
    struct WeakPtr<cui::DeviceMgr> _field29;
    struct string _field30;
    struct TransactionProperty<int, cui::ConfigTransaction> _field31;
    struct string _field32;
    struct trackable_callback_list *_field33;
    CDUnknownFunctionPointerType *_field34;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field35;
};

struct AutoContainer<std::__1::list<cui::USBDevice *, std::__1::allocator<cui::USBDevice *>>> {
    struct list<cui::USBDevice *, std::__1::allocator<cui::USBDevice *>> _field1;
};

struct AutoContainer<std::__1::list<cui::USBDeviceRule *, std::__1::allocator<cui::USBDeviceRule *>>> {
    struct list<cui::USBDeviceRule *, std::__1::allocator<cui::USBDeviceRule *>> _field1;
};

struct AutoInstallConfigIllegalName {
    char *_field1;
    char _field2;
};

struct AutoInstallConfigInfo {
    struct AutoInstallConfigIllegalName *_field1;
    struct AutoInstallConfigIllegalName *_field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    char _field7;
    char _field8;
    char _field9;
    char _field10;
    char _field11;
    char _field12;
};

struct AutoProtectConfigMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Property<bool> _field3;
    struct Property<cui::AutoProtectFrequency> _field4;
    struct Property<int> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    RefPtr_7dbef0f3 _field7;
    struct ConfigTransaction *_field8;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field9;
    struct connection _field10;
};

struct Bridge {
    struct trackable_callback_list *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    _Bool _field3;
    struct Editable *_field4;
    struct Network *_field5;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field6;
};

struct CDROM {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct TransactionProperty<cui::vmdevice::Controller *, cui::ConfigTransaction> _field4;
    struct map<cui::ConfigTransaction *, sigc::connection, std::__1::less<cui::ConfigTransaction *>, std::__1::allocator<std::__1::pair<cui::ConfigTransaction *const, sigc::connection>>> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field13;
    _Bool _field14;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field19;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct TransactionProperty<int, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct WeakPtr<cui::DeviceMgr> _field24;
    struct string _field25;
    struct TransactionProperty<int, cui::ConfigTransaction> _field26;
    struct string _field27;
    struct trackable_callback_list *_field28;
    CDUnknownFunctionPointerType *_field29;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field30;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field31;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field32;
    struct string _field33;
    struct Ctx _field34;
    struct connection _field35;
    CDUnknownFunctionPointerType *_field36;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field37;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field38;
    struct TransactionProperty<cui::vmdevice::ClientBackend::BackingType, cui::ConfigTransaction> _field39;
    _Bool _field40;
    CDUnknownFunctionPointerType *_field41;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field42;
    CDUnknownFunctionPointerType *_field43;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field44;
    struct TransactionProperty<cui::vmdevice::FileBackend::HostIF, cui::ConfigTransaction> _field45;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CPClipItem {
    void *buf;
    unsigned int size;
    char exists;
};

struct CPClipboardClass {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned long long _field8;
    struct vector<cui::dnd::CPFileRep, std::__1::allocator<cui::dnd::CPFileRep>> _field9;
    struct string _field10;
    void *_field11;
    unsigned long long _field12;
    void *_field13;
    unsigned long long _field14;
    struct *_field15;
};

struct CPFileRep;

struct CPU {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct TransactionProperty<int, cui::ConfigTransaction> _field23;
    struct TransactionProperty<int, cui::ConfigTransaction> _field24;
    struct TransactionProperty<cui::vmdevice::HotPlug, cui::ConfigTransaction> _field25;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field26;
    struct TransactionProperty<int, cui::ConfigTransaction> _field27;
    struct list<std::__1::pair<utf::string, int>, std::__1::allocator<std::__1::pair<utf::string, int>>> _field28;
    struct trackable_callback_list *_field29;
};

struct CVSMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct Capability {
    CDUnknownFunctionPointerType *_vptr$Capability;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> willChange;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> changed;
    _Bool mKilled;
    _Bool mCachedState;
    struct FailureReasonList mFailureReasons;
    _Bool mEvaluated;
    struct list<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> mTests;
    struct trackable_callback_list *callback_list_;
};

struct CertificateCheck;

struct CertificatesTypes {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct map<utf::string, cui::CertType, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::CertType>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct map<utf::string, cui::CertType, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::CertType>>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct ChildProcess;

struct ClientBackend {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field2;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field3;
    struct TransactionProperty<cui::vmdevice::ClientBackend::BackingType, cui::ConfigTransaction> _field4;
    _Bool _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field13;
    _Bool _field14;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field19;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct TransactionProperty<int, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct WeakPtr<cui::DeviceMgr> _field24;
    struct string _field25;
    struct TransactionProperty<int, cui::ConfigTransaction> _field26;
    struct string _field27;
    struct trackable_callback_list *_field28;
};

struct Cnx {
    struct trackable_callback_list *_field1;
    struct Property<bool> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct Signal _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    int _field8;
    struct Cnx *_field9;
    struct Cnx *_field10;
    struct VCAOD *_field11;
    struct Cnx *_field12;
    struct auto_ptr<cui::CnxCapabilities> _field13;
    struct CnxFS *_field14;
    struct CnxInfo *_field15;
    struct PermissionMgr *_field16;
    struct TaskMgrVIM *_field17;
    struct FilePath *_field18;
    struct ServerKey _field19;
    struct WeakPtr<cui::vcloud::Instance> _field20;
    int _field21;
    WeakPtr_682d8722 _field22;
    _Bool _field23;
    _Bool _field24;
    struct string _field25;
    struct connection _field26;
    struct WeakPtr<cui::inventory::Inventory> _field27;
};

struct CnxCapabilities {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Capability _field3;
    struct Capability _field4;
    struct Capability _field5;
    struct Capability _field6;
    struct Capability _field7;
    struct Capability _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Capability _field15;
    struct Capability _field16;
    struct Capability _field17;
    struct Capability _field18;
    struct Capability _field19;
    struct Capability _field20;
    struct Capability _field21;
    struct Capability _field22;
    struct Capability _field23;
    struct Capability _field24;
    struct Capability _field25;
    struct Capability _field26;
    struct Capability _field27;
    struct Capability _field28;
    struct Capability _field29;
    WeakPtr_682d8722 _field30;
};

struct CnxFS {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    WeakPtr_682d8722 _field5;
    struct string _field6;
};

struct CnxInfo {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field3;
};

struct CnxMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct CertificateCheck *_field4;
    struct map<cui::CnxMgr::CnxID, cui::CnxMgr::Item *, std::__1::less<cui::CnxMgr::CnxID>, std::__1::allocator<std::__1::pair<const cui::CnxMgr::CnxID, cui::CnxMgr::Item *>>> _field5;
    RefPtr_0f6139b8 _field6;
    RefPtr_0f6139b8 _field7;
    struct slot<void, cui::WeakPtr<cui::Cnx>, const utf::string &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil> _field8;
};

struct Color {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned char _field4;
};

struct Component;

struct ComponentMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, boost::shared_ptr<cui::Component>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, boost::shared_ptr<cui::Component>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::ConnectResult, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct slot<void, const std::__1::vector<boost::shared_ptr<cui::Component>, std::__1::allocator<boost::shared_ptr<cui::Component>>>&, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
};

struct ComponentMgrCDS {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, boost::shared_ptr<cui::Component>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, boost::shared_ptr<cui::Component>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::ConnectResult, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct slot<void, const std::__1::vector<boost::shared_ptr<cui::Component>, std::__1::allocator<boost::shared_ptr<cui::Component>>>&, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, const utf::string &, const cui::SensitiveString &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct map<utf::string, boost::shared_ptr<cui::Component>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, boost::shared_ptr<cui::Component>>>> _field10;
    struct map<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>>> _field11;
    struct list<cui::Component::ComponentMgrDownloadJob, std::__1::allocator<cui::Component::ComponentMgrDownloadJob>> _field12;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field13;
    struct _CdsClient *_field14;
    struct string _field15;
    struct string _field16;
    struct string _field17;
    struct ProgressMgr *_field18;
    struct string _field19;
    int _field20;
    struct ConnectResult _field21;
    long long _field22;
    struct string _field23;
    unsigned int _field24;
    unsigned int _field25;
    CDUnknownFunctionPointerType _field26;
};

struct ConfigTransaction {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct map<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *, std::__1::less<const cui::PropertyBase *>, std::__1::allocator<std::__1::pair<const cui::PropertyBase *const, cui::ConfigTransaction::ValueBase *>>> _field5;
    _Bool _field6;
    _Bool _field7;
    struct connection _field8;
};

struct Confirm;

struct ConnectResult {
    CDUnknownFunctionPointerType *_field1;
    struct string _field2;
    struct vector<utf::string, std::__1::allocator<utf::string>> _field3;
    int _field4;
};

struct Context;

struct ControlledDevice {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<cui::vmdevice::Controller *, cui::ConfigTransaction> _field2;
    struct map<cui::ConfigTransaction *, sigc::connection, std::__1::less<cui::ConfigTransaction *>, std::__1::allocator<std::__1::pair<cui::ConfigTransaction *const, sigc::connection>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field9;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field10;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field11;
    _Bool _field12;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field19;
    struct TransactionProperty<int, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct WeakPtr<cui::DeviceMgr> _field22;
    struct string _field23;
    struct TransactionProperty<int, cui::ConfigTransaction> _field24;
    struct string _field25;
    struct trackable_callback_list *_field26;
};

struct Controller {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    CDUnknownFunctionPointerType *_field23;
    struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field24;
    struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field25;
    struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field26;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field27;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field28;
    struct Property<std::__1::map<utf::string, unsigned int, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, unsigned int>>>> _field29;
    struct DeviceMgr *_field30;
    int _field31;
    struct map<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *, std::__1::less<const cui::ConfigTransaction *>, std::__1::allocator<std::__1::pair<const cui::ConfigTransaction *const, cui::vmdevice::DeviceListBase::TransactionState *>>> _field32;
    struct map<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>>> _field33;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field34;
    struct vector<cui::vmdevice::Device *, std::__1::allocator<cui::vmdevice::Device *>> _field35;
    struct map<cui::vmdevice::Device *, int, std::__1::less<cui::vmdevice::Device *>, std::__1::allocator<std::__1::pair<cui::vmdevice::Device *const, int>>> _field36;
    struct TransactionProperty<unsigned long, cui::ConfigTransaction> _field37;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field38;
    struct connection _field39;
    struct connection _field40;
    struct map<cui::vmdevice::Device *, sigc::connection, std::__1::less<cui::vmdevice::Device *>, std::__1::allocator<std::__1::pair<cui::vmdevice::Device *const, sigc::connection>>> _field41;
    struct string _field42;
    int _field43;
    struct trackable_callback_list *_field44;
};

struct Converter {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Property<utf::string> _field3;
    struct Property<utf::string> _field4;
    struct Property<cui::SensitiveString> _field5;
    struct Property<utf::string> _field6;
    struct Property<bool> _field7;
    struct Property<unsigned int> _field8;
    struct Property<int> _field9;
    struct Property<cui::ConverterEvent> _field10;
    struct Property<cui::ConverterError> _field11;
    struct Property<utf::string> _field12;
    struct Property<utf::string> _field13;
    struct ServerKey _field14;
    struct ConverterSourceInfo _field15;
    struct WeakPtr<cui::DlgMgr> _field16;
    _Bool _field17;
};

struct ConverterSourceInfo {
    struct trackable_callback_list *_field1;
    struct string _field2;
    struct string _field3;
    long long _field4;
    struct string _field5;
};

struct CopyPasteRpc;

struct Ctx {
    struct RefPtr<vmdb::Context> _field1;
};

struct CustomerDataControllerCEIP;

struct DHCP {
    struct trackable_callback_list *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct Network *_field3;
    struct string _field4;
    struct string _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct DUIAdaptedVMWrapper {
    struct VM *_field1;
};

struct Data;

struct DataCollection {
    CDUnknownFunctionPointerType *_field1;
    struct CustomerDataControllerCEIP *_field2;
    struct string _field3;
    struct string _field4;
    struct string _field5;
    struct string _field6;
    struct vector<utf::string, std::__1::allocator<utf::string>> _field7;
    struct __sFILE *_field8;
    struct string _field9;
    struct string _field10;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field11;
    int _field12;
    struct trackable_callback_list *_field13;
};

struct DatastoreInfo {
    struct string name;
    struct string id;
    struct string path;
    long long freeBytes;
};

struct DatastoreStats {
    struct string _field1;
    struct string _field2;
    struct Property<long long> _field3;
    struct Property<long long> _field4;
    struct Property<long long> _field5;
    struct Property<long long> _field6;
};

struct DeferredSignal {
    struct trackable_callback_list *_field1;
    struct RefPtr<cui::DeferredSignal::Data> _field2;
};

struct DeviceBasedDiskInfo {
    int diskType;
    int busType;
    _Bool isLegacy;
    long long capacityB;
    int toolsVersion;
    int hwVersion;
    _Bool encryptedDesc;
    _Bool encryptedData;
    int accessMode;
    struct string hostdev;
    struct list<cui::Partition, std::__1::allocator<cui::Partition>> diskPartitions;
};

struct DeviceListBase {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct Property<std::__1::map<utf::string, unsigned int, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, unsigned int>>>> _field7;
    struct DeviceMgr *_field8;
    int _field9;
    struct map<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *, std::__1::less<const cui::ConfigTransaction *>, std::__1::allocator<std::__1::pair<const cui::ConfigTransaction *const, cui::vmdevice::DeviceListBase::TransactionState *>>> _field10;
    struct map<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>>> _field11;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field12;
    struct vector<cui::vmdevice::Device *, std::__1::allocator<cui::vmdevice::Device *>> _field13;
    struct map<cui::vmdevice::Device *, int, std::__1::less<cui::vmdevice::Device *>, std::__1::allocator<std::__1::pair<cui::vmdevice::Device *const, int>>> _field14;
    struct TransactionProperty<unsigned long, cui::ConfigTransaction> _field15;
    struct trackable_callback_list *_field16;
};

struct DeviceMgr {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct trackable_callback_list *_field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct TransactionProperty<cui::HardwareVersion, cui::ConfigTransaction> _field5;
    struct TransactionProperty<cui::GuestOSInfo, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct list<cui::DeviceMgr::PendingClientDeviceConnect, std::__1::allocator<cui::DeviceMgr::PendingClientDeviceConnect>> _field9;
    struct map<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>, std::__1::less<cui::DeviceType>, std::__1::allocator<std::__1::pair<const cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>>> _field10;
    struct Host *_field11;
    struct WeakDPtr<cui::VM> _field12;
    struct RemoteDeviceMgr *_field13;
    struct HardwareVersion _field14;
    struct string _field15;
    struct GuestOSInfo _field16;
    struct DlgMgr *_field17;
    int _field18;
    struct VMConfigBackendAdapter *_field19;
};

struct DiskInfo {
    int diskType;
    int busType;
    _Bool isLegacy;
    long long capacityB;
    int toolsVersion;
    int hwVersion;
    _Bool encryptedDesc;
    _Bool encryptedData;
};

struct DiskOpsNTFS {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Signal _field3;
    struct string _field4;
    struct auto_ptr<cui::ChildProcess> _field5;
    struct auto_ptr<cui::LineBuffer> _field6;
    struct vector<utf::string, std::__1::allocator<utf::string>> _field7;
    _Bool _field8;
    struct FileIODescriptor _field9;
};

struct Dlg {
    CDUnknownFunctionPointerType *_field1;
    struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct Signal _field4;
    _Bool _field5;
    struct trackable_callback_list *_field6;
};

struct DlgAlertHelper {
    CDUnknownFunctionPointerType *_field1;
    struct Property<bool> _field2;
    id _field3;
    id _field4;
    id _field5;
    struct Dlg *_field6;
    unsigned int _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
};

struct DlgCustomDialog {
    CDUnknownFunctionPointerType *_field1;
    struct Property<bool> _field2;
    id _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    CDUnknownFunctionPointerType *_field7;
    struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    CDUnknownFunctionPointerType *_field9;
    struct Signal _field10;
    _Bool _field11;
    struct trackable_callback_list *_field12;
};

struct DlgEULA {
    CDUnknownFunctionPointerType *_field1;
    struct Property<bool> _field2;
    id _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    slot_b50ce1c7 _field7;
    slot_b50ce1c7 _field8;
    CDUnknownFunctionPointerType *_field9;
    struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    CDUnknownFunctionPointerType *_field11;
    struct Signal _field12;
    _Bool _field13;
    struct trackable_callback_list *_field14;
};

struct DlgFileBrowser {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct Signal _field5;
    _Bool _field6;
    struct trackable_callback_list *_field7;
};

struct DlgPassword {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    CDUnknownFunctionPointerType *_field3;
    struct Property<bool> _field4;
    id _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    _Bool _field10;
    _Bool _field11;
    CDUnknownFunctionPointerType *_field12;
    struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    CDUnknownFunctionPointerType *_field14;
    struct Signal _field15;
    _Bool _field16;
    struct trackable_callback_list *_field17;
};

struct DlgProgress {
    CDUnknownFunctionPointerType *_field1;
    RefPtr_2df7dc43 _field2;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct Signal _field7;
    _Bool _field8;
    struct trackable_callback_list *_field9;
};

struct DlgRemoteFileBrowser {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct Property<bool> _field3;
    id _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    CDUnknownFunctionPointerType *_field9;
    struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    CDUnknownFunctionPointerType *_field11;
    struct Signal _field12;
    _Bool _field13;
    struct trackable_callback_list *_field14;
};

struct DnDRpc;

struct DownloadMgr {
    struct trackable_callback_list *_field1;
    struct slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, const std::__1::vector<boost::shared_ptr<cui::Component>, std::__1::allocator<boost::shared_ptr<cui::Component>>>&, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct ComponentMgr *_field5;
    long long _field6;
    long long _field7;
    _Bool _field8;
    struct list<cui::DownloadMgr::RefreshRequest, std::__1::allocator<cui::DownloadMgr::RefreshRequest>> _field9;
    struct list<cui::DownloadMgr::ConnectRequest, std::__1::allocator<cui::DownloadMgr::ConnectRequest>> _field10;
    int _field11;
    int _field12;
    _Bool _field13;
    struct slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
};

struct EULA {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field5;
    _Bool _field6;
    struct string _field7;
    _Bool _field8;
    CDUnknownFunctionPointerType *_field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct trackable_callback_list *_field12;
};

struct EasyInstallConfig;

struct Editable {
    struct trackable_callback_list *_field1;
    struct signal<void, netcfg::common::Network *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, unsigned int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    unsigned int _field5;
    struct map<unsigned int, netcfg::common::Network *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, netcfg::common::Network *>>> _field6;
    struct map<utf::string, netcfg::common::Network *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, netcfg::common::Network *>>> _field7;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field8;
    struct Network *_field9;
};

struct EncryptedString {
    struct RefPtr<cui::EncryptedString::Data> mData;
};

struct EncryptionKeyCache {
    struct trackable_callback_list *_field1;
    struct map<cui::VMID, cui::EncryptionKeyCache::KeyData, std::__1::less<cui::VMID>, std::__1::allocator<std::__1::pair<const cui::VMID, cui::EncryptionKeyCache::KeyData>>> _field2;
};

struct Entitlement;

struct EnumMapping;

struct EnumPreferenceProperty<cui::FullscreenAutofitMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::GamingMouseMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::InstallMediaType> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::PlayerQuitAction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::ProductCompat> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::USBConnectionMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::VMWizardMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::download::PromptOnCancelRule> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumPreferenceProperty<cui::download::ProxySource> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct EnumMapping *_field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct EnumeratedPreferenceString {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct string _field3;
    CDUnknownFunctionPointerType *_field4;
    struct string _field5;
    _Bool _field6;
    struct string _field7;
    char **_field8;
    CDUnknownFunctionPointerType *_field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct trackable_callback_list *_field12;
};

struct FailureReason {
    CDUnknownFunctionPointerType *_field1;
    struct weak_ptr<cui::Capability::FailureReason> _field2;
    struct string _field3;
};

struct FailureReasonList {
    struct list<boost::shared_ptr<const cui::Capability::FailureReason>, std::__1::allocator<boost::shared_ptr<const cui::Capability::FailureReason>>> mReasons;
};

struct Features {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Capability _field3;
    struct Capability _field4;
    struct Capability _field5;
    struct Capability _field6;
    struct Capability _field7;
    struct Capability _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Capability _field15;
    struct Capability _field16;
    struct Capability _field17;
    struct Capability _field18;
    struct Capability _field19;
    struct Capability _field20;
    struct Capability _field21;
    struct Capability _field22;
    struct Capability _field23;
    struct Capability _field24;
    struct Capability _field25;
    struct Capability _field26;
    struct Capability _field27;
    struct Capability _field28;
    struct Capability _field29;
    struct Capability _field30;
    struct Capability _field31;
    struct Capability _field32;
    struct Capability _field33;
    struct Capability _field34;
    struct Capability _field35;
    struct Capability _field36;
    struct Capability _field37;
    struct Capability _field38;
    struct Capability _field39;
    struct Capability _field40;
    struct Capability _field41;
    struct Capability _field42;
    struct Capability _field43;
    struct Capability _field44;
    struct Capability _field45;
    struct Capability _field46;
    struct Capability _field47;
    struct Capability _field48;
};

struct File {
    int type;
    struct string name;
    struct string displayName;
};

struct FileBackend {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field2;
    struct TransactionProperty<cui::vmdevice::FileBackend::HostIF, cui::ConfigTransaction> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field9;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field10;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field11;
    _Bool _field12;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field19;
    struct TransactionProperty<int, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct WeakPtr<cui::DeviceMgr> _field22;
    struct string _field23;
    struct TransactionProperty<int, cui::ConfigTransaction> _field24;
    struct string _field25;
    struct trackable_callback_list *_field26;
};

struct FileBasedDiskInfo {
    int diskType;
    int busType;
    _Bool isLegacy;
    long long capacityB;
    int toolsVersion;
    int hwVersion;
    _Bool encryptedDesc;
    _Bool encryptedData;
    _Bool isFlat;
    _Bool isMono;
    long long freeSpaceB;
    long long spaceUsedB;
    _Bool isBottomEmpty;
    struct list<utf::string, std::__1::allocator<utf::string>> filesInChain;
};

struct FileIODescriptor {
    int _field1;
    int _field2;
    char *_field3;
    struct FileLockToken *_field4;
};

struct FileLockToken;

struct FilePath {
    CDUnknownFunctionPointerType *_field1;
    char _field2;
};

struct FilePathPosix {
    CDUnknownFunctionPointerType *_field1;
    char _field2;
};

struct Floppy {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field4;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct string _field7;
    struct Ctx _field8;
    struct connection _field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field17;
    _Bool _field18;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field19;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field24;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field25;
    struct TransactionProperty<int, cui::ConfigTransaction> _field26;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field27;
    struct WeakPtr<cui::DeviceMgr> _field28;
    struct string _field29;
    struct TransactionProperty<int, cui::ConfigTransaction> _field30;
    struct string _field31;
    struct trackable_callback_list *_field32;
    CDUnknownFunctionPointerType *_field33;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field34;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field35;
    struct TransactionProperty<cui::vmdevice::ClientBackend::BackingType, cui::ConfigTransaction> _field36;
    _Bool _field37;
    CDUnknownFunctionPointerType *_field38;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field39;
    CDUnknownFunctionPointerType *_field40;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field41;
    struct TransactionProperty<cui::vmdevice::FileBackend::HostIF, cui::ConfigTransaction> _field42;
};

struct FolderNode {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct Signal _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Property<Glib::RefPtr<Glib::Object>> _field15;
    struct Property<bool> _field16;
    struct Inventory *_field17;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field18;
    struct string _field19;
    int _field20;
    _Bool _field21;
    struct string _field22;
    struct FolderNode *_field23;
    _Bool _field24;
    _Bool _field25;
    struct signal<void, cui::inventory::Node *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field26;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field27;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field28;
    struct signal<void, cui::inventory::Node *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field29;
    struct Property<bool> _field30;
    struct string _field31;
    WeakPtr_682d8722 _field32;
    int _field33;
    struct list<cui::inventory::Node *, std::__1::allocator<cui::inventory::Node *>> _field34;
    struct connection _field35;
    RefPtr_5b6f4ec6 _field36;
    struct connection _field37;
    struct connection _field38;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field39;
    struct map<cui::inventory::Node *, sigc::connection, std::__1::less<cui::inventory::Node *>, std::__1::allocator<std::__1::pair<cui::inventory::Node *const, sigc::connection>>> _field40;
};

struct FullscreenMgr;

struct FusionPrefs {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct DeferredSignal _field3;
    struct DeferredSignal _field4;
    struct string _field5;
    _Bool _field6;
    struct vector<cui::PreferencePropertyBase *, std::__1::allocator<cui::PreferencePropertyBase *>> _field7;
    slot_b50ce1c7 _field8;
    struct connection _field9;
    struct PreferenceProperty<bool> _field10;
    struct PreferenceProperty<bool> _field11;
    struct PreferenceProperty<bool> _field12;
    struct PreferenceProperty<bool> _field13;
    struct PreferencePropertyWithEpoch<bool> _field14;
    struct PreferenceProperty<utf::string> _field15;
    struct PreferenceProperty<utf::string> _field16;
    struct PreferencePropertyWithEpoch<cui::download::Permission> _field17;
    struct PreferencePropertyWithEpoch<cui::download::Permission> _field18;
    struct PreferenceProperty<int> _field19;
    struct PreferenceProperty<int> _field20;
    struct PreferenceProperty<int> _field21;
    struct EnumPreferenceProperty<cui::download::ProxySource> _field22;
    struct PreferenceProperty<utf::string> _field23;
    struct EnumPreferenceProperty<cui::download::PromptOnCancelRule> _field24;
    struct PreferenceProperty<bool> _field25;
    struct UpdatesVersionIgnore _field26;
    struct PreferenceProperty<int> _field27;
    struct PreferenceProperty<long long> _field28;
    struct PreferenceProperty<bool> _field29;
    struct PreferenceProperty<bool> _field30;
    struct PreferenceProperty<bool> _field31;
    struct PreferenceProperty<utf::string> _field32;
    struct PreferenceProperty<bool> _field33;
    struct PreferenceProperty<utf::string> _field34;
    struct EnumeratedPreferenceString _field35;
    struct PreferenceProperty<bool> _field36;
    struct PreferenceProperty<bool> _field37;
    struct PreferenceProperty<utf::string> _field38;
    struct PreferenceProperty<utf::string> _field39;
    struct PreferenceProperty<utf::string> _field40;
    struct PreferenceProperty<bool> _field41;
    struct PreferenceProperty<int> _field42;
    struct PreferenceProperty<int> _field43;
    struct PreferenceProperty<int> _field44;
    struct PreferenceProperty<bool> _field45;
    struct PreferenceProperty<bool> _field46;
    struct PreferenceProperty<int> _field47;
    struct PreferenceProperty<bool> _field48;
    struct PreferenceProperty<bool> _field49;
    struct PreferenceProperty<bool> _field50;
    struct PreferenceProperty<bool> _field51;
    struct PreferenceProperty<bool> _field52;
    struct PreferenceProperty<bool> _field53;
    struct PreferenceProperty<bool> _field54;
    struct PreferenceProperty<bool> _field55;
    struct PreferenceProperty<bool> _field56;
    struct HotKeyPreference _field57;
    struct PreferenceProperty<utf::string> _field58;
    struct PreferenceProperty<int> _field59;
    struct PreferenceProperty<int> _field60;
    struct PreferenceProperty<int> _field61;
    struct PreferenceProperty<int> _field62;
    struct PreferenceProperty<bool> _field63;
    struct PreferenceProperty<utf::string> _field64;
    struct PreferenceProperty<int> _field65;
    struct USBDisplay _field66;
    struct HintsState _field67;
    struct EULA _field68;
    struct SharedFolders _field69;
    struct LicenseRegistration _field70;
    struct EnumPreferenceProperty<cui::USBConnectionMode> _field71;
    struct EnumPreferenceProperty<cui::FullscreenAutofitMode> _field72;
    struct PreferenceProperty<bool> _field73;
    struct PreferenceProperty<bool> _field74;
    struct PreferenceProperty<bool> _field75;
    struct PreferenceProperty<bool> _field76;
    struct PreferenceProperty<bool> _field77;
    struct PreferenceProperty<bool> _field78;
    struct EnumPreferenceProperty<cui::GamingMouseMode> _field79;
    struct MKSKeys _field80;
    struct NamedPVNs _field81;
    struct LibrarySearchMRU _field82;
    struct PerVMHotKeys _field83;
    struct NonEmptyPreferenceString _field84;
    struct PreferenceProperty<utf::string> _field85;
    struct EnumPreferenceProperty<cui::VMWizardMode> _field86;
    struct HWVersionPreference _field87;
    struct EnumPreferenceProperty<cui::ProductCompat> _field88;
    struct EnumPreferenceProperty<cui::InstallMediaType> _field89;
    struct PreferenceProperty<bool> _field90;
    struct PreferenceProperty<utf::string> _field91;
    struct ISOLocationMRU _field92;
    struct RememberedHosts _field93;
    struct Property<bool> _field94;
    struct Property<bool> _field95;
    struct Property<bool> _field96;
    struct Property<bool> _field97;
    struct PreferenceProperty<bool> _field98;
    struct PreferenceProperty<bool> _field99;
    struct PreferenceProperty<bool> _field100;
    struct PreferenceProperty<utf::string> _field101;
    struct PreferenceProperty<int> _field102;
    struct EnumPreferenceProperty<cui::PlayerQuitAction> _field103;
    struct PreferenceProperty<bool> _field104;
    struct PreferenceProperty<utf::string> _field105;
    struct VMMRU _field106;
    struct PreferenceProperty<utf::string> _field107;
    struct KeyboardAndMouseProfile _field108;
    struct RememberedHosts _field109;
    struct PreferenceProperty<bool> _field110;
    struct PreferenceProperty<bool> _field111;
    struct PreferenceProperty<bool> _field112;
};

struct GuestAppFactory;

struct GuestAppMgr {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, const std::__1::set<cui::GuestAppMgr::LaunchMenuType, std::__1::less<cui::GuestAppMgr::LaunchMenuType>, std::__1::allocator<cui::GuestAppMgr::LaunchMenuType>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct GuestOps *_field3;
    struct GuestAppMgrOptions *_field4;
    struct WeakPtr<cui::GuestAppFactory> _field5;
    struct LaunchMenuInfo _field6[4];
    struct map<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> _field7;
    struct trackable_callback_list *_field8;
};

struct GuestAppMgrOptions;

struct GuestFamilyInfo {
    struct string key;
    struct string name;
    struct string defaultGuest;
};

struct GuestOSInfo {
    struct string key;
    struct string name;
    struct string family;
    _Bool supported;
    _Bool defaultScsiDisk;
    _Bool defaultNvmeDisk;
    _Bool defaultScsiCd;
    _Bool defaultSataDisk;
    _Bool defaultSataCd;
    int defaultSCSICtlrType;
    _Bool defaultUsb;
    _Bool defaultUsbXhci;
    _Bool defaultAudio;
    _Bool is64Bit;
    _Bool defaultSmc;
    _Bool defaultIch7m;
    _Bool efiAble;
    _Bool defaultEfi;
    _Bool defaultBluetoothStartConnected;
    _Bool defaultSensors;
    _Bool defaultSmbiosPassthru;
    _Bool defaultTouchscreen;
    _Bool defaultVirtualHV;
    long long defaultDiskSize;
    int defaultColorDepth;
    int defaultVCPUHotPlug;
    _Bool defaultMemHotAdd;
    _Bool multimonSupported;
    _Bool mirroredSharedFoldersSupported;
    int diskCtlrsSupported;
    _Bool thinPrintSupported;
    _Bool ghiSupported;
    _Bool accel3D;
    int minMb;
    int maxMb;
    int defaultMb;
    int minHostMb;
    _Bool warning;
    int maxVcpuNum;
    int maxCPUSockets;
    int minHWVersion;
    int defaultVcpuNum;
    unsigned long long preallocateSparseFrontMiBs;
    int defaultGraphicsMemoryMiBs;
    _Bool nvmeSupported;
    _Bool secureBootSupported;
    _Bool vbsSupported;
};

struct GuestOSTable {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Host *_field3;
};

struct GuestOps {
    CDUnknownFunctionPointerType *_field1;
    struct Capability _field2;
    struct Capability _field3;
    struct Capability _field4;
    struct Capability _field5;
    struct Capability _field6;
    struct Capability _field7;
    struct Capability _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Capability _field15;
    struct Capability _field16;
    struct Capability _field17;
    struct Capability _field18;
    struct Capability _field19;
    struct Capability _field20;
    struct Capability _field21;
    struct Capability _field22;
    struct Capability _field23;
    struct Capability _field24;
    struct Capability _field25;
    struct Capability _field26;
    struct Capability _field27;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field28;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field29;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field30;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field31;
    struct Property<bool> _field32;
    struct Property<bool> _field33;
    struct signal<void, const cui::ActionTargetURIPair &, const std::__1::list<utf::string, std::__1::allocator<utf::string>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field34;
    struct signal<void, const std::__1::set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field35;
    struct signal<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field36;
    struct signal<void, const unsigned int, const cui::Size, const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field37;
    struct signal<void, const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field38;
    struct signal<void, const std::__1::vector<cui::GuestOps::UnityOperation, std::__1::allocator<cui::GuestOps::UnityOperation>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field39;
    struct trackable_callback_list *_field40;
};

struct HWVersionPreference {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct Handle {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct HardDisk {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<cui::vmdevice::Controller *, cui::ConfigTransaction> _field2;
    struct map<cui::ConfigTransaction *, sigc::connection, std::__1::less<cui::ConfigTransaction *>, std::__1::allocator<std::__1::pair<cui::ConfigTransaction *const, sigc::connection>>> _field3;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field4;
    struct Property<utf::string> _field5;
    struct Property<bool> _field6;
    struct TransactionProperty<cui::DiskType, cui::ConfigTransaction> _field7;
    struct TransactionProperty<cui::DiskBusType, cui::ConfigTransaction> _field8;
    struct TransactionProperty<int, cui::ConfigTransaction> _field9;
    struct TransactionProperty<cui::vmdevice::HardDisk::Mode, cui::ConfigTransaction> _field10;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field11;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field12;
    struct Property<long long> _field13;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field14;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field15;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field16;
    struct string _field17;
    _Bool _field18;
    _Bool _field19;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field20;
    CDUnknownFunctionPointerType *_field21;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field22;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field23;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field24;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field25;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field26;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field27;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field28;
    _Bool _field29;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field30;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field31;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field32;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field33;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field34;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field35;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field36;
    struct TransactionProperty<int, cui::ConfigTransaction> _field37;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field38;
    struct WeakPtr<cui::DeviceMgr> _field39;
    struct string _field40;
    struct TransactionProperty<int, cui::ConfigTransaction> _field41;
    struct string _field42;
    struct trackable_callback_list *_field43;
};

struct HardwareVersion {
    CDUnknownFunctionPointerType *_vptr$HardwareVersion;
    struct trackable_callback_list *callback_list_;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> changed;
    struct Capability canRunUnity;
    struct Capability canChangeHWVersion;
    struct Capability canUseHDAudio;
    struct Capability canUseTemplateMode;
    struct Capability canUseGuestBackedGraphicsMemory;
    int mHwVersion;
    int mProductCompat;
};

struct HintsState {
    CDUnknownFunctionPointerType *_field1;
    struct Property<bool> _field2;
    struct Property<bool> _field3;
    _Bool _field4;
    struct set<utf::string, cui::CaselessComp, std::__1::allocator<utf::string>> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct Host {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Signal _field3;
    struct string _field4;
    RefPtr_5b6f4ec6 _field5;
    struct _GObject *_field6;
    WeakPtr_682d8722 _field7;
    struct HostCapabilities *_field8;
    struct HostInfo *_field9;
    struct HostNetwork *_field10;
    struct HostPowerOps *_field11;
    struct HostSettings *_field12;
    struct HostStats *_field13;
    struct string _field14;
    _Bool _field15;
    struct FilePath *_field16;
    struct ProgressMgr *_field17;
    struct SlotChain _field18;
};

struct HostCapabilities;

struct HostCopyPasteDest;

struct HostCopyPasteMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct VM *_field3;
    struct WeakPtr<cui::dnd::HostFileTransfer> _field4;
    unsigned int _field5;
    long long _field6;
    unsigned int _field7;
    struct signal<void, const CPClipboard *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::slot<bool, int, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct WeakPtr<cui::dnd::HostCopyPasteSrc> _field12;
    struct WeakPtr<cui::dnd::HostCopyPasteDest> _field13;
    struct CopyPasteRpc *_field14;
    int _field15;
};

struct HostCopyPasteSrc;

struct HostCredentials;

struct HostDnDCPMgr;

struct HostDnDDest;

struct HostDnDMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct VM *_field3;
    struct WeakPtr<cui::dnd::HostFileTransfer> _field4;
    unsigned int _field5;
    long long _field6;
    unsigned int _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, const CPClipboard *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, bool, cui::Error, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, DND_DROPEFFECT, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    struct signal<void, bool, cui::Error, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct signal<void, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::slot<bool, int, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field15;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field16;
    struct signal<void, cui::dnd::HOST_DND_STATE, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field17;
    struct MKS *_field18;
    struct WeakPtr<cui::dnd::HostDnDSrc> _field19;
    struct WeakPtr<cui::dnd::HostDnDDest> _field20;
    struct DnDRpc *_field21;
    int _field22;
    struct string _field23;
    struct connection _field24;
    struct connection _field25;
    struct connection _field26;
};

struct HostDnDSrc;

struct HostFileTransfer;

struct HostID {
    struct string name;
    struct string id;
};

struct HostInfo {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Signal _field3;
    struct Signal _field4;
    struct Signal _field5;
    struct Capability _field6;
    struct Capability _field7;
    struct Host *_field8;
};

struct HostMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, cui::Host *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, cui::Host *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct multimap<const cui::Cnx *, cui::Host *, std::__1::less<const cui::Cnx *>, std::__1::allocator<std::__1::pair<const cui::Cnx *const, cui::Host *>>> _field6;
    struct map<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>>> _field7;
    struct LocalHost *_field8;
    struct map<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>>> _field9;
    struct map<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>, std::__1::less<cui::Cnx *>, std::__1::allocator<std::__1::pair<cui::Cnx *const, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> _field10;
};

struct HostNetwork;

struct HostPowerOps {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Capability _field3;
    struct Capability _field4;
    struct Capability _field5;
    struct Capability _field6;
    struct Host *_field7;
    struct Property<bool> _field8;
    struct FailureReason _field9;
};

struct HostSettings;

struct HostStats {
    struct trackable_callback_list *_field1;
    struct Property<long long> _field2;
    struct Property<long long> _field3;
    struct Property<long long> _field4;
    struct Property<long long> _field5;
    struct vector<cui::HostStats::DatastoreStats *, std::__1::allocator<cui::HostStats::DatastoreStats *>> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct Host *_field8;
    RefPtr_5b6f4ec6 _field9;
    int _field10;
    int _field11;
    struct _GArray *_field12;
};

struct HotKey {
    unsigned int vkey;
    unsigned int modifiers;
};

struct HotKeyPreference {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct HotKey _field3;
    CDUnknownFunctionPointerType *_field4;
    struct HotKey _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct IObserver<VigorCpp::Devices::MKS>;

struct ISOLocationMRU {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct list<utf::string, std::__1::allocator<utf::string>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct list<utf::string, std::__1::allocator<utf::string>> _field5;
    _Bool _field6;
    struct string _field7;
    unsigned long long _field8;
    _Bool _field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct ImportArgs {
    struct string _field1;
    struct string _field2;
    struct string _field3;
};

struct ImportProgress {
    int _field1;
    unsigned int _field2;
    void *_field3;
};

struct ImportSupportInfo {
    char *pathToolsIso;
    char *pathTemplateVmx;
    char *pathImporterVm;
    char *pathVMwareVmx;
    char *pathWindowsCD;
    char *pathAewp;
    char *pathCloneBootCamp;
    char *pathUnrarTool;
    int importType;
    _Bool parallelsIsRunning;
};

struct IndexTask;

struct InjectProperty {
    _Bool _field1;
    struct string _field2;
    struct vector<cui::OVFTool::OVFProperty, std::__1::allocator<cui::OVFTool::OVFProperty>> _field3;
};

struct Instance;

struct Inventory {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct Signal _field10;
    struct FolderNode *_field11;
    RefPtr_0f6139b8 _field12;
    struct map<utf::string, cui::inventory::Node *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::Node *>>> _field13;
};

struct KMProfile {
    struct string _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    struct string _field6;
    int _field7;
    struct map<int, KMMapping, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, KMMapping>>> _field8;
};

struct KeyBinding {
    struct {
        int _field1;
        _Bool _field2;
        int _field3;
        int _field4;
        int _field5;
        int _field6;
        int _field7;
        int _field8;
        int _field9;
        _Bool _field10;
        CDUnion_e63a103f _field11;
    } _field1;
    struct {
        int _field1;
        union {
            struct {
                _Bool _field1;
                _Bool _field2;
                _Bool _field3;
                _Bool _field4;
                _Bool _field5;
                _Bool _field6;
                _Bool _field7;
                _Bool _field8;
                CDUnion_e63a103f _field9;
            } _field1;
            int _field2;
        } _field2;
    } _field2;
};

struct KeyboardAndMouseProfile {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct map<utf::string, KMProfile, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, KMProfile>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct map<utf::string, KMProfile, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, KMProfile>>> _field5;
    _Bool _field6;
    struct string _field7;
    struct signal<void, const utf::string &, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    CDUnknownFunctionPointerType *_field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct trackable_callback_list *_field12;
};

struct KeyboardShortcutMgr {
    struct trackable_callback_list *_field1;
    struct map<utf::string, cui::KeyboardShortcutMgr::Shortcut, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::KeyboardShortcutMgr::Shortcut>>> _field2;
};

struct LaunchMenu {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct list<cui::GuestAppMgr::LaunchMenuItem *, std::__1::allocator<cui::GuestAppMgr::LaunchMenuItem *>> _field3;
    struct list<cui::GuestAppMgr::LaunchMenuItem *, std::__1::allocator<cui::GuestAppMgr::LaunchMenuItem *>> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct SlotChain _field6;
};

struct LaunchMenuInfo {
    struct LaunchMenu *_field1;
    struct LaunchMenu *_field2;
    int _field3;
    int _field4;
    struct SlotChain _field5;
    _Bool _field6;
    struct queue<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::deque<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>> _field7;
};

struct LaunchMenuItem {
    CDUnknownFunctionPointerType *_field1;
    struct string _field2;
    struct string _field3;
    struct string _field4;
    _Bool _field5;
    struct trackable_callback_list *_field6;
    int _field7;
    struct GuestApp *_field8;
    struct LaunchMenu *_field9;
};

struct LibrarySearchMRU {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct list<utf::string, std::__1::allocator<utf::string>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct list<utf::string, std::__1::allocator<utf::string>> _field5;
    _Bool _field6;
    struct string _field7;
    unsigned long long _field8;
    _Bool _field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct License;

struct LicenseAttr {
    struct License *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    struct TimeUtil_Date _field10;
    char *_field11;
    struct TimeUtil_Date _field12;
    char *_field13;
    struct TimeUtil_Expiration _field14;
    int _field15;
    char _field16;
    char _field17;
    char _field18;
    unsigned short _field19;
    unsigned char _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned char _field23;
    unsigned char _field24;
    unsigned char _field25;
    char _field26;
    char *_field27;
    char *_field28;
    struct LicenseCheckKVPair **_field29;
    unsigned char _field30;
    unsigned short _field31;
    unsigned int _field32;
    unsigned short _field33;
    char _field34;
    char _field35;
    unsigned char _field36;
    unsigned char _field37;
    char _field38[5];
    unsigned char _field39;
    unsigned long long _field40;
    char *_field41;
    unsigned short _field42;
};

struct LicenseCheckKVPair;

struct LicenseRegistration {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct map<utf::string, cui::LicenseRegistrationData, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::LicenseRegistrationData>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct map<utf::string, cui::LicenseRegistrationData, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::LicenseRegistrationData>>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct LineBuffer;

struct LocalHost {
    CDUnknownFunctionPointerType *_field1;
    struct Ctx _field2;
    struct USBDeviceMgr *_field3;
    struct WeakPtr<const cui::GuestOSTable> _field4;
    CDUnknownFunctionPointerType *_field5;
    struct trackable_callback_list *_field6;
    struct Signal _field7;
    struct string _field8;
    RefPtr_5b6f4ec6 _field9;
    struct _GObject *_field10;
    WeakPtr_682d8722 _field11;
    struct HostCapabilities *_field12;
    struct HostInfo *_field13;
    struct HostNetwork *_field14;
    struct HostPowerOps *_field15;
    struct HostSettings *_field16;
    struct HostStats *_field17;
    struct string _field18;
    _Bool _field19;
    struct FilePath *_field20;
    struct ProgressMgr *_field21;
    struct SlotChain _field22;
};

struct LocalInventory {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct Signal _field10;
    struct FolderNode *_field11;
    RefPtr_0f6139b8 _field12;
    struct map<utf::string, cui::inventory::Node *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::Node *>>> _field13;
    struct signal<void, const utf::string &, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct signal<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field15;
    struct map<utf::string, cui::inventory::Node *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::Node *>>> _field16;
    struct string _field17;
    struct string _field18;
    _Bool _field19;
    struct connection _field20;
    _Bool _field21;
    struct list<utf::string, std::__1::allocator<utf::string>> _field22;
    struct map<const cui::inventory::Node *, int, std::__1::less<const cui::inventory::Node *>, std::__1::allocator<std::__1::pair<const cui::inventory::Node *const, int>>> _field23;
    int _field24;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _field25;
    struct string _field26;
};

struct MKSControlAuthToken {
    char _field1[40];
};

struct MKSControlClient;

struct MKSKeys {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Modifiers _field3;
    CDUnknownFunctionPointerType *_field4;
    struct Modifiers _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct MKSScreen;

struct MKSScreenMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
};

struct MKSScreenView {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct Signal _field3;
    _Bool _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct Property<cui::MKSScreenView::RenderingStateType> _field11;
    struct Capability _field12;
    struct Property<cui::Point> _field13;
    struct Property<cui::Size> _field14;
    struct Property<cui::Rect> _field15;
    struct Property<cui::Rect> _field16;
    struct Rect _field17;
    unsigned int _field18;
    shared_ptr_6cb5aa5c _field19;
    int _field20;
    int _field21;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field22;
    unsigned long long _field23;
    unsigned long long _field24;
    int _field25;
    unsigned int _field26;
    _Bool _field27;
    struct string _field28;
    struct Property<cui::MKSScreenView::DisplayMode> _field29;
    struct Property<bool> _field30;
    struct WeakDPtr<cui::MKSWindowTransaction> _field31;
    unsigned int _field32;
    struct WeakPtr<cui::MKSWindowMgr> _field33;
    struct WeakPtr<cui::MKSScreenMgr> _field34;
    struct trackable_callback_list *_field35;
};

struct MKSWindowMgr {
    CDUnknownFunctionPointerType *_field1;
    struct Signal _field2;
    _Bool _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct connection _field6;
    struct WeakPtr<cui::MKS> _field7;
    struct trackable_callback_list *_field8;
};

struct MKSWindowTransaction;

struct MappingDefault {
    char _field1;
    id _field2;
    id _field3;
};

struct Memory {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field23;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field24;
    struct TransactionProperty<unsigned int, cui::ConfigTransaction> _field25;
    unsigned int _field26;
    unsigned int _field27;
    struct trackable_callback_list *_field28;
};

struct MemoryConfigMgr {
    struct trackable_callback_list *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct Property<unsigned int> _field3;
    struct Property<bool> _field4;
    struct Property<unsigned int> _field5;
    RefPtr_7dbef0f3 _field6;
    struct ConfigTransaction *_field7;
    struct VM *_field8;
};

struct Mgr {
    struct trackable_callback_list *_field1;
    struct Editable *_field2;
};

struct Modifiers {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct MsgMgr;

struct NAT {
    struct trackable_callback_list *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct Network *_field3;
    struct string _field4;
    unsigned int _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned int _field8;
    _Bool _field9;
    struct string _field10;
    unsigned int _field11;
    unsigned int _field12;
    unsigned int _field13;
    int _field14;
    unsigned int _field15;
    unsigned int _field16;
    _Bool _field17;
    struct vector<utf::string, std::__1::allocator<utf::string>> _field18;
    struct vector<netcfg::common::NAT::PortForwardEntry, std::__1::allocator<netcfg::common::NAT::PortForwardEntry>> _field19;
};

struct NIC {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field2;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field3;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field4;
    struct string _field5;
    struct Ctx _field6;
    struct connection _field7;
    struct TransactionProperty<cui::vmdevice::NIC::AddressType, cui::ConfigTransaction> _field8;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field9;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<cui::vmdevice::NIC::EmulatedDevice, cui::ConfigTransaction> _field14;
    struct TransactionProperty<cui::vmdevice::NIC::HostIF, cui::ConfigTransaction> _field15;
    struct TransactionProperty<int, cui::ConfigTransaction> _field16;
    struct TransactionProperty<double, cui::ConfigTransaction> _field17;
    struct TransactionProperty<int, cui::ConfigTransaction> _field18;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field19;
    struct TransactionProperty<int, cui::ConfigTransaction> _field20;
    struct TransactionProperty<double, cui::ConfigTransaction> _field21;
    struct TransactionProperty<int, cui::ConfigTransaction> _field22;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field23;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field24;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field25;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field26;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field27;
    struct string _field28;
    struct string _field29;
    CDUnknownFunctionPointerType *_field30;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field31;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field32;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field33;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field34;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field35;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field36;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field37;
    _Bool _field38;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field39;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field40;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field41;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field42;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field43;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field44;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field45;
    struct TransactionProperty<int, cui::ConfigTransaction> _field46;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field47;
    struct WeakPtr<cui::DeviceMgr> _field48;
    struct string _field49;
    struct TransactionProperty<int, cui::ConfigTransaction> _field50;
    struct string _field51;
    struct trackable_callback_list *_field52;
};

struct NSEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct NamedPVNs {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct list<cui::NamedPVN, std::__1::allocator<cui::NamedPVN>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct list<cui::NamedPVN, std::__1::allocator<cui::NamedPVN>> _field5;
    _Bool _field6;
    struct string _field7;
    struct map<utf::string, const cui::NamedPVN *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, const cui::NamedPVN *>>> _field8;
    struct map<utf::string, const cui::NamedPVN *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, const cui::NamedPVN *>>> _field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct Network {
    struct trackable_callback_list *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct Editable *_field3;
    int _field4;
    unsigned int _field5;
    struct Bridge *_field6;
    struct NAT *_field7;
    struct DHCP *_field8;
    _Bool _field9;
    _Bool _field10;
    struct string _field11;
    struct string _field12;
    struct string _field13;
};

struct NetworkID {
    struct string name;
    struct string id;
    struct string dvsUUID;
    struct string dvsPortgroupKey;
};

struct Node {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct Signal _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Property<Glib::RefPtr<Glib::Object>> _field15;
    struct Property<bool> _field16;
    struct Inventory *_field17;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field18;
    struct string _field19;
    int _field20;
    _Bool _field21;
    struct string _field22;
    struct FolderNode *_field23;
    _Bool _field24;
};

struct NonEmptyPreferenceString {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct string _field3;
    CDUnknownFunctionPointerType *_field4;
    struct string _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct Notification {
    CDUnknownFunctionPointerType *_field1;
    struct Signal _field2;
    _Bool _field3;
    unsigned int _field4;
    int _field5;
    struct string _field6;
    struct string _field7;
    long long _field8;
    unsigned long long _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    struct trackable_callback_list *_field13;
};

struct NotificationAreaMgr {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, utf::string, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct WeakPtr<cui::GuestOps> _field3;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field4;
    struct connection _field5;
    _Bool _field6;
    struct trackable_callback_list *_field7;
};

struct NotificationMgr {
    CDUnknownFunctionPointerType *_field1;
    struct Signal _field2;
    _Bool _field3;
    struct signal<void, unsigned int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, unsigned int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, unsigned int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, unsigned int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct map<unsigned int, cui::Notification *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::Notification *>>> _field9;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field10;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field11;
    unsigned int _field12;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field13;
    id _field14;
    id _field15;
    struct trackable_callback_list *_field16;
};

struct OVFCategory {
    _Bool _field1;
    struct string _field2;
    struct vector<cui::OVFTool::OVFProperty, std::__1::allocator<cui::OVFTool::OVFProperty>> _field3;
};

struct OVFDeploymentOption {
    _Bool _field1;
    struct string _field2;
    struct string _field3;
    struct string _field4;
};

struct OVFError;

struct OVFProductInfo {
    struct string _field1;
    struct string _field2;
    struct string _field3;
    struct string _field4;
    struct string _field5;
    struct string _field6;
    _Bool _field7;
};

struct OVFProperty {
    struct string _field1;
    struct string _field2;
    struct string _field3;
    struct string _field4;
    struct string _field5;
    struct string _field6;
    int _field7;
    int _field8;
    struct string _field9;
    struct string _field10;
    _Bool _field11;
};

struct OVFTool {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Signal _field3;
    struct vector<utf::string, std::__1::allocator<utf::string>> _field4;
    struct ProbeResult _field5;
    WeakPtr_682d8722 _field6;
    RefPtr_58bf4239 _field7;
    slot_c916f39b _field8;
    _Bool _field9;
    struct slot<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct slot<void, const utf::string &, bool, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct slot<void, cui::OVFTool::ProbeResult, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct WeakPtr<cui::VM> _field13;
    int _field14;
    int _field15;
    _Bool _field16;
    struct WeakPtr<cui::DlgMgr> _field17;
    struct ImportArgs _field18;
    struct string _field19;
    struct string _field20;
    struct LineBuffer *_field21;
    struct ChildProcess *_field22;
    int _field23;
    struct string _field24;
    struct vector<cui::OVFTool::OVFError, std::__1::allocator<cui::OVFTool::OVFError>> _field25;
    struct vector<cui::OVFTool::OVFError, std::__1::allocator<cui::OVFTool::OVFError>> _field26;
    struct string _field27;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field28;
    struct InjectProperty _field29;
    struct FilePathPosix _field30;
};

struct OVFVMInfo {
    struct string _field1;
    struct string _field2;
};

struct Object {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct _GObject *_field3;
    char *_field4;
    _Bool _field5;
    struct trackable_callback_list *_field6;
};

struct OpenVMInteractions {
    struct WeakPtr<cui::DlgMgr> dlgMgr;
    struct slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> unlockVM;
    struct slot<void, const utf::string &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, const cui::SensitiveString &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil> unlockRestrictedVM;
    struct slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, const cui::SensitiveString &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> changePassword;
};

struct OptimizedUnityWindowMoveOverlay {
    struct trackable_callback_list *_field1;
    struct map<int, std::__1::pair<int, cui::Size>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::pair<int, cui::Size>>>> _field2;
    struct UnityMgr *_field3;
};

struct Parallel {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field3;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field4;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field5;
    struct string _field6;
    struct Ctx _field7;
    struct connection _field8;
    CDUnknownFunctionPointerType *_field9;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field16;
    _Bool _field17;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field18;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field19;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field24;
    struct TransactionProperty<int, cui::ConfigTransaction> _field25;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field26;
    struct WeakPtr<cui::DeviceMgr> _field27;
    struct string _field28;
    struct TransactionProperty<int, cui::ConfigTransaction> _field29;
    struct string _field30;
    struct trackable_callback_list *_field31;
    CDUnknownFunctionPointerType *_field32;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field33;
    CDUnknownFunctionPointerType *_field34;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field35;
    struct TransactionProperty<cui::vmdevice::FileBackend::HostIF, cui::ConfigTransaction> _field36;
};

struct ParsedConfigData {
    char *name;
    int osCode;
    int ramMB;
    int soundType;
    int usbType;
    int networkCount;
    int *networkType;
    char *networkConnected;
    int floppyCount;
    char **floppyBackend;
    char *floppyConnected;
    int cdromCount;
    char **cdromBackend;
    char *cdromConnected;
    int diskCount;
    int *diskSizeMB;
    char **diskName;
    int requiredDiskSpaceMB;
    char isSuspended;
};

struct PerVMHotKey {
    struct string vmUUID;
    struct HotKey hotKey;
};

struct PerVMHotKeys {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct list<cui::PerVMHotKey, std::__1::allocator<cui::PerVMHotKey>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct list<cui::PerVMHotKey, std::__1::allocator<cui::PerVMHotKey>> _field5;
    _Bool _field6;
    struct string _field7;
    struct Property<bool> _field8;
    CDUnknownFunctionPointerType *_field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct trackable_callback_list *_field12;
};

struct PermissionMgr;

struct PhysicalBackend {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    _Bool _field11;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct TransactionProperty<int, cui::ConfigTransaction> _field19;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field20;
    struct WeakPtr<cui::DeviceMgr> _field21;
    struct string _field22;
    struct TransactionProperty<int, cui::ConfigTransaction> _field23;
    struct string _field24;
    struct trackable_callback_list *_field25;
};

struct PlaceholderNode {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct Signal _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Property<Glib::RefPtr<Glib::Object>> _field15;
    struct Property<bool> _field16;
    struct Inventory *_field17;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field18;
    struct string _field19;
    int _field20;
    _Bool _field21;
    struct string _field22;
    struct FolderNode *_field23;
    _Bool _field24;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field25;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field26;
    int _field27;
    struct string _field28;
    RefPtr_2df7dc43 _field29;
};

struct Point {
    int _field1;
    int _field2;
};

struct PolicyConfigMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Property<cui::SensitiveString> _field3;
    RefPtr_7dbef0f3 _field4;
    struct ConfigTransaction *_field5;
};

struct PortForwardEntry;

struct PreferenceProperty<bool> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    CDUnknownFunctionPointerType *_field4;
    _Bool _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct PreferenceProperty<cui::EncryptedString> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct EncryptedString _field3;
    CDUnknownFunctionPointerType *_field4;
    struct EncryptedString _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct PreferenceProperty<int> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct PreferenceProperty<long long> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    long long _field3;
    CDUnknownFunctionPointerType *_field4;
    long long _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct PreferenceProperty<utf::string> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct string _field3;
    CDUnknownFunctionPointerType *_field4;
    struct string _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct PreferencePropertyBase;

struct PreferencePropertyWithEpoch<bool> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    CDUnknownFunctionPointerType *_field4;
    _Bool _field5;
    _Bool _field6;
    struct string _field7;
    struct string _field8;
    struct string _field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct PreferencePropertyWithEpoch<cui::download::Permission> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    int _field5;
    _Bool _field6;
    struct string _field7;
    struct string _field8;
    struct string _field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct trackable_callback_list *_field13;
};

struct Prefs;

struct ProbeResult {
    struct OVFProductInfo _field1;
    _Bool _field2;
    struct vector<utf::string, std::__1::allocator<utf::string>> _field3;
    struct vector<cui::OVFTool::OVFCategory, std::__1::allocator<cui::OVFTool::OVFCategory>> _field4;
    struct vector<cui::OVFTool::OVFDeploymentOption, std::__1::allocator<cui::OVFTool::OVFDeploymentOption>> _field5;
    struct vector<cui::OVFTool::OVFVMInfo, std::__1::allocator<cui::OVFTool::OVFVMInfo>> _field6;
};

struct ProcessSerialNumber {
    unsigned int _field1;
    unsigned int _field2;
};

struct Progress;

struct ProgressCustom;

struct ProgressMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, Glib::RefPtr<cui::progress::Progress>, std::__1::__list_iterator<Glib::RefPtr<cui::progress::Progress>, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, std::__1::__list_iterator<Glib::RefPtr<cui::progress::Progress>, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, std::__1::__list_iterator<Glib::RefPtr<cui::progress::Progress>, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, Glib::RefPtr<cui::progress::Progress>, std::__1::__list_iterator<Glib::RefPtr<cui::progress::Progress>, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct list<Glib::RefPtr<cui::progress::Progress>, std::__1::allocator<Glib::RefPtr<cui::progress::Progress>>> _field7;
};

struct ProgressTransfer;

struct Property<Glib::RefPtr<Glib::Object>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    RefPtr_5b6f4ec6 _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<Glib::RefPtr<cui::Cnx>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    RefPtr_0f6139b8 _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<UnityWindowType> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<bool> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::AutoProtectFrequency> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::CnxFS::DatastoreInfo> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct DatastoreInfo _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::CnxInfo::APIType> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::Color> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Color _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::ConverterError> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::ConverterEvent> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::GamingMouseMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::HardwareVersion> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct HardwareVersion _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::Host *> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Host *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::HostID> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct HostID _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::KeyboardFilterMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::MKSScreenView::DisplayMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::MKSScreenView::RenderingStateType> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::Modifiers> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Modifiers _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::Point> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::Rect> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Rect _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::SensitiveString> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct SensitiveString _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::SensorMode> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::Size> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Size _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::USBDevice *> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct USBDevice *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::USBDeviceRule *> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct USBDeviceRule *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::USBDeviceRule::TargetType> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::UnityMgr::UnityGrabState> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::UnityWindow::DragType> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::VMID> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct VMID _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::VMPolicy::AuthenticationType> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::VMStatus::CopyAndPaste> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::tools::UpgradePolicy> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<cui::vcloud::VDC *> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct VDC *_field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<int> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<long long> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    long long _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<std::__1::list<cui::VMStatus::BootOrderItem, std::__1::allocator<cui::VMStatus::BootOrderItem>>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct list<cui::VMStatus::BootOrderItem, std::__1::allocator<cui::VMStatus::BootOrderItem>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<std::__1::list<unsigned int, std::__1::allocator<unsigned int>>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct list<unsigned int, std::__1::allocator<unsigned int>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<std::__1::map<utf::string, unsigned int, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, unsigned int>>>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct map<utf::string, unsigned int, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, unsigned int>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<std::__1::vector<utf::string, std::__1::allocator<utf::string>>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<utf::string, std::__1::allocator<utf::string>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<unsigned int> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    unsigned int _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct Property<utf::string> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct string _field3;
    CDUnknownFunctionPointerType *_field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct trackable_callback_list *_field7;
};

struct QueuedMsg;

struct RVMDownloader;

struct RVMInventory {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct Signal _field10;
    struct FolderNode *_field11;
    RefPtr_0f6139b8 _field12;
    struct map<utf::string, cui::inventory::Node *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::Node *>>> _field13;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    _Bool _field15;
    struct RestrictedVMFactory *_field16;
    struct signal<void, bool, cui::Error, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field17;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field18;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field19;
    struct map<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>>> _field20;
    struct string _field21;
};

struct RVMURLInfo {
    struct string username;
    struct EncryptedString password;
    struct string hostID;
};

struct Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct RefPtr<Glib::Object> {
    struct Object *_field1;
};

struct RefPtr<cui::Cnx> {
    struct Cnx *pCppObject_;
};

struct RefPtr<cui::DeferredSignal::Data> {
    struct Data *_field1;
};

struct RefPtr<cui::EasyInstallConfig> {
    struct EasyInstallConfig *_field1;
};

struct RefPtr<cui::EncryptedString::Data> {
    struct Data *pCppObject_;
};

struct RefPtr<cui::SensitiveString::Data> {
    struct Data *pCppObject_;
};

struct RefPtr<cui::VMConfig> {
    struct VMConfig *_field1;
};

struct RefPtr<cui::VMDeviceMgr> {
    struct VMDeviceMgr *pCppObject_;
};

struct RefPtr<cui::progress::Progress> {
    struct Progress *_field1;
};

struct RefPtr<cui::progress::ProgressCustom> {
    struct ProgressCustom *_field1;
};

struct RefPtr<cui::progress::ProgressTransfer> {
    struct ProgressTransfer *_field1;
};

struct RefPtr<vmdb::Context> {
    struct Context *_field1;
};

struct RegisteredInventory {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct Signal _field10;
    struct FolderNode *_field11;
    RefPtr_0f6139b8 _field12;
    struct map<utf::string, cui::inventory::Node *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::Node *>>> _field13;
    struct map<utf::string, cui::WeakPtr<cui::inventory::Node>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::WeakPtr<cui::inventory::Node>>>> _field14;
    struct connection _field15;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field16;
    struct map<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>> _field17;
    _Bool _field18;
    _Bool _field19;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field20;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field21;
    RefPtr_5b6f4ec6 _field22;
    RefPtr_5b6f4ec6 _field23;
    int _field24;
    int _field25;
};

struct RegistryOps {
    struct trackable_callback_list *_field1;
    struct Signal _field2;
    struct auto_ptr<cui::ChildProcess> _field3;
    struct string _field4;
};

struct RememberedHost {
    struct string _field1;
    int _field2;
    int _field3;
};

struct RememberedHostCredentials {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<cui::HostCredentials, std::__1::allocator<cui::HostCredentials>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct vector<cui::HostCredentials, std::__1::allocator<cui::HostCredentials>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct RememberedHosts {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<cui::RememberedHost, std::__1::allocator<cui::RememberedHost>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct vector<cui::RememberedHost, std::__1::allocator<cui::RememberedHost>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct RememberedSSHCredentials {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<cui::SSHCredentials, std::__1::allocator<cui::SSHCredentials>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct vector<cui::SSHCredentials, std::__1::allocator<cui::SSHCredentials>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct RemoteDeviceMgr;

struct RemoteMessager {
    struct trackable_callback_list *_field1;
    struct string _field2;
    unsigned short _field3;
    struct string _field4;
    struct string _field5;
    struct string _field6;
    slot_c916f39b _field7;
    struct slot<void, const char *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    slot_b50ce1c7 _field9;
    struct AsyncSocket *_field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    char _field14[200];
    struct deque<cui::RemoteMessager::QueuedMsg, std::__1::allocator<cui::RemoteMessager::QueuedMsg>> _field15;
};

struct RemovableDevice {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field2;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field3;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field4;
    struct string _field5;
    struct Ctx _field6;
    struct connection _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field15;
    _Bool _field16;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field19;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct TransactionProperty<int, cui::ConfigTransaction> _field24;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field25;
    struct WeakPtr<cui::DeviceMgr> _field26;
    struct string _field27;
    struct TransactionProperty<int, cui::ConfigTransaction> _field28;
    struct string _field29;
    struct trackable_callback_list *_field30;
};

struct ResettableProperty<bool> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    CDUnknownFunctionPointerType *_field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct trackable_callback_list *_field8;
};

struct ResettableProperty<int> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    int _field4;
    CDUnknownFunctionPointerType *_field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct trackable_callback_list *_field8;
};

struct ResettableProperty<std::__1::vector<cui::VMStatus::User, std::__1::allocator<cui::VMStatus::User>>> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<cui::VMStatus::User, std::__1::allocator<cui::VMStatus::User>> _field3;
    struct vector<cui::VMStatus::User, std::__1::allocator<cui::VMStatus::User>> _field4;
    CDUnknownFunctionPointerType *_field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct trackable_callback_list *_field8;
};

struct RestrictedVM {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Property<utf::string> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    RefPtr_0f6139b8 _field8;
    long long _field9;
    long long _field10;
    _Bool _field11;
    struct Entitlement *_field12;
    int _field13;
    _Bool _field14;
    struct string _field15;
    struct string _field16;
    struct string _field17;
    struct string _field18;
    struct string _field19;
    struct WeakPtr<cui::inventory::PlaceholderNode> _field20;
    RefPtr_2df7dc43 _field21;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field22;
    struct auto_ptr<cui::RVMDownloader> _field23;
    slot_c916f39b _field24;
    slot_b50ce1c7 _field25;
};

struct RestrictedVMFactory;

struct RestrictedVMNode {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct Signal _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Property<Glib::RefPtr<Glib::Object>> _field15;
    struct Property<bool> _field16;
    struct Inventory *_field17;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field18;
    struct string _field19;
    int _field20;
    _Bool _field21;
    struct string _field22;
    struct FolderNode *_field23;
    _Bool _field24;
    struct RestrictedVM *_field25;
    RefPtr_0f6139b8 _field26;
    struct string _field27;
    struct RestrictedVMFactory *_field28;
};

struct SSHCredentials;

struct SVGA {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field23;
    struct TransactionProperty<unsigned int, cui::ConfigTransaction> _field24;
    struct TransactionProperty<unsigned int, cui::ConfigTransaction> _field25;
    struct TransactionProperty<unsigned int, cui::ConfigTransaction> _field26;
    struct TransactionProperty<cui::Size, cui::ConfigTransaction> _field27;
    struct trackable_callback_list *_field28;
};

struct ScreenWindow;

struct Screenshot {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field1;
    int _field2;
    _Bool _field3;
    int _field4;
    int _field5;
};

struct SearchIndex {
    struct trackable_callback_list *_field1;
    struct DeferredSignal _field2;
    struct DeferredSignal _field3;
    struct map<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>>> _field4;
    struct map<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>>> _field5;
    struct queue<cui::inventory::SearchIndex::IndexTask, std::__1::deque<cui::inventory::SearchIndex::IndexTask, std::__1::allocator<cui::inventory::SearchIndex::IndexTask>>> _field6;
    struct connection _field7;
};

struct SecurePrefs {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct DeferredSignal _field3;
    struct DeferredSignal _field4;
    struct string _field5;
    _Bool _field6;
    struct vector<cui::PreferencePropertyBase *, std::__1::allocator<cui::PreferencePropertyBase *>> _field7;
    slot_b50ce1c7 _field8;
    struct connection _field9;
    struct RememberedHostCredentials _field10;
    struct TrustedCertificates _field11;
    struct CertificatesTypes _field12;
    struct RememberedSSHCredentials _field13;
    struct PreferenceProperty<cui::EncryptedString> _field14;
    struct PreferenceProperty<cui::EncryptedString> _field15;
};

struct SensitiveString {
    struct RefPtr<cui::SensitiveString::Data> mData;
};

struct Serial {
    CDUnknownFunctionPointerType *_field1;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field4;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct string _field7;
    struct Ctx _field8;
    struct connection _field9;
    CDUnknownFunctionPointerType *_field10;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field17;
    _Bool _field18;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field19;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field20;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field21;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field24;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field25;
    struct TransactionProperty<int, cui::ConfigTransaction> _field26;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field27;
    struct WeakPtr<cui::DeviceMgr> _field28;
    struct string _field29;
    struct TransactionProperty<int, cui::ConfigTransaction> _field30;
    struct string _field31;
    struct trackable_callback_list *_field32;
    CDUnknownFunctionPointerType *_field33;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field34;
    CDUnknownFunctionPointerType *_field35;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field36;
    struct TransactionProperty<cui::vmdevice::FileBackend::HostIF, cui::ConfigTransaction> _field37;
    CDUnknownFunctionPointerType *_field38;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field39;
    struct TransactionProperty<cui::vmdevice::PipeBackend::ThisEndpoint, cui::ConfigTransaction> _field40;
    struct TransactionProperty<cui::vmdevice::PipeBackend::OtherEndpoint, cui::ConfigTransaction> _field41;
};

struct ServerKey {
    _Bool remote;
    struct string hostID;
    struct string hostname;
    struct string ipAddress;
    unsigned int port;
    struct string username;
    struct EncryptedString password;
    struct string sslThumbprint;
    struct string trustedCerts;
    struct string webSocket;
    struct string webSocketHttpProxy;
};

struct SharedFolder {
    struct string guestName;
    struct string hostPath;
    struct string shareLabel;
    _Bool enabled;
    _Bool readAccess;
    _Bool writeAccess;
    _Bool sessionExpire;
    struct vector<utf::string, std::__1::allocator<utf::string>> tags;
};

struct SharedFolderConfigMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    RefPtr_7dbef0f3 _field3;
    struct ConfigTransaction *_field4;
};

struct SharedFolderMgr {
    struct trackable_callback_list *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct WeakPtr<cui::VM> _field5;
    struct Ctx _field6;
    struct string _field7;
    struct string _field8;
};

struct SharedFolders {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct set<cui::SharedFolderEntry, std::__1::less<cui::SharedFolderEntry>, std::__1::allocator<cui::SharedFolderEntry>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct set<cui::SharedFolderEntry, std::__1::less<cui::SharedFolderEntry>, std::__1::allocator<cui::SharedFolderEntry>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct Signal {
    struct trackable_callback_list *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    unsigned int _field4;
    _Bool _field5;
};

struct Size {
    int _field1;
    int _field2;
};

struct SlotChain {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct list<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> _field3;
    struct __list_iterator<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> {
        struct __list_node_base<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> *_field1;
    } _field4;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field5;
    struct trackable *_field6;
    struct auto_ptr<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>> _field7;
    struct auto_ptr<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>> _field8;
    _Bool _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    _Bool _field12;
    unsigned int _field13;
};

struct Snapshot {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct VMSnapshot *_field3;
    struct Snapshot *_field4;
    struct list<const cui::Snapshot *, std::__1::allocator<const cui::Snapshot *>> _field5;
    struct SnapshotTree *_field6;
};

struct SnapshotTree {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct Capability _field4;
    struct Capability _field5;
    struct Capability _field6;
    struct Capability _field7;
    struct Capability _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct VM *_field14;
    struct VMSnapshotTree *_field15;
    struct WeakDPtr<cui::DlgMgr> _field16;
    _Bool _field17;
    struct TreeState _field18;
    _Bool _field19;
    struct connection _field20;
    struct vector<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> _field21;
    struct vector<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> _field22;
};

struct SupportedHardwareVersion {
    struct string key;
    struct HardwareVersion hwVersion;
    _Bool canCreate;
    _Bool canUpgrade;
    _Bool isDefault;
    _Bool isNormallyVisible;
};

struct Suppressible {
    CDUnknownFunctionPointerType *_vptr$Suppressible;
    struct string mSuppressId;
};

struct TargetInfo;

struct TaskMgrVIM;

struct TimeUtil_Date {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct TimeUtil_Expiration {
    char _field1;
    struct TimeUtil_Date _field2;
    unsigned int _field3;
};

struct Tracker {
    struct trackable_callback_list *_field1;
    struct trackable *_field2;
    id _field3;
    SEL _field4;
};

struct TransactionProperty<bool, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::DiskBusType, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::DiskType, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::GuestOSInfo, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct GuestOSInfo _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::HardwareVersion, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct HardwareVersion _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::SensitiveString, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct SensitiveString _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::Size, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Size _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::VMConfigPolicies::PolicyProtection, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::Audio::EmulatedDevice, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::ClientBackend::BackingType, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::Controller *, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Controller *_field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::FileBackend::HostIF, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::HardDisk::Mode, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::HotPlug, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::NIC::AddressType, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::NIC::EmulatedDevice, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::NIC::HostIF, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::PipeBackend::OtherEndpoint, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::PipeBackend::ThisEndpoint, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<cui::vmdevice::USBCtlr::PluginAction, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<double, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    double _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<int, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<long, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    long long _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<std::__1::vector<cui::UsbDevice, std::__1::allocator<cui::UsbDevice>>, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<cui::UsbDevice, std::__1::allocator<cui::UsbDevice>> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<unsigned int, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    unsigned int _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<unsigned long, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    unsigned long long _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TransactionProperty<utf::string, cui::ConfigTransaction> {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct string _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    CDUnknownFunctionPointerType *_field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct trackable_callback_list *_field9;
};

struct TreeState {
    struct Snapshot *_field1;
    struct Snapshot *_field2;
    struct Snapshot *_field3;
    struct map<int, cui::Snapshot *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, cui::Snapshot *>>> *_field4;
};

struct TrustedCertificates {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct UIDrawnMKSCommand {
    unsigned int mksWindowId;
    unsigned int ioSurfaceId;
    unsigned int swapRectX;
    unsigned int swapRectY;
    unsigned int swapRectWidth;
    unsigned int swapRectHeight;
    unsigned int surfaceWidth;
    unsigned int surfaceHeight;
    unsigned long long swapCounter;
    char ioSurfaceChanged;
    char opaque;
    char synchronous;
};

struct UIDrawnMKSReply {
    unsigned int _field1;
    int _field2;
};

struct USBCtlr {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field23;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field24;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field25;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field26;
    struct TransactionProperty<cui::vmdevice::USBCtlr::PluginAction, cui::ConfigTransaction> _field27;
    struct TransactionProperty<std::__1::vector<cui::UsbDevice, std::__1::allocator<cui::UsbDevice>>, cui::ConfigTransaction> _field28;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field29;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field30;
    _Bool _field31;
    struct trackable_callback_list *_field32;
};

struct USBDevice {
    struct trackable_callback_list *_field1;
    struct Property<utf::string> _field2;
    struct Property<utf::string> _field3;
    struct Property<utf::string> _field4;
    struct Property<utf::string> _field5;
    struct Property<long long> _field6;
    struct Property<unsigned int> _field7;
    struct Property<unsigned int> _field8;
    struct Property<bool> _field9;
    struct Property<unsigned int> _field10;
    struct Property<bool> _field11;
    struct Property<unsigned int> _field12;
    struct Property<cui::USBDeviceRule *> _field13;
    struct Signal _field14;
    struct string _field15;
    struct connection _field16;
};

struct USBDeviceMgr {
    struct trackable_callback_list *_field1;
    struct signal<void, std::__1::vector<cui::WeakPtr<cui::USBDevice>, std::__1::allocator<cui::WeakPtr<cui::USBDevice>>>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, std::__1::vector<cui::WeakPtr<cui::USBDevice>, std::__1::allocator<cui::WeakPtr<cui::USBDevice>>>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, std::__1::vector<cui::WeakPtr<cui::USBDeviceRule>, std::__1::allocator<cui::WeakPtr<cui::USBDeviceRule>>>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, std::__1::vector<cui::WeakPtr<cui::USBDeviceRule>, std::__1::allocator<cui::WeakPtr<cui::USBDeviceRule>>>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct UsbArbLibHandle *_field6;
    struct AutoContainer<std::__1::list<cui::USBDevice *, std::__1::allocator<cui::USBDevice *>>> _field7;
    struct AutoContainer<std::__1::list<cui::USBDeviceRule *, std::__1::allocator<cui::USBDeviceRule *>>> _field8;
    struct list<cui::USBDeviceMgr::UsbDeviceInfo, std::__1::allocator<cui::USBDeviceMgr::UsbDeviceInfo>> _field9;
    struct UsbTargetEnumInfo _field10;
};

struct USBDeviceRule {
    struct trackable_callback_list *_field1;
    struct Property<unsigned int> _field2;
    struct Property<long long> _field3;
    struct Property<utf::string> _field4;
    struct Property<utf::string> _field5;
    struct Property<cui::USBDevice *> _field6;
    struct Property<cui::USBDeviceRule::TargetType> _field7;
    struct Property<utf::string> _field8;
    struct Signal _field9;
    struct auto_ptr<cui::USBDevice> _field10;
    struct string _field11;
    struct connection _field12;
};

struct USBDisplay {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct map<utf::string, cui::USBDisplayInfo, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::USBDisplayInfo>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct map<utf::string, cui::USBDisplayInfo, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::USBDisplayInfo>>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct UnityCoordinateConverting;

struct UnityInputEvent;

struct UnityMacOSCoordinateConverter {
    CDUnknownFunctionPointerType *_field1;
    double _field2;
    struct Rect _field3;
    struct vector<cui::Rect, std::__1::allocator<cui::Rect>> _field4;
};

struct UnityMgr {
    CDUnknownFunctionPointerType *_field1;
    struct Signal _field2;
    _Bool _field3;
    struct Property<bool> _field4;
    struct Property<bool> _field5;
    struct Property<bool> _field6;
    struct Property<bool> _field7;
    struct Property<bool> _field8;
    struct Property<cui::Color> _field9;
    struct Property<utf::string> _field10;
    struct Property<utf::string> _field11;
    struct Property<bool> _field12;
    struct Property<bool> _field13;
    struct Property<bool> _field14;
    struct Property<bool> _field15;
    struct Property<bool> _field16;
    struct Property<cui::Color> _field17;
    struct Property<utf::string> _field18;
    struct Property<utf::string> _field19;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field20;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field21;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field22;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field23;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field24;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field25;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field26;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field27;
    struct signal<void, const std::__1::vector<cui::WeakPtr<cui::UnityWindow>, std::__1::allocator<cui::WeakPtr<cui::UnityWindow>>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field28;
    struct signal<void, cui::WeakPtr<cui::UnityWindow>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field29;
    struct map<unsigned int, cui::UnityWindow *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::UnityWindow *>>> _field30;
    struct list<unsigned int, std::__1::allocator<unsigned int>> _field31;
    int _field32;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field33;
    struct OptimizedUnityWindowMoveOverlay _field34;
    struct WeakPtr<cui::MKS> _field35;
    struct GuestAppMgr *_field36;
    struct GuestOps *_field37;
    struct UnityTopologyOps *_field38;
    struct UnityCoordinateConverting *_field39;
    int _field40;
    _Bool _field41;
    _Bool _field42;
    struct map<unsigned int, cui::UnityWindow *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::UnityWindow *>>> _field43;
    struct _Region *_field44;
    _Bool _field45;
    struct Size _field46;
    _Bool _field47;
    struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> _field48;
    struct list<unsigned int, std::__1::allocator<unsigned int>> _field49;
    unsigned int _field50;
    _Bool _field51;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field52;
    struct connection _field53;
    struct connection _field54;
    int _field55;
    struct Property<cui::UnityMgr::UnityGrabState> _field56;
    struct connection _field57;
    struct connection _field58;
    struct vector<cui::UnityInputEvent *, std::__1::allocator<cui::UnityInputEvent *>> _field59;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field60;
    struct WeakPtr<cui::Capability> _field61;
    _Bool _field62;
    struct connection _field63;
    unsigned int _field64;
    struct map<int, bool, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, bool>>> _field65;
    struct connection _field66;
    _Bool _field67;
    _Bool _field68;
    id _field69;
    id _field70;
    struct connection _field71;
    _Bool _field72;
    struct connection _field73;
    struct list<unsigned int, std::__1::allocator<unsigned int>> _field74;
    struct list<unsigned int, std::__1::allocator<unsigned int>> _field75;
    int _field76;
    int _field77;
    _Bool _field78;
    _Bool _field79;
    struct trackable_callback_list *_field80;
};

struct UnityTopologyOps {
    CDUnknownFunctionPointerType *_field1;
};

struct UnityWindow {
    CDUnknownFunctionPointerType *_field1;
    struct Property<bool> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, UnityWindowAttribute, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, UnityWindowAttribute, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, UnityIconType, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct Property<UnityWindowType> _field11;
    struct Property<bool> _field12;
    struct Property<bool> _field13;
    struct Property<bool> _field14;
    struct Property<bool> _field15;
    struct Property<bool> _field16;
    struct Property<bool> _field17;
    struct Property<utf::string> _field18;
    struct Property<utf::string> _field19;
    struct Property<utf::string> _field20;
    struct Property<cui::Rect> _field21;
    struct Property<unsigned int> _field22;
    struct Property<std::__1::list<unsigned int, std::__1::allocator<unsigned int>>> _field23;
    struct Property<cui::UnityWindow::DragType> _field24;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field25;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field26;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field27;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field28;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field29;
    struct signal<void, unsigned int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field30;
    struct signal<void, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field31;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field32;
    int _field33;
    _Bool _field34;
    struct Point _field35;
    struct Rect _field36;
    struct Rect _field37;
    int _field38;
    int _field39;
    struct connection _field40;
    int _field41;
    int _field42;
    int _field43;
    int _field44;
    int _field45;
    int _field46;
    struct Rect _field47;
    struct UnityMgr *_field48;
    struct GuestApp *_field49;
    struct _Region *_field50;
    struct Rect _field51;
    _Bool _field52;
    _Bool _field53;
    _Bool _field54;
    _Bool _field55;
    int _field56;
    int _field57;
    unsigned int _field58;
    struct Color _field59;
    struct map<UnityWindowAttribute, bool, std::__1::less<UnityWindowAttribute>, std::__1::allocator<std::__1::pair<const UnityWindowAttribute, bool>>> _field60;
    unsigned int _field61;
    _Bool _field62;
    struct connection _field63;
    struct UnityMgr *_field64;
    id _field65;
    struct connection _field66;
    struct connection _field67;
    _Bool _field68;
    _Bool _field69;
    int _field70;
    _Bool _field71;
    char _field72;
    _Bool _field73;
    _Bool _field74;
    unsigned long long _field75;
    _Bool _field76;
    _Bool _field77;
    _Bool _field78;
    id _field79;
    CDUnknownFunctionPointerType *_field80;
    struct Signal _field81;
    _Bool _field82;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field83;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field84;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field85;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field86;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field87;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field88;
    struct Property<cui::MKSScreenView::RenderingStateType> _field89;
    struct Capability _field90;
    struct Property<cui::Point> _field91;
    struct Property<cui::Size> _field92;
    struct Property<cui::Rect> _field93;
    struct Property<cui::Rect> _field94;
    struct Rect _field95;
    unsigned int _field96;
    shared_ptr_6cb5aa5c _field97;
    int _field98;
    int _field99;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field100;
    unsigned long long _field101;
    unsigned long long _field102;
    int _field103;
    unsigned int _field104;
    _Bool _field105;
    struct string _field106;
    struct Property<cui::MKSScreenView::DisplayMode> _field107;
    struct Property<bool> _field108;
    struct WeakDPtr<cui::MKSWindowTransaction> _field109;
    unsigned int _field110;
    struct WeakPtr<cui::MKSWindowMgr> _field111;
    struct WeakPtr<cui::MKSScreenMgr> _field112;
    struct trackable_callback_list *_field113;
};

struct UpdatesVersionIgnore {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct set<std::__1::pair<utf::string, utf::string>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<utf::string, utf::string>>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct set<std::__1::pair<utf::string, utf::string>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<utf::string, utf::string>>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct UsbArbLibEnumeratedDevice {
    long long _field1;
    char *_field2;
};

struct UsbArbLibHandle;

struct UsbDevice;

struct UsbTargetEnumInfo {
    unsigned int _field1;
    struct vector<cui::USBDeviceMgr::TargetInfo, std::__1::allocator<cui::USBDeviceMgr::TargetInfo>> _field2;
};

struct User;

struct VCAOD;

struct VCAODInventory {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct Signal _field10;
    struct FolderNode *_field11;
    RefPtr_0f6139b8 _field12;
    struct map<utf::string, cui::inventory::Node *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::Node *>>> _field13;
    struct Property<utf::string> _field14;
    struct connection _field15;
    struct connection _field16;
};

struct VDC;

struct VMBackgroundJobMgr;

struct VMBindingGuestAppMgr;

struct VMBindingUnityMgr;

struct VMCapabilities {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Capability _field3;
    struct Capability _field4;
    struct Capability _field5;
    struct Capability _field6;
    struct Capability _field7;
    struct Capability _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Capability _field15;
    struct Capability _field16;
    struct Capability _field17;
    struct Capability _field18;
    struct Capability _field19;
    struct Capability _field20;
    struct Capability _field21;
    struct Capability _field22;
    struct Capability _field23;
    struct Capability _field24;
    struct Capability _field25;
    struct Capability _field26;
    struct Capability _field27;
    struct Capability _field28;
    struct Capability _field29;
    struct Capability _field30;
    struct Capability _field31;
    struct Capability _field32;
    struct Capability _field33;
    struct Capability _field34;
    struct Capability _field35;
    struct Capability _field36;
    struct Capability _field37;
    struct Capability _field38;
    struct Capability _field39;
    struct Capability _field40;
    struct Capability _field41;
    struct Capability _field42;
    struct Capability _field43;
    struct Capability _field44;
    struct Capability _field45;
    struct Capability _field46;
    struct Capability _field47;
    struct Capability _field48;
    struct Capability _field49;
    struct Capability _field50;
    struct Capability _field51;
    struct Capability _field52;
    struct Capability _field53;
    struct Capability _field54;
    struct Capability _field55;
    struct Capability _field56;
    struct Capability _field57;
    struct Capability _field58;
    struct Capability _field59;
    struct Capability _field60;
    struct Capability _field61;
    struct Capability _field62;
    struct Capability _field63;
    struct Capability _field64;
    struct Capability _field65;
    struct Capability _field66;
    struct Capability _field67;
    struct Capability _field68;
    struct Capability _field69;
    struct Capability _field70;
    struct Capability _field71;
    struct Capability _field72;
    struct Capability _field73;
    struct Capability _field74;
    struct Capability _field75;
    struct Capability _field76;
    struct Capability _field77;
    struct Capability _field78;
    struct Capability _field79;
    struct Capability _field80;
    struct Capability _field81;
    struct Capability _field82;
    struct Capability _field83;
    struct Capability _field84;
    struct Capability _field85;
    struct Capability _field86;
    struct Capability _field87;
    struct Capability _field88;
    struct Capability _field89;
    struct Capability _field90;
    struct Capability _field91;
    struct Capability _field92;
    struct Capability _field93;
    struct Capability _field94;
    struct Capability _field95;
    struct Capability _field96;
    struct Capability _field97;
    struct Capability _field98;
    struct Capability _field99;
    struct VM *_field100;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field101;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field102;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field103;
    WeakPtr_682d8722 _field104;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field105;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field106;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field107;
};

struct VMConfig;

struct VMConfigBackendAdapter;

struct VMConfigOptions {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct Property<cui::HardwareVersion> _field4;
    struct Property<cui::Host *> _field5;
    struct Property<bool> _field6;
    struct Property<int> _field7;
    struct Capability _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Capability _field15;
    struct Capability _field16;
    struct Capability _field17;
    struct Capability _field18;
    struct Capability _field19;
    struct Capability _field20;
    struct Capability _field21;
    struct Capability _field22;
    struct Capability _field23;
    struct Capability _field24;
    struct Capability _field25;
    struct Capability _field26;
    struct Capability _field27;
    struct Capability _field28;
    struct Capability _field29;
    struct Capability _field30;
    struct Capability _field31;
    struct Capability _field32;
    struct Capability _field33;
    struct Capability _field34;
    struct Capability _field35;
    struct Capability _field36;
    struct Capability _field37;
    struct Capability _field38;
    struct Capability _field39;
    struct Capability _field40;
    struct Capability _field41;
    struct Capability _field42;
    struct Capability _field43;
    struct Capability _field44;
    struct Capability _field45;
    struct Capability _field46;
    struct Capability _field47;
    struct Capability _field48;
    struct Capability _field49;
    struct Capability _field50;
    struct Capability _field51;
    struct Capability _field52;
    struct Capability _field53;
    struct Capability _field54;
    struct Capability _field55;
    struct Capability _field56;
    struct Capability _field57;
    struct Capability _field58;
    struct Capability _field59;
    struct Capability _field60;
    struct Capability _field61;
    struct Capability _field62;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field63;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field64;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field65;
    RefPtr_7dbef0f3 _field66;
    struct ConfigTransaction *_field67;
};

struct VMConfigPolicies {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field3;
    struct TransactionProperty<cui::VMConfigPolicies::PolicyProtection, cui::ConfigTransaction> _field4;
    struct TransactionProperty<int, cui::ConfigTransaction> _field5;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field11;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field12;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field13;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field14;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field15;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field16;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct TransactionProperty<int, cui::ConfigTransaction> _field19;
    struct TransactionProperty<long, cui::ConfigTransaction> _field20;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field21;
    struct TransactionProperty<long, cui::ConfigTransaction> _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct TransactionProperty<cui::SensitiveString, cui::ConfigTransaction> _field24;
    struct TransactionProperty<cui::SensitiveString, cui::ConfigTransaction> _field25;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field26;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field27;
    struct TransactionProperty<long, cui::ConfigTransaction> _field28;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field29;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field30;
    struct TransactionProperty<int, cui::ConfigTransaction> _field31;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field32;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field33;
    struct TransactionProperty<int, cui::ConfigTransaction> _field34;
    struct TransactionProperty<int, cui::ConfigTransaction> _field35;
    struct TransactionProperty<int, cui::ConfigTransaction> _field36;
    struct TransactionProperty<int, cui::ConfigTransaction> _field37;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field38;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field39;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field40;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field41;
    struct TransactionProperty<int, cui::ConfigTransaction> _field42;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field43;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field44;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field45;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field46;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field47;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field48;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field49;
};

struct VMCreator {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    RefPtr_7dbef0f3 _field3;
    struct VMConfigOptions *_field4;
    struct ConfigTransaction _field5;
    struct Property<bool> _field6;
    struct Property<bool> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct Property<bool> _field9;
    struct Property<bool> _field10;
    struct Property<cui::VMID> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct WeakPtr<cui::VM> _field15;
    WeakPtr_682d8722 _field16;
    struct WeakPtr<cui::vmdevice::CDROM> _field17;
    RefPtr_be7a17d2 _field18;
    struct list<cui::HostMgr::NetworkID, std::__1::allocator<cui::HostMgr::NetworkID>> _field19;
    struct auto_ptr<cui::VMCreatorOps> _field20;
    struct connection _field21;
    struct connection _field22;
    struct connection _field23;
    struct WeakPtr<const cui::GuestOSTable> _field24;
};

struct VMCreatorOps;

struct VMCrypto {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct VM *_field4;
};

struct VMDataModel;

struct VMDeviceMgr {
    CDUnknownFunctionPointerType *_field1;
    unsigned int _field2;
    struct trackable_callback_list *_field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct TransactionProperty<cui::HardwareVersion, cui::ConfigTransaction> _field5;
    struct TransactionProperty<cui::GuestOSInfo, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct list<cui::DeviceMgr::PendingClientDeviceConnect, std::__1::allocator<cui::DeviceMgr::PendingClientDeviceConnect>> _field9;
    struct map<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>, std::__1::less<cui::DeviceType>, std::__1::allocator<std::__1::pair<const cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>>> _field10;
    struct Host *_field11;
    struct WeakDPtr<cui::VM> _field12;
    struct RemoteDeviceMgr *_field13;
    struct HardwareVersion _field14;
    struct string _field15;
    struct GuestOSInfo _field16;
    struct DlgMgr *_field17;
    int _field18;
    struct VMConfigBackendAdapter *_field19;
};

struct VMDownloader {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct WeakPtr<cui::VM> _field3;
    struct WeakPtr<cui::OVFTool> _field4;
    struct WeakPtr<cui::inventory::PlaceholderNode> _field5;
    struct string _field6;
    struct string _field7;
    struct WeakPtr<cui::DlgMgr> _field8;
    _Bool _field9;
};

struct VMEditor {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    RefPtr_7dbef0f3 _field3;
    struct VMConfigOptions *_field4;
    struct ConfigTransaction _field5;
    struct Property<bool> _field6;
    struct WeakPtr<cui::VM> _field7;
    _Bool _field8;
};

struct VMGuest;

struct VMGuestAppLauncher;

struct VMHS;

struct VMHostAppLauncher;

struct VMID {
    WeakPtr_682d8722 mCnx;
    unsigned long long mCnxRawPtr;
    struct string mID;
};

struct VMLed {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    int _field3;
    struct string _field4;
    struct string _field5;
    int _field6;
    struct trackable_callback_list *_field7;
};

struct VMLedMgr {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct WeakPtr<cui::VM> _field3;
    _Bool _field4;
    _Bool _field5;
    struct Ctx _field6;
    struct vector<cui::VMLed *, std::__1::allocator<cui::VMLed *>> _field7;
    struct vector<std::__1::pair<utf::string, cui::WeakPtr<vmdb::Object>>, std::__1::allocator<std::__1::pair<utf::string, cui::WeakPtr<vmdb::Object>>>> _field8;
    struct trackable_callback_list *_field9;
};

struct VMMKS;

struct VMMRU {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct deque<cui::VMMRUEntry, std::__1::allocator<cui::VMMRUEntry>> _field3;
    CDUnknownFunctionPointerType *_field4;
    struct deque<cui::VMMRUEntry, std::__1::allocator<cui::VMMRUEntry>> _field5;
    _Bool _field6;
    struct string _field7;
    CDUnknownFunctionPointerType *_field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct trackable_callback_list *_field11;
};

struct VMMRUEntry;

struct VMMgr {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, cui::VM *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct map<utf::string, cui::VMBackend *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::VMBackend *>>> _field5;
    struct map<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> _field6;
    struct map<cui::VM *, cui::VMMgr::VMItem, std::__1::less<cui::VM *>, std::__1::allocator<std::__1::pair<cui::VM *const, cui::VMMgr::VMItem>>> _field7;
    struct Ctx _field8;
    struct VMHS *_field9;
    struct EncryptionKeyCache _field10;
    struct ProgressMgr *_field11;
};

struct VMNode {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct Signal _field8;
    struct Capability _field9;
    struct Capability _field10;
    struct Capability _field11;
    struct Capability _field12;
    struct Capability _field13;
    struct Capability _field14;
    struct Property<Glib::RefPtr<Glib::Object>> _field15;
    struct Property<bool> _field16;
    struct Inventory *_field17;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field18;
    struct string _field19;
    int _field20;
    _Bool _field21;
    struct string _field22;
    struct FolderNode *_field23;
    _Bool _field24;
    _Bool _field25;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field26;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field27;
    int _field28;
    WeakPtr_682d8722 _field29;
    struct string _field30;
    struct string _field31;
    struct string _field32;
    struct VM *_field33;
    _Bool _field34;
    _Bool _field35;
    _Bool _field36;
    _Bool _field37;
    struct string _field38;
    int _field39;
    struct list<sigc::connection, std::__1::allocator<sigc::connection>> _field40;
    struct connection _field41;
    struct connection _field42;
    struct connection _field43;
    struct Host *_field44;
};

struct VMPolicy {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct Property<bool> _field9;
    struct Property<long long> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct Property<cui::VMPolicy::AuthenticationType> *_field13;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field15;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field16;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field17;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field18;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field19;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field20;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field21;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field22;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field23;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field24;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field25;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field26;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field27;
    struct Property<bool> *_field28;
    struct Property<bool> *_field29;
    struct Property<bool> *_field30;
    struct Property<bool> _field31;
    struct Property<bool> _field32;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field33;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field34;
    struct VM *_field35;
    struct Property<bool> _field36;
    struct Property<bool> _field37;
    struct Property<bool> _field38;
    struct Property<cui::VMPolicy::AuthenticationType> _field39;
    struct WeakPtr<cui::DlgPassword> _field40;
    struct list<cui::VMPolicy::CompletionSlots, std::__1::allocator<cui::VMPolicy::CompletionSlots>> _field41;
};

struct VMPower;

struct VMRCURLInfo {
    struct string username;
    int ticketType;
    struct string ticket;
    struct string hostID;
    struct string moid;
    struct string thumbprint;
    struct string webSocket;
    struct string path;
};

struct VMSnapshot;

struct VMSnapshotTree;

struct VMSnapshots;

struct VMStatus {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct Property<bool> _field8;
    struct ResettableProperty<int> _field9;
    struct Property<utf::string> _field10;
    struct Property<utf::string> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct Property<utf::string> _field13;
    struct Property<bool> _field14;
    struct Property<bool> _field15;
    struct Property<bool> _field16;
    struct Property<bool> _field17;
    struct Property<bool> _field18;
    struct Property<bool> _field19;
    struct Property<bool> _field20;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field21;
    struct Property<bool> _field22;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field23;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field24;
    struct Property<bool> _field25;
    struct Property<bool> _field26;
    struct Property<bool> _field27;
    struct Property<bool> _field28;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field29;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field30;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field31;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field32;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field33;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field34;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field35;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field36;
    struct Property<cui::VMStatus::CopyAndPaste> _field37;
    struct Property<bool> _field38;
    struct ResettableProperty<bool> _field39;
    struct ResettableProperty<bool> _field40;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field41;
    struct Property<cui::SensorMode> _field42;
    struct Property<cui::SensorMode> _field43;
    struct Property<cui::SensorMode> _field44;
    struct Property<cui::SensorMode> _field45;
    struct Property<cui::SensorMode> _field46;
    struct Property<cui::SensorMode> _field47;
    struct Property<cui::SensorMode> _field48;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field49;
    struct Property<cui::KeyboardFilterMode> _field50;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field51;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field52;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field53;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field54;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field55;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field56;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field57;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field58;
    struct Property<std::__1::list<cui::VMStatus::BootOrderItem, std::__1::allocator<cui::VMStatus::BootOrderItem>>> _field59;
    struct Property<std::__1::vector<utf::string, std::__1::allocator<utf::string>>> _field60;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field61;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field62;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field63;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field64;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field65;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field66;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field67;
    struct ResettableProperty<std::__1::vector<cui::VMStatus::User, std::__1::allocator<cui::VMStatus::User>>> _field68;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field69;
    struct Property<bool> _field70;
    struct Property<unsigned int> _field71;
    struct Property<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> _field72;
    struct Property<cui::tools::UpgradePolicy> _field73;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field74;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field75;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field76;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field77;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field78;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field79;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field80;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field81;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field82;
    struct ResettableProperty<bool> _field83;
    struct Property<bool> _field84;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field85;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field86;
    struct Property<utf::string> _field87;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field88;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field89;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field90;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field91;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field92;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field93;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field94;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field95;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field96;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field97;
    struct VM *_field98;
    struct map<utf::string, cui::VMStatus::NetworkConnectionEntry, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::VMStatus::NetworkConnectionEntry>>> _field99;
    struct GuestOSInfo _field100;
    int _field101;
    struct connection _field102;
    struct connection _field103;
    int _field104;
};

struct VMTicketing;

struct VMUploader {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct Property<cui::CnxInfo::APIType> _field3;
    struct Property<Glib::RefPtr<cui::Cnx>> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct Property<utf::string> _field7;
    struct Property<utf::string> _field8;
    struct Property<cui::HostID> _field9;
    struct Property<Glib::RefPtr<Glib::Object>> _field10;
    struct Property<cui::CnxFS::DatastoreInfo> _field11;
    struct Property<utf::string> _field12;
    struct Property<cui::vcloud::VDC *> _field13;
    struct map<cui::WeakPtr<cui::vmdevice::NIC>, utf::string, std::__1::less<cui::WeakPtr<cui::vmdevice::NIC>>, std::__1::allocator<std::__1::pair<const cui::WeakPtr<cui::vmdevice::NIC>, utf::string>>> _field14;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field15;
    struct connection _field16;
    struct connection _field17;
    struct connection _field18;
    struct WeakPtr<cui::VM> _field19;
    struct WeakPtr<cui::OVFTool> _field20;
    struct WeakPtr<const cui::inventory::FolderNode> _field21;
};

struct VMWriter {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    RefPtr_7dbef0f3 _field3;
    struct VMConfigOptions *_field4;
    struct ConfigTransaction _field5;
};

struct VTPM {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct trackable_callback_list *_field23;
};

struct VUsbCamera {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field23;
    struct trackable_callback_list *_field24;
};

struct WeakDPtr<cui::Confirm> {
    struct trackable_callback_list *_field1;
    struct Confirm *_field2;
    struct connection _field3;
};

struct WeakDPtr<cui::DlgMgr> {
    struct trackable_callback_list *_field1;
    struct DlgMgr *_field2;
    struct connection _field3;
};

struct WeakDPtr<cui::MKSWindowTransaction> {
    struct trackable_callback_list *_field1;
    struct MKSWindowTransaction *_field2;
    struct connection _field3;
};

struct WeakDPtr<cui::VM> {
    struct trackable_callback_list *_field1;
    struct VM *_field2;
    struct connection _field3;
};

struct WeakPtr<const cui::GuestOSTable> {
    struct GuestOSTable *_field1;
};

struct WeakPtr<const cui::inventory::FolderNode> {
    struct FolderNode *_field1;
};

struct WeakPtr<cui::Capability> {
    struct Capability *_field1;
};

struct WeakPtr<cui::Cnx> {
    struct Cnx *mTrackable;
};

struct WeakPtr<cui::DeviceMgr> {
    struct DeviceMgr *_field1;
};

struct WeakPtr<cui::DlgMgr> {
    struct DlgMgr *mTrackable;
};

struct WeakPtr<cui::DlgPassword> {
    struct DlgPassword *_field1;
};

struct WeakPtr<cui::FullscreenMgr> {
    struct FullscreenMgr *_field1;
};

struct WeakPtr<cui::GuestAppFactory> {
    struct GuestAppFactory *_field1;
};

struct WeakPtr<cui::GuestOps> {
    struct GuestOps *_field1;
};

struct WeakPtr<cui::MKS> {
    struct MKS *_field1;
};

struct WeakPtr<cui::MKSScreenMgr> {
    struct MKSScreenMgr *_field1;
};

struct WeakPtr<cui::MKSWindowMgr> {
    struct MKSWindowMgr *_field1;
};

struct WeakPtr<cui::OVFTool> {
    struct OVFTool *_field1;
};

struct WeakPtr<cui::USBDevice>;

struct WeakPtr<cui::USBDeviceRule>;

struct WeakPtr<cui::VM> {
    struct VM *_field1;
};

struct WeakPtr<cui::VMTicketing> {
    struct VMTicketing *_field1;
};

struct WeakPtr<cui::dnd::HostCopyPasteDest> {
    struct HostCopyPasteDest *_field1;
};

struct WeakPtr<cui::dnd::HostCopyPasteSrc> {
    struct HostCopyPasteSrc *_field1;
};

struct WeakPtr<cui::dnd::HostDnDDest> {
    struct HostDnDDest *_field1;
};

struct WeakPtr<cui::dnd::HostDnDMgr> {
    struct HostDnDMgr *mTrackable;
};

struct WeakPtr<cui::dnd::HostDnDSrc> {
    struct HostDnDSrc *_field1;
};

struct WeakPtr<cui::dnd::HostFileTransfer> {
    struct HostFileTransfer *_field1;
};

struct WeakPtr<cui::inventory::Inventory> {
    struct Inventory *_field1;
};

struct WeakPtr<cui::inventory::PlaceholderNode> {
    struct PlaceholderNode *_field1;
};

struct WeakPtr<cui::vcloud::Instance> {
    struct Instance *_field1;
};

struct WeakPtr<cui::vmdevice::CDROM> {
    struct CDROM *_field1;
};

struct WeakPtr<vmdbLayout::Cnx> {
    struct Cnx *_field1;
};

struct XHCICtlr {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct trackable_callback_list *_field23;
};

struct _Box {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct _CGLContextObject {
    struct __GLIContextRec *_field1;
    struct __GLIFunctionDispatchRec {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        CDUnknownFunctionPointerType _field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
        CDUnknownFunctionPointerType _field13;
        CDUnknownFunctionPointerType _field14;
        CDUnknownFunctionPointerType _field15;
        CDUnknownFunctionPointerType _field16;
        CDUnknownFunctionPointerType _field17;
        CDUnknownFunctionPointerType _field18;
        CDUnknownFunctionPointerType _field19;
        CDUnknownFunctionPointerType _field20;
        CDUnknownFunctionPointerType _field21;
        CDUnknownFunctionPointerType _field22;
        CDUnknownFunctionPointerType _field23;
        CDUnknownFunctionPointerType _field24;
        CDUnknownFunctionPointerType _field25;
        CDUnknownFunctionPointerType _field26;
        CDUnknownFunctionPointerType _field27;
        CDUnknownFunctionPointerType _field28;
        CDUnknownFunctionPointerType _field29;
        CDUnknownFunctionPointerType _field30;
        CDUnknownFunctionPointerType _field31;
        CDUnknownFunctionPointerType _field32;
        CDUnknownFunctionPointerType _field33;
        CDUnknownFunctionPointerType _field34;
        CDUnknownFunctionPointerType _field35;
        CDUnknownFunctionPointerType _field36;
        CDUnknownFunctionPointerType _field37;
        CDUnknownFunctionPointerType _field38;
        CDUnknownFunctionPointerType _field39;
        CDUnknownFunctionPointerType _field40;
        CDUnknownFunctionPointerType _field41;
        CDUnknownFunctionPointerType _field42;
        CDUnknownFunctionPointerType _field43;
        CDUnknownFunctionPointerType _field44;
        CDUnknownFunctionPointerType _field45;
        CDUnknownFunctionPointerType _field46;
        CDUnknownFunctionPointerType _field47;
        CDUnknownFunctionPointerType _field48;
        CDUnknownFunctionPointerType _field49;
        CDUnknownFunctionPointerType _field50;
        CDUnknownFunctionPointerType _field51;
        CDUnknownFunctionPointerType _field52;
        CDUnknownFunctionPointerType _field53;
        CDUnknownFunctionPointerType _field54;
        CDUnknownFunctionPointerType _field55;
        CDUnknownFunctionPointerType _field56;
        CDUnknownFunctionPointerType _field57;
        CDUnknownFunctionPointerType _field58;
        CDUnknownFunctionPointerType _field59;
        CDUnknownFunctionPointerType _field60;
        CDUnknownFunctionPointerType _field61;
        CDUnknownFunctionPointerType _field62;
        CDUnknownFunctionPointerType _field63;
        CDUnknownFunctionPointerType _field64;
        CDUnknownFunctionPointerType _field65;
        CDUnknownFunctionPointerType _field66;
        CDUnknownFunctionPointerType _field67;
        CDUnknownFunctionPointerType _field68;
        CDUnknownFunctionPointerType _field69;
        CDUnknownFunctionPointerType _field70;
        CDUnknownFunctionPointerType _field71;
        CDUnknownFunctionPointerType _field72;
        CDUnknownFunctionPointerType _field73;
        CDUnknownFunctionPointerType _field74;
        CDUnknownFunctionPointerType _field75;
        CDUnknownFunctionPointerType _field76;
        CDUnknownFunctionPointerType _field77;
        CDUnknownFunctionPointerType _field78;
        CDUnknownFunctionPointerType _field79;
        CDUnknownFunctionPointerType _field80;
        CDUnknownFunctionPointerType _field81;
        CDUnknownFunctionPointerType _field82;
        CDUnknownFunctionPointerType _field83;
        CDUnknownFunctionPointerType _field84;
        CDUnknownFunctionPointerType _field85;
        CDUnknownFunctionPointerType _field86;
        CDUnknownFunctionPointerType _field87;
        CDUnknownFunctionPointerType _field88;
        CDUnknownFunctionPointerType _field89;
        CDUnknownFunctionPointerType _field90;
        CDUnknownFunctionPointerType _field91;
        CDUnknownFunctionPointerType _field92;
        CDUnknownFunctionPointerType _field93;
        CDUnknownFunctionPointerType _field94;
        CDUnknownFunctionPointerType _field95;
        CDUnknownFunctionPointerType _field96;
        CDUnknownFunctionPointerType _field97;
        CDUnknownFunctionPointerType _field98;
        CDUnknownFunctionPointerType _field99;
        CDUnknownFunctionPointerType _field100;
        CDUnknownFunctionPointerType _field101;
        CDUnknownFunctionPointerType _field102;
        CDUnknownFunctionPointerType _field103;
        CDUnknownFunctionPointerType _field104;
        CDUnknownFunctionPointerType _field105;
        CDUnknownFunctionPointerType _field106;
        CDUnknownFunctionPointerType _field107;
        CDUnknownFunctionPointerType _field108;
        CDUnknownFunctionPointerType _field109;
        CDUnknownFunctionPointerType _field110;
        CDUnknownFunctionPointerType _field111;
        CDUnknownFunctionPointerType _field112;
        CDUnknownFunctionPointerType _field113;
        CDUnknownFunctionPointerType _field114;
        CDUnknownFunctionPointerType _field115;
        CDUnknownFunctionPointerType _field116;
        CDUnknownFunctionPointerType _field117;
        CDUnknownFunctionPointerType _field118;
        CDUnknownFunctionPointerType _field119;
        CDUnknownFunctionPointerType _field120;
        CDUnknownFunctionPointerType _field121;
        CDUnknownFunctionPointerType _field122;
        CDUnknownFunctionPointerType _field123;
        CDUnknownFunctionPointerType _field124;
        CDUnknownFunctionPointerType _field125;
        CDUnknownFunctionPointerType _field126;
        CDUnknownFunctionPointerType _field127;
        CDUnknownFunctionPointerType _field128;
        CDUnknownFunctionPointerType _field129;
        CDUnknownFunctionPointerType _field130;
        CDUnknownFunctionPointerType _field131;
        CDUnknownFunctionPointerType _field132;
        CDUnknownFunctionPointerType _field133;
        CDUnknownFunctionPointerType _field134;
        CDUnknownFunctionPointerType _field135;
        CDUnknownFunctionPointerType _field136;
        CDUnknownFunctionPointerType _field137;
        CDUnknownFunctionPointerType _field138;
        CDUnknownFunctionPointerType _field139;
        CDUnknownFunctionPointerType _field140;
        CDUnknownFunctionPointerType _field141;
        CDUnknownFunctionPointerType _field142;
        CDUnknownFunctionPointerType _field143;
        CDUnknownFunctionPointerType _field144;
        CDUnknownFunctionPointerType _field145;
        CDUnknownFunctionPointerType _field146;
        CDUnknownFunctionPointerType _field147;
        CDUnknownFunctionPointerType _field148;
        CDUnknownFunctionPointerType _field149;
        CDUnknownFunctionPointerType _field150;
        CDUnknownFunctionPointerType _field151;
        CDUnknownFunctionPointerType _field152;
        CDUnknownFunctionPointerType _field153;
        CDUnknownFunctionPointerType _field154;
        CDUnknownFunctionPointerType _field155;
        CDUnknownFunctionPointerType _field156;
        CDUnknownFunctionPointerType _field157;
        CDUnknownFunctionPointerType _field158;
        CDUnknownFunctionPointerType _field159;
        CDUnknownFunctionPointerType _field160;
        CDUnknownFunctionPointerType _field161;
        CDUnknownFunctionPointerType _field162;
        CDUnknownFunctionPointerType _field163;
        CDUnknownFunctionPointerType _field164;
        CDUnknownFunctionPointerType _field165;
        CDUnknownFunctionPointerType _field166;
        CDUnknownFunctionPointerType _field167;
        CDUnknownFunctionPointerType _field168;
        CDUnknownFunctionPointerType _field169;
        CDUnknownFunctionPointerType _field170;
        CDUnknownFunctionPointerType _field171;
        CDUnknownFunctionPointerType _field172;
        CDUnknownFunctionPointerType _field173;
        CDUnknownFunctionPointerType _field174;
        CDUnknownFunctionPointerType _field175;
        CDUnknownFunctionPointerType _field176;
        CDUnknownFunctionPointerType _field177;
        CDUnknownFunctionPointerType _field178;
        CDUnknownFunctionPointerType _field179;
        CDUnknownFunctionPointerType _field180;
        CDUnknownFunctionPointerType _field181;
        CDUnknownFunctionPointerType _field182;
        CDUnknownFunctionPointerType _field183;
        CDUnknownFunctionPointerType _field184;
        CDUnknownFunctionPointerType _field185;
        CDUnknownFunctionPointerType _field186;
        CDUnknownFunctionPointerType _field187;
        CDUnknownFunctionPointerType _field188;
        CDUnknownFunctionPointerType _field189;
        CDUnknownFunctionPointerType _field190;
        CDUnknownFunctionPointerType _field191;
        CDUnknownFunctionPointerType _field192;
        CDUnknownFunctionPointerType _field193;
        CDUnknownFunctionPointerType _field194;
        CDUnknownFunctionPointerType _field195;
        CDUnknownFunctionPointerType _field196;
        CDUnknownFunctionPointerType _field197;
        CDUnknownFunctionPointerType _field198;
        CDUnknownFunctionPointerType _field199;
        CDUnknownFunctionPointerType _field200;
        CDUnknownFunctionPointerType _field201;
        CDUnknownFunctionPointerType _field202;
        CDUnknownFunctionPointerType _field203;
        CDUnknownFunctionPointerType _field204;
        CDUnknownFunctionPointerType _field205;
        CDUnknownFunctionPointerType _field206;
        CDUnknownFunctionPointerType _field207;
        CDUnknownFunctionPointerType _field208;
        CDUnknownFunctionPointerType _field209;
        CDUnknownFunctionPointerType _field210;
        CDUnknownFunctionPointerType _field211;
        CDUnknownFunctionPointerType _field212;
        CDUnknownFunctionPointerType _field213;
        CDUnknownFunctionPointerType _field214;
        CDUnknownFunctionPointerType _field215;
        CDUnknownFunctionPointerType _field216;
        CDUnknownFunctionPointerType _field217;
        CDUnknownFunctionPointerType _field218;
        CDUnknownFunctionPointerType _field219;
        CDUnknownFunctionPointerType _field220;
        CDUnknownFunctionPointerType _field221;
        CDUnknownFunctionPointerType _field222;
        CDUnknownFunctionPointerType _field223;
        CDUnknownFunctionPointerType _field224;
        CDUnknownFunctionPointerType _field225;
        CDUnknownFunctionPointerType _field226;
        CDUnknownFunctionPointerType _field227;
        CDUnknownFunctionPointerType _field228;
        CDUnknownFunctionPointerType _field229;
        CDUnknownFunctionPointerType _field230;
        CDUnknownFunctionPointerType _field231;
        CDUnknownFunctionPointerType _field232;
        CDUnknownFunctionPointerType _field233;
        CDUnknownFunctionPointerType _field234;
        CDUnknownFunctionPointerType _field235;
        CDUnknownFunctionPointerType _field236;
        CDUnknownFunctionPointerType _field237;
        CDUnknownFunctionPointerType _field238;
        CDUnknownFunctionPointerType _field239;
        CDUnknownFunctionPointerType _field240;
        CDUnknownFunctionPointerType _field241;
        CDUnknownFunctionPointerType _field242;
        CDUnknownFunctionPointerType _field243;
        CDUnknownFunctionPointerType _field244;
        CDUnknownFunctionPointerType _field245;
        CDUnknownFunctionPointerType _field246;
        CDUnknownFunctionPointerType _field247;
        CDUnknownFunctionPointerType _field248;
        CDUnknownFunctionPointerType _field249;
        CDUnknownFunctionPointerType _field250;
        CDUnknownFunctionPointerType _field251;
        CDUnknownFunctionPointerType _field252;
        CDUnknownFunctionPointerType _field253;
        CDUnknownFunctionPointerType _field254;
        CDUnknownFunctionPointerType _field255;
        CDUnknownFunctionPointerType _field256;
        CDUnknownFunctionPointerType _field257;
        CDUnknownFunctionPointerType _field258;
        CDUnknownFunctionPointerType _field259;
        CDUnknownFunctionPointerType _field260;
        CDUnknownFunctionPointerType _field261;
        CDUnknownFunctionPointerType _field262;
        CDUnknownFunctionPointerType _field263;
        CDUnknownFunctionPointerType _field264;
        CDUnknownFunctionPointerType _field265;
        CDUnknownFunctionPointerType _field266;
        CDUnknownFunctionPointerType _field267;
        CDUnknownFunctionPointerType _field268;
        CDUnknownFunctionPointerType _field269;
        CDUnknownFunctionPointerType _field270;
        CDUnknownFunctionPointerType _field271;
        CDUnknownFunctionPointerType _field272;
        CDUnknownFunctionPointerType _field273;
        CDUnknownFunctionPointerType _field274;
        CDUnknownFunctionPointerType _field275;
        CDUnknownFunctionPointerType _field276;
        CDUnknownFunctionPointerType _field277;
        CDUnknownFunctionPointerType _field278;
        CDUnknownFunctionPointerType _field279;
        CDUnknownFunctionPointerType _field280;
        CDUnknownFunctionPointerType _field281;
        CDUnknownFunctionPointerType _field282;
        CDUnknownFunctionPointerType _field283;
        CDUnknownFunctionPointerType _field284;
        CDUnknownFunctionPointerType _field285;
        CDUnknownFunctionPointerType _field286;
        CDUnknownFunctionPointerType _field287;
        CDUnknownFunctionPointerType _field288;
        CDUnknownFunctionPointerType _field289;
        CDUnknownFunctionPointerType _field290;
        CDUnknownFunctionPointerType _field291;
        CDUnknownFunctionPointerType _field292;
        CDUnknownFunctionPointerType _field293;
        CDUnknownFunctionPointerType _field294;
        CDUnknownFunctionPointerType _field295;
        CDUnknownFunctionPointerType _field296;
        CDUnknownFunctionPointerType _field297;
        CDUnknownFunctionPointerType _field298;
        CDUnknownFunctionPointerType _field299;
        CDUnknownFunctionPointerType _field300;
        CDUnknownFunctionPointerType _field301;
        CDUnknownFunctionPointerType _field302;
        CDUnknownFunctionPointerType _field303;
        CDUnknownFunctionPointerType _field304;
        CDUnknownFunctionPointerType _field305;
        CDUnknownFunctionPointerType _field306;
        CDUnknownFunctionPointerType _field307;
        CDUnknownFunctionPointerType _field308;
        CDUnknownFunctionPointerType _field309;
        CDUnknownFunctionPointerType _field310;
        CDUnknownFunctionPointerType _field311;
        CDUnknownFunctionPointerType _field312;
        CDUnknownFunctionPointerType _field313;
        CDUnknownFunctionPointerType _field314;
        CDUnknownFunctionPointerType _field315;
        CDUnknownFunctionPointerType _field316;
        CDUnknownFunctionPointerType _field317;
        CDUnknownFunctionPointerType _field318;
        CDUnknownFunctionPointerType _field319;
        CDUnknownFunctionPointerType _field320;
        CDUnknownFunctionPointerType _field321;
        CDUnknownFunctionPointerType _field322;
        CDUnknownFunctionPointerType _field323;
        CDUnknownFunctionPointerType _field324;
        CDUnknownFunctionPointerType _field325;
        CDUnknownFunctionPointerType _field326;
        CDUnknownFunctionPointerType _field327;
        CDUnknownFunctionPointerType _field328;
        CDUnknownFunctionPointerType _field329;
        CDUnknownFunctionPointerType _field330;
        CDUnknownFunctionPointerType _field331;
        CDUnknownFunctionPointerType _field332;
        CDUnknownFunctionPointerType _field333;
        CDUnknownFunctionPointerType _field334;
        CDUnknownFunctionPointerType _field335;
        CDUnknownFunctionPointerType _field336;
        CDUnknownFunctionPointerType _field337;
        CDUnknownFunctionPointerType _field338;
        CDUnknownFunctionPointerType _field339;
        CDUnknownFunctionPointerType _field340;
        CDUnknownFunctionPointerType _field341;
        CDUnknownFunctionPointerType _field342;
        CDUnknownFunctionPointerType _field343;
        CDUnknownFunctionPointerType _field344;
        CDUnknownFunctionPointerType _field345;
        CDUnknownFunctionPointerType _field346;
        CDUnknownFunctionPointerType _field347;
        CDUnknownFunctionPointerType _field348;
        CDUnknownFunctionPointerType _field349;
        CDUnknownFunctionPointerType _field350;
        CDUnknownFunctionPointerType _field351;
        CDUnknownFunctionPointerType _field352;
        CDUnknownFunctionPointerType _field353;
        CDUnknownFunctionPointerType _field354;
        CDUnknownFunctionPointerType _field355;
        CDUnknownFunctionPointerType _field356;
        CDUnknownFunctionPointerType _field357;
        CDUnknownFunctionPointerType _field358;
        CDUnknownFunctionPointerType _field359;
        CDUnknownFunctionPointerType _field360;
        CDUnknownFunctionPointerType _field361;
        CDUnknownFunctionPointerType _field362;
        CDUnknownFunctionPointerType _field363;
        CDUnknownFunctionPointerType _field364;
        CDUnknownFunctionPointerType _field365;
        CDUnknownFunctionPointerType _field366;
        CDUnknownFunctionPointerType _field367;
        CDUnknownFunctionPointerType _field368;
        CDUnknownFunctionPointerType _field369;
        CDUnknownFunctionPointerType _field370;
        CDUnknownFunctionPointerType _field371;
        CDUnknownFunctionPointerType _field372;
        CDUnknownFunctionPointerType _field373;
        CDUnknownFunctionPointerType _field374;
        CDUnknownFunctionPointerType _field375;
        CDUnknownFunctionPointerType _field376;
        CDUnknownFunctionPointerType _field377;
        CDUnknownFunctionPointerType _field378;
        CDUnknownFunctionPointerType _field379;
        CDUnknownFunctionPointerType _field380;
        CDUnknownFunctionPointerType _field381;
        CDUnknownFunctionPointerType _field382;
        CDUnknownFunctionPointerType _field383;
        CDUnknownFunctionPointerType _field384;
        CDUnknownFunctionPointerType _field385;
        CDUnknownFunctionPointerType _field386;
        CDUnknownFunctionPointerType _field387;
        CDUnknownFunctionPointerType _field388;
        CDUnknownFunctionPointerType _field389;
        CDUnknownFunctionPointerType _field390;
        CDUnknownFunctionPointerType _field391;
        CDUnknownFunctionPointerType _field392;
        CDUnknownFunctionPointerType _field393;
        CDUnknownFunctionPointerType _field394;
        CDUnknownFunctionPointerType _field395;
        CDUnknownFunctionPointerType _field396;
        CDUnknownFunctionPointerType _field397;
        CDUnknownFunctionPointerType _field398;
        CDUnknownFunctionPointerType _field399;
        CDUnknownFunctionPointerType _field400;
        CDUnknownFunctionPointerType _field401;
        CDUnknownFunctionPointerType _field402;
        CDUnknownFunctionPointerType _field403;
        CDUnknownFunctionPointerType _field404;
        CDUnknownFunctionPointerType _field405;
        CDUnknownFunctionPointerType _field406;
        CDUnknownFunctionPointerType _field407;
        CDUnknownFunctionPointerType _field408;
        CDUnknownFunctionPointerType _field409;
        CDUnknownFunctionPointerType _field410;
        CDUnknownFunctionPointerType _field411;
        CDUnknownFunctionPointerType _field412;
        CDUnknownFunctionPointerType _field413;
        CDUnknownFunctionPointerType _field414;
        CDUnknownFunctionPointerType _field415;
        CDUnknownFunctionPointerType _field416;
        CDUnknownFunctionPointerType _field417;
        CDUnknownFunctionPointerType _field418;
        CDUnknownFunctionPointerType _field419;
        CDUnknownFunctionPointerType _field420;
        CDUnknownFunctionPointerType _field421;
        CDUnknownFunctionPointerType _field422;
        CDUnknownFunctionPointerType _field423;
        CDUnknownFunctionPointerType _field424;
        CDUnknownFunctionPointerType _field425;
        CDUnknownFunctionPointerType _field426;
        CDUnknownFunctionPointerType _field427;
        CDUnknownFunctionPointerType _field428;
        CDUnknownFunctionPointerType _field429;
        CDUnknownFunctionPointerType _field430;
        CDUnknownFunctionPointerType _field431;
        CDUnknownFunctionPointerType _field432;
        CDUnknownFunctionPointerType _field433;
        CDUnknownFunctionPointerType _field434;
        CDUnknownFunctionPointerType _field435;
        CDUnknownFunctionPointerType _field436;
        CDUnknownFunctionPointerType _field437;
        CDUnknownFunctionPointerType _field438;
        CDUnknownFunctionPointerType _field439;
        CDUnknownFunctionPointerType _field440;
        CDUnknownFunctionPointerType _field441;
        CDUnknownFunctionPointerType _field442;
        CDUnknownFunctionPointerType _field443;
        CDUnknownFunctionPointerType _field444;
        CDUnknownFunctionPointerType _field445;
        CDUnknownFunctionPointerType _field446;
        CDUnknownFunctionPointerType _field447;
        CDUnknownFunctionPointerType _field448;
        CDUnknownFunctionPointerType _field449;
        CDUnknownFunctionPointerType _field450;
        CDUnknownFunctionPointerType _field451;
        CDUnknownFunctionPointerType _field452;
        CDUnknownFunctionPointerType _field453;
        CDUnknownFunctionPointerType _field454;
        CDUnknownFunctionPointerType _field455;
        CDUnknownFunctionPointerType _field456;
        CDUnknownFunctionPointerType _field457;
        CDUnknownFunctionPointerType _field458;
        CDUnknownFunctionPointerType _field459;
        CDUnknownFunctionPointerType _field460;
        CDUnknownFunctionPointerType _field461;
        CDUnknownFunctionPointerType _field462;
        CDUnknownFunctionPointerType _field463;
        CDUnknownFunctionPointerType _field464;
        CDUnknownFunctionPointerType _field465;
        CDUnknownFunctionPointerType _field466;
        CDUnknownFunctionPointerType _field467;
        CDUnknownFunctionPointerType _field468;
        CDUnknownFunctionPointerType _field469;
        CDUnknownFunctionPointerType _field470;
        CDUnknownFunctionPointerType _field471;
        CDUnknownFunctionPointerType _field472;
        CDUnknownFunctionPointerType _field473;
        CDUnknownFunctionPointerType _field474;
        CDUnknownFunctionPointerType _field475;
        CDUnknownFunctionPointerType _field476;
        CDUnknownFunctionPointerType _field477;
        CDUnknownFunctionPointerType _field478;
        CDUnknownFunctionPointerType _field479;
        CDUnknownFunctionPointerType _field480;
        CDUnknownFunctionPointerType _field481;
        CDUnknownFunctionPointerType _field482;
        CDUnknownFunctionPointerType _field483;
        CDUnknownFunctionPointerType _field484;
        CDUnknownFunctionPointerType _field485;
        CDUnknownFunctionPointerType _field486;
        CDUnknownFunctionPointerType _field487;
        CDUnknownFunctionPointerType _field488;
        CDUnknownFunctionPointerType _field489;
        CDUnknownFunctionPointerType _field490;
        CDUnknownFunctionPointerType _field491;
        CDUnknownFunctionPointerType _field492;
        CDUnknownFunctionPointerType _field493;
        CDUnknownFunctionPointerType _field494;
        CDUnknownFunctionPointerType _field495;
        CDUnknownFunctionPointerType _field496;
        CDUnknownFunctionPointerType _field497;
        CDUnknownFunctionPointerType _field498;
        CDUnknownFunctionPointerType _field499;
        CDUnknownFunctionPointerType _field500;
        CDUnknownFunctionPointerType _field501;
        CDUnknownFunctionPointerType _field502;
        CDUnknownFunctionPointerType _field503;
        CDUnknownFunctionPointerType _field504;
        CDUnknownFunctionPointerType _field505;
        CDUnknownFunctionPointerType _field506;
        CDUnknownFunctionPointerType _field507;
        CDUnknownFunctionPointerType _field508;
        CDUnknownFunctionPointerType _field509;
        CDUnknownFunctionPointerType _field510;
        CDUnknownFunctionPointerType _field511;
        CDUnknownFunctionPointerType _field512;
        CDUnknownFunctionPointerType _field513;
        CDUnknownFunctionPointerType _field514;
        CDUnknownFunctionPointerType _field515;
        CDUnknownFunctionPointerType _field516;
        CDUnknownFunctionPointerType _field517;
        CDUnknownFunctionPointerType _field518;
        CDUnknownFunctionPointerType _field519;
        CDUnknownFunctionPointerType _field520;
        CDUnknownFunctionPointerType _field521;
        CDUnknownFunctionPointerType _field522;
        CDUnknownFunctionPointerType _field523;
        CDUnknownFunctionPointerType _field524;
        CDUnknownFunctionPointerType _field525;
        CDUnknownFunctionPointerType _field526;
        CDUnknownFunctionPointerType _field527;
        CDUnknownFunctionPointerType _field528;
        CDUnknownFunctionPointerType _field529;
        CDUnknownFunctionPointerType _field530;
        CDUnknownFunctionPointerType _field531;
        CDUnknownFunctionPointerType _field532;
        CDUnknownFunctionPointerType _field533;
        CDUnknownFunctionPointerType _field534;
        CDUnknownFunctionPointerType _field535;
        CDUnknownFunctionPointerType _field536;
        CDUnknownFunctionPointerType _field537;
        CDUnknownFunctionPointerType _field538;
        CDUnknownFunctionPointerType _field539;
        CDUnknownFunctionPointerType _field540;
        CDUnknownFunctionPointerType _field541;
        CDUnknownFunctionPointerType _field542;
        CDUnknownFunctionPointerType _field543;
        CDUnknownFunctionPointerType _field544;
        CDUnknownFunctionPointerType _field545;
        CDUnknownFunctionPointerType _field546;
        CDUnknownFunctionPointerType _field547;
        CDUnknownFunctionPointerType _field548;
        CDUnknownFunctionPointerType _field549;
        CDUnknownFunctionPointerType _field550;
        CDUnknownFunctionPointerType _field551;
        CDUnknownFunctionPointerType _field552;
        CDUnknownFunctionPointerType _field553;
        CDUnknownFunctionPointerType _field554;
        CDUnknownFunctionPointerType _field555;
        CDUnknownFunctionPointerType _field556;
        CDUnknownFunctionPointerType _field557;
        CDUnknownFunctionPointerType _field558;
        CDUnknownFunctionPointerType _field559;
        CDUnknownFunctionPointerType _field560;
        CDUnknownFunctionPointerType _field561;
        CDUnknownFunctionPointerType _field562;
        CDUnknownFunctionPointerType _field563;
        CDUnknownFunctionPointerType _field564;
        CDUnknownFunctionPointerType _field565;
        CDUnknownFunctionPointerType _field566;
        CDUnknownFunctionPointerType _field567;
        CDUnknownFunctionPointerType _field568;
        CDUnknownFunctionPointerType _field569;
        CDUnknownFunctionPointerType _field570;
        CDUnknownFunctionPointerType _field571;
        CDUnknownFunctionPointerType _field572;
        CDUnknownFunctionPointerType _field573;
        CDUnknownFunctionPointerType _field574;
        CDUnknownFunctionPointerType _field575;
        CDUnknownFunctionPointerType _field576;
        CDUnknownFunctionPointerType _field577;
        CDUnknownFunctionPointerType _field578;
        CDUnknownFunctionPointerType _field579;
        CDUnknownFunctionPointerType _field580;
        CDUnknownFunctionPointerType _field581;
        CDUnknownFunctionPointerType _field582;
        CDUnknownFunctionPointerType _field583;
        CDUnknownFunctionPointerType _field584;
        CDUnknownFunctionPointerType _field585;
        CDUnknownFunctionPointerType _field586;
        CDUnknownFunctionPointerType _field587;
        CDUnknownFunctionPointerType _field588;
        CDUnknownFunctionPointerType _field589;
        CDUnknownFunctionPointerType _field590;
        CDUnknownFunctionPointerType _field591;
        CDUnknownFunctionPointerType _field592;
        CDUnknownFunctionPointerType _field593;
        CDUnknownFunctionPointerType _field594;
        CDUnknownFunctionPointerType _field595;
        CDUnknownFunctionPointerType _field596;
        CDUnknownFunctionPointerType _field597;
        CDUnknownFunctionPointerType _field598;
        CDUnknownFunctionPointerType _field599;
        CDUnknownFunctionPointerType _field600;
        CDUnknownFunctionPointerType _field601;
        CDUnknownFunctionPointerType _field602;
        CDUnknownFunctionPointerType _field603;
        CDUnknownFunctionPointerType _field604;
        CDUnknownFunctionPointerType _field605;
        CDUnknownFunctionPointerType _field606;
        CDUnknownFunctionPointerType _field607;
        CDUnknownFunctionPointerType _field608;
        CDUnknownFunctionPointerType _field609;
        CDUnknownFunctionPointerType _field610;
        CDUnknownFunctionPointerType _field611;
        CDUnknownFunctionPointerType _field612;
        CDUnknownFunctionPointerType _field613;
        CDUnknownFunctionPointerType _field614;
        CDUnknownFunctionPointerType _field615;
        CDUnknownFunctionPointerType _field616;
        CDUnknownFunctionPointerType _field617;
        CDUnknownFunctionPointerType _field618;
        CDUnknownFunctionPointerType _field619;
        CDUnknownFunctionPointerType _field620;
        CDUnknownFunctionPointerType _field621;
        CDUnknownFunctionPointerType _field622;
        CDUnknownFunctionPointerType _field623;
        CDUnknownFunctionPointerType _field624;
        CDUnknownFunctionPointerType _field625;
        CDUnknownFunctionPointerType _field626;
        CDUnknownFunctionPointerType _field627;
        CDUnknownFunctionPointerType _field628;
        CDUnknownFunctionPointerType _field629;
        CDUnknownFunctionPointerType _field630;
        CDUnknownFunctionPointerType _field631;
        CDUnknownFunctionPointerType _field632;
        CDUnknownFunctionPointerType _field633;
        CDUnknownFunctionPointerType _field634;
        CDUnknownFunctionPointerType _field635;
        CDUnknownFunctionPointerType _field636;
        CDUnknownFunctionPointerType _field637;
        CDUnknownFunctionPointerType _field638;
        CDUnknownFunctionPointerType _field639;
        CDUnknownFunctionPointerType _field640;
        CDUnknownFunctionPointerType _field641;
        CDUnknownFunctionPointerType _field642;
        CDUnknownFunctionPointerType _field643;
        CDUnknownFunctionPointerType _field644;
        CDUnknownFunctionPointerType _field645;
        CDUnknownFunctionPointerType _field646;
        CDUnknownFunctionPointerType _field647;
        CDUnknownFunctionPointerType _field648;
        CDUnknownFunctionPointerType _field649;
        CDUnknownFunctionPointerType _field650;
        CDUnknownFunctionPointerType _field651;
        CDUnknownFunctionPointerType _field652;
        CDUnknownFunctionPointerType _field653;
        CDUnknownFunctionPointerType _field654;
        CDUnknownFunctionPointerType _field655;
        CDUnknownFunctionPointerType _field656;
        CDUnknownFunctionPointerType _field657;
        CDUnknownFunctionPointerType _field658;
        CDUnknownFunctionPointerType _field659;
        CDUnknownFunctionPointerType _field660;
        CDUnknownFunctionPointerType _field661;
        CDUnknownFunctionPointerType _field662;
        CDUnknownFunctionPointerType _field663;
        CDUnknownFunctionPointerType _field664;
        CDUnknownFunctionPointerType _field665;
        CDUnknownFunctionPointerType _field666;
        CDUnknownFunctionPointerType _field667;
        CDUnknownFunctionPointerType _field668;
        CDUnknownFunctionPointerType _field669;
        CDUnknownFunctionPointerType _field670;
        CDUnknownFunctionPointerType _field671;
        CDUnknownFunctionPointerType _field672;
        CDUnknownFunctionPointerType _field673;
        CDUnknownFunctionPointerType _field674;
        CDUnknownFunctionPointerType _field675;
        CDUnknownFunctionPointerType _field676;
        CDUnknownFunctionPointerType _field677;
        CDUnknownFunctionPointerType _field678;
        CDUnknownFunctionPointerType _field679;
        CDUnknownFunctionPointerType _field680;
        CDUnknownFunctionPointerType _field681;
        CDUnknownFunctionPointerType _field682;
        CDUnknownFunctionPointerType _field683;
        CDUnknownFunctionPointerType _field684;
        CDUnknownFunctionPointerType _field685;
        CDUnknownFunctionPointerType _field686;
        CDUnknownFunctionPointerType _field687;
        CDUnknownFunctionPointerType _field688;
        CDUnknownFunctionPointerType _field689;
        CDUnknownFunctionPointerType _field690;
        CDUnknownFunctionPointerType _field691;
        CDUnknownFunctionPointerType _field692;
        CDUnknownFunctionPointerType _field693;
        CDUnknownFunctionPointerType _field694;
        CDUnknownFunctionPointerType _field695;
        CDUnknownFunctionPointerType _field696;
        CDUnknownFunctionPointerType _field697;
        CDUnknownFunctionPointerType _field698;
        CDUnknownFunctionPointerType _field699;
        CDUnknownFunctionPointerType _field700;
        CDUnknownFunctionPointerType _field701;
        CDUnknownFunctionPointerType _field702;
        CDUnknownFunctionPointerType _field703;
        CDUnknownFunctionPointerType _field704;
        CDUnknownFunctionPointerType _field705;
        CDUnknownFunctionPointerType _field706;
        CDUnknownFunctionPointerType _field707;
        CDUnknownFunctionPointerType _field708;
        CDUnknownFunctionPointerType _field709;
        CDUnknownFunctionPointerType _field710;
        CDUnknownFunctionPointerType _field711;
        CDUnknownFunctionPointerType _field712;
        CDUnknownFunctionPointerType _field713;
        CDUnknownFunctionPointerType _field714;
        CDUnknownFunctionPointerType _field715;
        CDUnknownFunctionPointerType _field716;
        CDUnknownFunctionPointerType _field717;
        CDUnknownFunctionPointerType _field718;
        CDUnknownFunctionPointerType _field719;
        CDUnknownFunctionPointerType _field720;
        CDUnknownFunctionPointerType _field721;
        CDUnknownFunctionPointerType _field722;
        CDUnknownFunctionPointerType _field723;
        CDUnknownFunctionPointerType _field724;
        CDUnknownFunctionPointerType _field725;
        CDUnknownFunctionPointerType _field726;
        CDUnknownFunctionPointerType _field727;
        CDUnknownFunctionPointerType _field728;
        CDUnknownFunctionPointerType _field729;
        CDUnknownFunctionPointerType _field730;
        CDUnknownFunctionPointerType _field731;
        CDUnknownFunctionPointerType _field732;
        CDUnknownFunctionPointerType _field733;
        CDUnknownFunctionPointerType _field734;
        CDUnknownFunctionPointerType _field735;
        CDUnknownFunctionPointerType _field736;
        CDUnknownFunctionPointerType _field737;
        CDUnknownFunctionPointerType _field738;
        CDUnknownFunctionPointerType _field739;
        CDUnknownFunctionPointerType _field740;
        CDUnknownFunctionPointerType _field741;
        CDUnknownFunctionPointerType _field742;
        CDUnknownFunctionPointerType _field743;
        CDUnknownFunctionPointerType _field744;
        CDUnknownFunctionPointerType _field745;
        CDUnknownFunctionPointerType _field746;
        CDUnknownFunctionPointerType _field747;
        CDUnknownFunctionPointerType _field748;
        CDUnknownFunctionPointerType _field749;
        CDUnknownFunctionPointerType _field750;
        CDUnknownFunctionPointerType _field751;
        CDUnknownFunctionPointerType _field752;
        CDUnknownFunctionPointerType _field753;
        CDUnknownFunctionPointerType _field754;
        CDUnknownFunctionPointerType _field755;
        CDUnknownFunctionPointerType _field756;
        CDUnknownFunctionPointerType _field757;
        CDUnknownFunctionPointerType _field758;
        CDUnknownFunctionPointerType _field759;
        CDUnknownFunctionPointerType _field760;
        CDUnknownFunctionPointerType _field761;
        CDUnknownFunctionPointerType _field762;
        CDUnknownFunctionPointerType _field763;
        CDUnknownFunctionPointerType _field764;
        CDUnknownFunctionPointerType _field765;
        CDUnknownFunctionPointerType _field766;
        CDUnknownFunctionPointerType _field767;
        CDUnknownFunctionPointerType _field768;
        CDUnknownFunctionPointerType _field769;
        CDUnknownFunctionPointerType _field770;
        CDUnknownFunctionPointerType _field771;
        CDUnknownFunctionPointerType _field772;
        CDUnknownFunctionPointerType _field773;
        CDUnknownFunctionPointerType _field774;
        CDUnknownFunctionPointerType _field775;
        CDUnknownFunctionPointerType _field776;
        CDUnknownFunctionPointerType _field777;
        CDUnknownFunctionPointerType _field778;
        CDUnknownFunctionPointerType _field779;
        CDUnknownFunctionPointerType _field780;
        CDUnknownFunctionPointerType _field781;
        CDUnknownFunctionPointerType _field782;
        CDUnknownFunctionPointerType _field783;
        CDUnknownFunctionPointerType _field784;
        CDUnknownFunctionPointerType _field785;
        CDUnknownFunctionPointerType _field786;
        CDUnknownFunctionPointerType _field787;
        CDUnknownFunctionPointerType _field788;
        CDUnknownFunctionPointerType _field789;
        CDUnknownFunctionPointerType _field790;
        CDUnknownFunctionPointerType _field791;
        CDUnknownFunctionPointerType _field792;
        CDUnknownFunctionPointerType _field793;
        CDUnknownFunctionPointerType _field794;
        CDUnknownFunctionPointerType _field795;
        CDUnknownFunctionPointerType _field796;
        CDUnknownFunctionPointerType _field797;
        CDUnknownFunctionPointerType _field798;
        CDUnknownFunctionPointerType _field799;
        CDUnknownFunctionPointerType _field800;
        CDUnknownFunctionPointerType _field801;
        CDUnknownFunctionPointerType _field802;
        CDUnknownFunctionPointerType _field803;
        CDUnknownFunctionPointerType _field804;
        CDUnknownFunctionPointerType _field805;
        CDUnknownFunctionPointerType _field806;
        CDUnknownFunctionPointerType _field807;
        CDUnknownFunctionPointerType _field808;
        CDUnknownFunctionPointerType _field809;
        CDUnknownFunctionPointerType _field810;
        CDUnknownFunctionPointerType _field811;
        CDUnknownFunctionPointerType _field812;
        CDUnknownFunctionPointerType _field813;
        CDUnknownFunctionPointerType _field814;
        CDUnknownFunctionPointerType _field815;
        CDUnknownFunctionPointerType _field816;
        CDUnknownFunctionPointerType _field817;
        CDUnknownFunctionPointerType _field818;
        CDUnknownFunctionPointerType _field819;
        CDUnknownFunctionPointerType _field820;
        CDUnknownFunctionPointerType _field821;
        CDUnknownFunctionPointerType _field822;
        CDUnknownFunctionPointerType _field823;
        CDUnknownFunctionPointerType _field824;
        CDUnknownFunctionPointerType _field825;
        CDUnknownFunctionPointerType _field826;
        CDUnknownFunctionPointerType _field827;
        CDUnknownFunctionPointerType _field828;
        CDUnknownFunctionPointerType _field829;
        CDUnknownFunctionPointerType _field830;
        CDUnknownFunctionPointerType _field831;
        CDUnknownFunctionPointerType _field832;
        CDUnknownFunctionPointerType _field833;
        CDUnknownFunctionPointerType _field834;
        CDUnknownFunctionPointerType _field835;
        CDUnknownFunctionPointerType _field836;
        CDUnknownFunctionPointerType _field837;
        CDUnknownFunctionPointerType _field838;
        CDUnknownFunctionPointerType _field839;
        CDUnknownFunctionPointerType _field840;
        CDUnknownFunctionPointerType _field841;
        CDUnknownFunctionPointerType _field842;
        CDUnknownFunctionPointerType _field843;
        CDUnknownFunctionPointerType _field844;
        CDUnknownFunctionPointerType _field845;
        CDUnknownFunctionPointerType _field846;
        CDUnknownFunctionPointerType _field847;
        CDUnknownFunctionPointerType _field848;
        CDUnknownFunctionPointerType _field849;
        CDUnknownFunctionPointerType _field850;
        CDUnknownFunctionPointerType _field851;
        CDUnknownFunctionPointerType _field852;
        CDUnknownFunctionPointerType _field853;
        CDUnknownFunctionPointerType _field854;
        CDUnknownFunctionPointerType _field855;
        CDUnknownFunctionPointerType _field856;
        CDUnknownFunctionPointerType _field857;
        CDUnknownFunctionPointerType _field858;
        CDUnknownFunctionPointerType _field859;
        CDUnknownFunctionPointerType _field860;
        CDUnknownFunctionPointerType _field861;
        CDUnknownFunctionPointerType _field862;
        CDUnknownFunctionPointerType _field863;
        CDUnknownFunctionPointerType _field864;
        CDUnknownFunctionPointerType _field865;
        CDUnknownFunctionPointerType _field866;
        CDUnknownFunctionPointerType _field867;
        CDUnknownFunctionPointerType _field868;
        CDUnknownFunctionPointerType _field869;
        CDUnknownFunctionPointerType _field870;
        CDUnknownFunctionPointerType _field871;
        CDUnknownFunctionPointerType _field872;
        CDUnknownFunctionPointerType _field873;
        CDUnknownFunctionPointerType _field874;
        CDUnknownFunctionPointerType _field875;
        CDUnknownFunctionPointerType _field876;
        CDUnknownFunctionPointerType _field877;
        CDUnknownFunctionPointerType _field878;
        CDUnknownFunctionPointerType _field879;
        CDUnknownFunctionPointerType _field880;
        CDUnknownFunctionPointerType _field881;
        CDUnknownFunctionPointerType _field882;
        CDUnknownFunctionPointerType _field883;
        CDUnknownFunctionPointerType _field884;
        CDUnknownFunctionPointerType _field885;
        CDUnknownFunctionPointerType _field886;
        CDUnknownFunctionPointerType _field887;
        CDUnknownFunctionPointerType _field888;
        CDUnknownFunctionPointerType _field889;
        CDUnknownFunctionPointerType _field890;
        CDUnknownFunctionPointerType _field891;
        CDUnknownFunctionPointerType _field892;
        CDUnknownFunctionPointerType _field893;
        CDUnknownFunctionPointerType _field894;
        CDUnknownFunctionPointerType _field895;
        CDUnknownFunctionPointerType _field896;
        CDUnknownFunctionPointerType _field897;
        CDUnknownFunctionPointerType _field898;
        CDUnknownFunctionPointerType _field899;
        CDUnknownFunctionPointerType _field900;
        CDUnknownFunctionPointerType _field901;
        CDUnknownFunctionPointerType _field902;
        CDUnknownFunctionPointerType _field903;
        CDUnknownFunctionPointerType _field904;
        CDUnknownFunctionPointerType _field905;
        CDUnknownFunctionPointerType _field906;
        CDUnknownFunctionPointerType _field907;
        CDUnknownFunctionPointerType _field908;
        CDUnknownFunctionPointerType _field909;
        CDUnknownFunctionPointerType _field910;
        CDUnknownFunctionPointerType _field911;
        CDUnknownFunctionPointerType _field912;
        CDUnknownFunctionPointerType _field913;
        CDUnknownFunctionPointerType _field914;
        CDUnknownFunctionPointerType _field915;
        CDUnknownFunctionPointerType _field916;
        CDUnknownFunctionPointerType _field917;
        CDUnknownFunctionPointerType _field918;
        CDUnknownFunctionPointerType _field919;
        CDUnknownFunctionPointerType _field920;
        CDUnknownFunctionPointerType _field921;
        CDUnknownFunctionPointerType _field922;
        CDUnknownFunctionPointerType _field923;
        CDUnknownFunctionPointerType _field924;
        CDUnknownFunctionPointerType _field925;
        CDUnknownFunctionPointerType _field926;
        CDUnknownFunctionPointerType _field927;
        CDUnknownFunctionPointerType _field928;
        CDUnknownFunctionPointerType _field929;
        CDUnknownFunctionPointerType _field930;
        CDUnknownFunctionPointerType _field931;
        CDUnknownFunctionPointerType _field932;
        CDUnknownFunctionPointerType _field933;
        CDUnknownFunctionPointerType _field934;
        CDUnknownFunctionPointerType _field935;
        CDUnknownFunctionPointerType _field936;
        CDUnknownFunctionPointerType _field937;
        CDUnknownFunctionPointerType _field938;
        CDUnknownFunctionPointerType _field939;
        CDUnknownFunctionPointerType _field940;
        CDUnknownFunctionPointerType _field941;
        CDUnknownFunctionPointerType _field942;
        CDUnknownFunctionPointerType _field943;
        CDUnknownFunctionPointerType _field944;
        CDUnknownFunctionPointerType _field945;
        CDUnknownFunctionPointerType _field946;
        CDUnknownFunctionPointerType _field947;
        CDUnknownFunctionPointerType _field948;
        CDUnknownFunctionPointerType _field949;
        CDUnknownFunctionPointerType _field950;
        CDUnknownFunctionPointerType _field951;
        CDUnknownFunctionPointerType _field952;
        CDUnknownFunctionPointerType _field953;
        CDUnknownFunctionPointerType _field954;
        CDUnknownFunctionPointerType _field955;
        CDUnknownFunctionPointerType _field956;
        CDUnknownFunctionPointerType _field957;
        CDUnknownFunctionPointerType _field958;
        CDUnknownFunctionPointerType _field959;
        CDUnknownFunctionPointerType _field960;
        CDUnknownFunctionPointerType _field961;
        CDUnknownFunctionPointerType _field962;
        CDUnknownFunctionPointerType _field963;
        CDUnknownFunctionPointerType _field964;
        CDUnknownFunctionPointerType _field965;
        CDUnknownFunctionPointerType _field966;
        CDUnknownFunctionPointerType _field967;
        CDUnknownFunctionPointerType _field968;
        CDUnknownFunctionPointerType _field969;
        CDUnknownFunctionPointerType _field970;
        CDUnknownFunctionPointerType _field971;
        CDUnknownFunctionPointerType _field972;
        CDUnknownFunctionPointerType _field973;
        CDUnknownFunctionPointerType _field974;
    } _field2;
    struct _CGLPrivateObject *_field3;
    void *_field4;
};

struct _CGLPrivateObject;

struct _CdsClient;

struct _GArray;

struct _GObject;

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct _RegData;

struct _Region {
    struct _Box _field1;
    struct _RegData *_field2;
};

struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<utf::string, void *>>> {
    struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
};

struct __list_iterator<Glib::RefPtr<cui::progress::Progress>, void *> {
    struct __list_node_base<Glib::RefPtr<cui::progress::Progress>, void *> *_field1;
};

struct __list_iterator<cui::inventory::Node *, void *> {
    struct __list_node_base<cui::inventory::Node *, void *> *_field1;
};

struct __list_node_base<Glib::RefPtr<cui::progress::Progress>, void *> {
    struct __list_node_base<Glib::RefPtr<cui::progress::Progress>, void *> *_field1;
    struct __list_node_base<Glib::RefPtr<cui::progress::Progress>, void *> *_field2;
};

struct __list_node_base<boost::shared_ptr<const cui::Capability::FailureReason>, void *> {
    struct __list_node_base<boost::shared_ptr<const cui::Capability::FailureReason>, void *> *__prev_;
    struct __list_node_base<boost::shared_ptr<const cui::Capability::FailureReason>, void *> *__next_;
};

struct __list_node_base<const cui::Snapshot *, void *> {
    struct __list_node_base<const cui::Snapshot *, void *> *_field1;
    struct __list_node_base<const cui::Snapshot *, void *> *_field2;
};

struct __list_node_base<cui::CnxFS::File, void *> {
    struct __list_node_base<cui::CnxFS::File, void *> *_field1;
    struct __list_node_base<cui::CnxFS::File, void *> *_field2;
};

struct __list_node_base<cui::Component::ComponentMgrDownloadJob, void *> {
    struct __list_node_base<cui::Component::ComponentMgrDownloadJob, void *> *_field1;
    struct __list_node_base<cui::Component::ComponentMgrDownloadJob, void *> *_field2;
};

struct __list_node_base<cui::DeviceMgr::PendingClientDeviceConnect, void *> {
    struct __list_node_base<cui::DeviceMgr::PendingClientDeviceConnect, void *> *_field1;
    struct __list_node_base<cui::DeviceMgr::PendingClientDeviceConnect, void *> *_field2;
};

struct __list_node_base<cui::DownloadMgr::ConnectRequest, void *> {
    struct __list_node_base<cui::DownloadMgr::ConnectRequest, void *> *_field1;
    struct __list_node_base<cui::DownloadMgr::ConnectRequest, void *> *_field2;
};

struct __list_node_base<cui::DownloadMgr::RefreshRequest, void *> {
    struct __list_node_base<cui::DownloadMgr::RefreshRequest, void *> *_field1;
    struct __list_node_base<cui::DownloadMgr::RefreshRequest, void *> *_field2;
};

struct __list_node_base<cui::GuestApp::FileHandler, void *> {
    struct __list_node_base<cui::GuestApp::FileHandler, void *> *_field1;
    struct __list_node_base<cui::GuestApp::FileHandler, void *> *_field2;
};

struct __list_node_base<cui::GuestApp::Icon, void *> {
    struct __list_node_base<cui::GuestApp::Icon, void *> *_field1;
    struct __list_node_base<cui::GuestApp::Icon, void *> *_field2;
};

struct __list_node_base<cui::GuestApp::URLHandler, void *> {
    struct __list_node_base<cui::GuestApp::URLHandler, void *> *_field1;
    struct __list_node_base<cui::GuestApp::URLHandler, void *> *_field2;
};

struct __list_node_base<cui::GuestAppMgr::LaunchMenuItem *, void *> {
    struct __list_node_base<cui::GuestAppMgr::LaunchMenuItem *, void *> *_field1;
    struct __list_node_base<cui::GuestAppMgr::LaunchMenuItem *, void *> *_field2;
};

struct __list_node_base<cui::HostMgr::NetworkID, void *> {
    struct __list_node_base<cui::HostMgr::NetworkID, void *> *_field1;
    struct __list_node_base<cui::HostMgr::NetworkID, void *> *_field2;
};

struct __list_node_base<cui::NamedPVN, void *> {
    struct __list_node_base<cui::NamedPVN, void *> *_field1;
    struct __list_node_base<cui::NamedPVN, void *> *_field2;
};

struct __list_node_base<cui::Partition, void *> {
    struct __list_node_base<cui::Partition, void *> *__prev_;
    struct __list_node_base<cui::Partition, void *> *__next_;
};

struct __list_node_base<cui::PerVMHotKey, void *> {
    struct __list_node_base<cui::PerVMHotKey, void *> *_field1;
    struct __list_node_base<cui::PerVMHotKey, void *> *_field2;
};

struct __list_node_base<cui::USBDevice *, void *> {
    struct __list_node_base<cui::USBDevice *, void *> *_field1;
    struct __list_node_base<cui::USBDevice *, void *> *_field2;
};

struct __list_node_base<cui::USBDeviceMgr::UsbDeviceInfo, void *> {
    struct __list_node_base<cui::USBDeviceMgr::UsbDeviceInfo, void *> *_field1;
    struct __list_node_base<cui::USBDeviceMgr::UsbDeviceInfo, void *> *_field2;
};

struct __list_node_base<cui::USBDeviceRule *, void *> {
    struct __list_node_base<cui::USBDeviceRule *, void *> *_field1;
    struct __list_node_base<cui::USBDeviceRule *, void *> *_field2;
};

struct __list_node_base<cui::VMPolicy::CompletionSlots, void *> {
    struct __list_node_base<cui::VMPolicy::CompletionSlots, void *> *_field1;
    struct __list_node_base<cui::VMPolicy::CompletionSlots, void *> *_field2;
};

struct __list_node_base<cui::VMStatus::BootOrderItem, void *> {
    struct __list_node_base<cui::VMStatus::BootOrderItem, void *> *_field1;
    struct __list_node_base<cui::VMStatus::BootOrderItem, void *> *_field2;
};

struct __list_node_base<cui::inventory::Node *, void *> {
    struct __list_node_base<cui::inventory::Node *, void *> *_field1;
    struct __list_node_base<cui::inventory::Node *, void *> *_field2;
};

struct __list_node_base<dui::Displayable *, void *> {
    struct __list_node_base<dui::Displayable *, void *> *_field1;
    struct __list_node_base<dui::Displayable *, void *> *_field2;
};

struct __list_node_base<sigc::connection, void *> {
    struct __list_node_base<sigc::connection, void *> *_field1;
    struct __list_node_base<sigc::connection, void *> *_field2;
};

struct __list_node_base<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> {
    struct __list_node_base<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> *__prev_;
    struct __list_node_base<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> *__next_;
};

struct __list_node_base<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> {
    struct __list_node_base<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> *_field1;
    struct __list_node_base<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> *_field2;
};

struct __list_node_base<std::__1::pair<utf::string, int>, void *> {
    struct __list_node_base<std::__1::pair<utf::string, int>, void *> *_field1;
    struct __list_node_base<std::__1::pair<utf::string, int>, void *> *_field2;
};

struct __list_node_base<unsigned int, void *> {
    struct __list_node_base<unsigned int, void *> *_field1;
    struct __list_node_base<unsigned int, void *> *_field2;
};

struct __list_node_base<utf::string, void *> {
    struct __list_node_base<utf::string, void *> *__prev_;
    struct __list_node_base<utf::string, void *> *__next_;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *_field1;
};

struct __tree_node<utf::string, void *>;

struct __va_list_tag {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
    void *_field4;
};

struct auto_ptr<cui::ChildProcess> {
    struct ChildProcess *_field1;
};

struct auto_ptr<cui::CnxCapabilities> {
    struct CnxCapabilities *_field1;
};

struct auto_ptr<cui::LineBuffer> {
    struct LineBuffer *_field1;
};

struct auto_ptr<cui::MKSScreenMgr> {
    struct MKSScreenMgr *_field1;
};

struct auto_ptr<cui::MKSScreenView> {
    struct MKSScreenView *_field1;
};

struct auto_ptr<cui::MKSWindowMgr> {
    struct MKSWindowMgr *_field1;
};

struct auto_ptr<cui::RVMDownloader> {
    struct RVMDownloader *_field1;
};

struct auto_ptr<cui::USBDevice> {
    struct USBDevice *_field1;
};

struct auto_ptr<cui::VMCreatorOps> {
    struct VMCreatorOps *_field1;
};

struct auto_ptr<mksctrl::MKSControlClient> {
    struct MKSControlClient *_field1;
};

struct auto_ptr<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>> {
    slot_c916f39b *_field1;
};

struct auto_ptr<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>> {
    slot_b50ce1c7 *_field1;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __first_;
    } __r_;
};

struct connection {
    struct slot_base *slot_;
};

struct deque<cui::RemoteMessager::QueuedMsg, std::__1::allocator<cui::RemoteMessager::QueuedMsg>> {
    struct __split_buffer<cui::RemoteMessager::QueuedMsg *, std::__1::allocator<cui::RemoteMessager::QueuedMsg *>> {
        struct QueuedMsg **_field1;
        struct QueuedMsg **_field2;
        struct QueuedMsg **_field3;
        struct __compressed_pair<cui::RemoteMessager::QueuedMsg **, std::__1::allocator<cui::RemoteMessager::QueuedMsg *>> {
            struct QueuedMsg **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<cui::RemoteMessager::QueuedMsg>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<cui::VMMRUEntry, std::__1::allocator<cui::VMMRUEntry>> {
    struct __split_buffer<cui::VMMRUEntry *, std::__1::allocator<cui::VMMRUEntry *>> {
        struct VMMRUEntry **_field1;
        struct VMMRUEntry **_field2;
        struct VMMRUEntry **_field3;
        struct __compressed_pair<cui::VMMRUEntry **, std::__1::allocator<cui::VMMRUEntry *>> {
            struct VMMRUEntry **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<cui::VMMRUEntry>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<cui::inventory::SearchIndex::IndexTask, std::__1::allocator<cui::inventory::SearchIndex::IndexTask>> {
    struct __split_buffer<cui::inventory::SearchIndex::IndexTask *, std::__1::allocator<cui::inventory::SearchIndex::IndexTask *>> {
        struct IndexTask **_field1;
        struct IndexTask **_field2;
        struct IndexTask **_field3;
        struct __compressed_pair<cui::inventory::SearchIndex::IndexTask **, std::__1::allocator<cui::inventory::SearchIndex::IndexTask *>> {
            struct IndexTask **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<cui::inventory::SearchIndex::IndexTask>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
    struct __split_buffer<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*>> {
        slot_b50ce1c7 **_field1;
        slot_b50ce1c7 **_field2;
        slot_b50ce1c7 **_field3;
        struct __compressed_pair<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>**, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*>> {
            slot_b50ce1c7 **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
        unsigned long long _field1;
    } _field3;
};

struct list<Glib::RefPtr<cui::progress::Progress>, std::__1::allocator<Glib::RefPtr<cui::progress::Progress>>> {
    struct __list_node_base<Glib::RefPtr<cui::progress::Progress>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<Glib::RefPtr<cui::progress::Progress>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<boost::shared_ptr<const cui::Capability::FailureReason>, std::__1::allocator<boost::shared_ptr<const cui::Capability::FailureReason>>> {
    struct __list_node_base<boost::shared_ptr<const cui::Capability::FailureReason>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<boost::shared_ptr<const cui::Capability::FailureReason>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<const cui::Snapshot *, std::__1::allocator<const cui::Snapshot *>> {
    struct __list_node_base<const cui::Snapshot *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<const cui::Snapshot *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::CnxFS::File, std::__1::allocator<cui::CnxFS::File>> {
    struct __list_node_base<cui::CnxFS::File, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::CnxFS::File, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::Component::ComponentMgrDownloadJob, std::__1::allocator<cui::Component::ComponentMgrDownloadJob>> {
    struct __list_node_base<cui::Component::ComponentMgrDownloadJob, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::Component::ComponentMgrDownloadJob, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::DeviceMgr::PendingClientDeviceConnect, std::__1::allocator<cui::DeviceMgr::PendingClientDeviceConnect>> {
    struct __list_node_base<cui::DeviceMgr::PendingClientDeviceConnect, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::DeviceMgr::PendingClientDeviceConnect, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::DownloadMgr::ConnectRequest, std::__1::allocator<cui::DownloadMgr::ConnectRequest>> {
    struct __list_node_base<cui::DownloadMgr::ConnectRequest, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::DownloadMgr::ConnectRequest, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::DownloadMgr::RefreshRequest, std::__1::allocator<cui::DownloadMgr::RefreshRequest>> {
    struct __list_node_base<cui::DownloadMgr::RefreshRequest, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::DownloadMgr::RefreshRequest, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::GuestApp::FileHandler, std::__1::allocator<cui::GuestApp::FileHandler>> {
    struct __list_node_base<cui::GuestApp::FileHandler, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::GuestApp::FileHandler, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::GuestApp::Icon, std::__1::allocator<cui::GuestApp::Icon>> {
    struct __list_node_base<cui::GuestApp::Icon, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::GuestApp::Icon, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::GuestApp::URLHandler, std::__1::allocator<cui::GuestApp::URLHandler>> {
    struct __list_node_base<cui::GuestApp::URLHandler, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::GuestApp::URLHandler, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::GuestAppMgr::LaunchMenuItem *, std::__1::allocator<cui::GuestAppMgr::LaunchMenuItem *>> {
    struct __list_node_base<cui::GuestAppMgr::LaunchMenuItem *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::GuestAppMgr::LaunchMenuItem *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::HostMgr::NetworkID, std::__1::allocator<cui::HostMgr::NetworkID>> {
    struct __list_node_base<cui::HostMgr::NetworkID, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::HostMgr::NetworkID, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::NamedPVN, std::__1::allocator<cui::NamedPVN>> {
    struct __list_node_base<cui::NamedPVN, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::NamedPVN, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::Partition, std::__1::allocator<cui::Partition>> {
    struct __list_node_base<cui::Partition, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::Partition, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<cui::PerVMHotKey, std::__1::allocator<cui::PerVMHotKey>> {
    struct __list_node_base<cui::PerVMHotKey, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::PerVMHotKey, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::USBDevice *, std::__1::allocator<cui::USBDevice *>> {
    struct __list_node_base<cui::USBDevice *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::USBDevice *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::USBDeviceMgr::UsbDeviceInfo, std::__1::allocator<cui::USBDeviceMgr::UsbDeviceInfo>> {
    struct __list_node_base<cui::USBDeviceMgr::UsbDeviceInfo, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::USBDeviceMgr::UsbDeviceInfo, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::USBDeviceRule *, std::__1::allocator<cui::USBDeviceRule *>> {
    struct __list_node_base<cui::USBDeviceRule *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::USBDeviceRule *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::VMPolicy::CompletionSlots, std::__1::allocator<cui::VMPolicy::CompletionSlots>> {
    struct __list_node_base<cui::VMPolicy::CompletionSlots, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::VMPolicy::CompletionSlots, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::VMStatus::BootOrderItem, std::__1::allocator<cui::VMStatus::BootOrderItem>> {
    struct __list_node_base<cui::VMStatus::BootOrderItem, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::VMStatus::BootOrderItem, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<cui::inventory::Node *, std::__1::allocator<cui::inventory::Node *>> {
    struct __list_node_base<cui::inventory::Node *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::inventory::Node *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<dui::Displayable *, std::__1::allocator<dui::Displayable *>> {
    struct __list_node_base<dui::Displayable *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<dui::Displayable *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<sigc::connection, std::__1::allocator<sigc::connection>> {
    struct __list_node_base<sigc::connection, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigc::connection, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
    struct __list_node_base<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigc::slot<bool, cui::Capability::FailureReasonList &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct list<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
    struct __list_node_base<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigc::slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<utf::string, int>, std::__1::allocator<std::__1::pair<utf::string, int>>> {
    struct __list_node_base<std::__1::pair<utf::string, int>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<utf::string, int>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<unsigned int, std::__1::allocator<unsigned int>> {
    struct __list_node_base<unsigned int, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<unsigned int, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<utf::string, std::__1::allocator<utf::string>> {
    struct __list_node_base<utf::string, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<utf::string, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<UnityWindowAttribute, bool, std::__1::less<UnityWindowAttribute>, std::__1::allocator<std::__1::pair<const UnityWindowAttribute, bool>>> {
    struct __tree<std::__1::__value_type<UnityWindowAttribute, bool>, std::__1::__map_value_compare<UnityWindowAttribute, std::__1::__value_type<UnityWindowAttribute, bool>, std::__1::less<UnityWindowAttribute>, true>, std::__1::allocator<std::__1::__value_type<UnityWindowAttribute, bool>>> {
        struct __tree_node<std::__1::__value_type<UnityWindowAttribute, bool>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UnityWindowAttribute, bool>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UnityWindowAttribute, std::__1::__value_type<UnityWindowAttribute, bool>, std::__1::less<UnityWindowAttribute>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *, std::__1::less<const cui::ConfigTransaction *>, std::__1::allocator<std::__1::pair<const cui::ConfigTransaction *const, cui::vmdevice::DeviceListBase::TransactionState *>>> {
    struct __tree<std::__1::__value_type<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *>, std::__1::__map_value_compare<const cui::ConfigTransaction *, std::__1::__value_type<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *>, std::__1::less<const cui::ConfigTransaction *>, true>, std::__1::allocator<std::__1::__value_type<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *>>> {
        struct __tree_node<std::__1::__value_type<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const cui::ConfigTransaction *, std::__1::__value_type<const cui::ConfigTransaction *, cui::vmdevice::DeviceListBase::TransactionState *>, std::__1::less<const cui::ConfigTransaction *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *, std::__1::less<const cui::PropertyBase *>, std::__1::allocator<std::__1::pair<const cui::PropertyBase *const, cui::ConfigTransaction::ValueBase *>>> {
    struct __tree<std::__1::__value_type<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *>, std::__1::__map_value_compare<const cui::PropertyBase *, std::__1::__value_type<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *>, std::__1::less<const cui::PropertyBase *>, true>, std::__1::allocator<std::__1::__value_type<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *>>> {
        struct __tree_node<std::__1::__value_type<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const cui::PropertyBase *, std::__1::__value_type<const cui::PropertyBase *, cui::ConfigTransaction::ValueBase *>, std::__1::less<const cui::PropertyBase *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<const cui::inventory::Node *, int, std::__1::less<const cui::inventory::Node *>, std::__1::allocator<std::__1::pair<const cui::inventory::Node *const, int>>> {
    struct __tree<std::__1::__value_type<const cui::inventory::Node *, int>, std::__1::__map_value_compare<const cui::inventory::Node *, std::__1::__value_type<const cui::inventory::Node *, int>, std::__1::less<const cui::inventory::Node *>, true>, std::__1::allocator<std::__1::__value_type<const cui::inventory::Node *, int>>> {
        struct __tree_node<std::__1::__value_type<const cui::inventory::Node *, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const cui::inventory::Node *, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const cui::inventory::Node *, std::__1::__value_type<const cui::inventory::Node *, int>, std::__1::less<const cui::inventory::Node *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>, std::__1::less<cui::Cnx *>, std::__1::allocator<std::__1::pair<cui::Cnx *const, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> {
    struct __tree<std::__1::__value_type<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::__map_value_compare<cui::Cnx *, std::__1::__value_type<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::less<cui::Cnx *>, true>, std::__1::allocator<std::__1::__value_type<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> {
        struct __tree_node<std::__1::__value_type<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::Cnx *, std::__1::__value_type<cui::Cnx *, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::less<cui::Cnx *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::CnxMgr::CnxID, cui::CnxMgr::Item *, std::__1::less<cui::CnxMgr::CnxID>, std::__1::allocator<std::__1::pair<const cui::CnxMgr::CnxID, cui::CnxMgr::Item *>>> {
    struct __tree<std::__1::__value_type<cui::CnxMgr::CnxID, cui::CnxMgr::Item *>, std::__1::__map_value_compare<cui::CnxMgr::CnxID, std::__1::__value_type<cui::CnxMgr::CnxID, cui::CnxMgr::Item *>, std::__1::less<cui::CnxMgr::CnxID>, true>, std::__1::allocator<std::__1::__value_type<cui::CnxMgr::CnxID, cui::CnxMgr::Item *>>> {
        struct __tree_node<std::__1::__value_type<cui::CnxMgr::CnxID, cui::CnxMgr::Item *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::CnxMgr::CnxID, cui::CnxMgr::Item *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::CnxMgr::CnxID, std::__1::__value_type<cui::CnxMgr::CnxID, cui::CnxMgr::Item *>, std::__1::less<cui::CnxMgr::CnxID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::ConfigTransaction *, sigc::connection, std::__1::less<cui::ConfigTransaction *>, std::__1::allocator<std::__1::pair<cui::ConfigTransaction *const, sigc::connection>>> {
    struct __tree<std::__1::__value_type<cui::ConfigTransaction *, sigc::connection>, std::__1::__map_value_compare<cui::ConfigTransaction *, std::__1::__value_type<cui::ConfigTransaction *, sigc::connection>, std::__1::less<cui::ConfigTransaction *>, true>, std::__1::allocator<std::__1::__value_type<cui::ConfigTransaction *, sigc::connection>>> {
        struct __tree_node<std::__1::__value_type<cui::ConfigTransaction *, sigc::connection>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::ConfigTransaction *, sigc::connection>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::ConfigTransaction *, std::__1::__value_type<cui::ConfigTransaction *, sigc::connection>, std::__1::less<cui::ConfigTransaction *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>, std::__1::less<cui::DeviceType>, std::__1::allocator<std::__1::pair<const cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>>> {
    struct __tree<std::__1::__value_type<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>, std::__1::__map_value_compare<cui::DeviceType, std::__1::__value_type<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>, std::__1::less<cui::DeviceType>, true>, std::__1::allocator<std::__1::__value_type<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>>> {
        struct __tree_node<std::__1::__value_type<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::DeviceType, std::__1::__value_type<cui::DeviceType, cui::WeakPtr<cui::vmdevice::DeviceListBase>>, std::__1::less<cui::DeviceType>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::VM *, cui::VMMgr::VMItem, std::__1::less<cui::VM *>, std::__1::allocator<std::__1::pair<cui::VM *const, cui::VMMgr::VMItem>>> {
    struct __tree<std::__1::__value_type<cui::VM *, cui::VMMgr::VMItem>, std::__1::__map_value_compare<cui::VM *, std::__1::__value_type<cui::VM *, cui::VMMgr::VMItem>, std::__1::less<cui::VM *>, true>, std::__1::allocator<std::__1::__value_type<cui::VM *, cui::VMMgr::VMItem>>> {
        struct __tree_node<std::__1::__value_type<cui::VM *, cui::VMMgr::VMItem>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::VM *, cui::VMMgr::VMItem>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::VM *, std::__1::__value_type<cui::VM *, cui::VMMgr::VMItem>, std::__1::less<cui::VM *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::VMID, cui::EncryptionKeyCache::KeyData, std::__1::less<cui::VMID>, std::__1::allocator<std::__1::pair<const cui::VMID, cui::EncryptionKeyCache::KeyData>>> {
    struct __tree<std::__1::__value_type<cui::VMID, cui::EncryptionKeyCache::KeyData>, std::__1::__map_value_compare<cui::VMID, std::__1::__value_type<cui::VMID, cui::EncryptionKeyCache::KeyData>, std::__1::less<cui::VMID>, true>, std::__1::allocator<std::__1::__value_type<cui::VMID, cui::EncryptionKeyCache::KeyData>>> {
        struct __tree_node<std::__1::__value_type<cui::VMID, cui::EncryptionKeyCache::KeyData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::VMID, cui::EncryptionKeyCache::KeyData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::VMID, std::__1::__value_type<cui::VMID, cui::EncryptionKeyCache::KeyData>, std::__1::less<cui::VMID>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::WeakPtr<cui::vmdevice::NIC>, utf::string, std::__1::less<cui::WeakPtr<cui::vmdevice::NIC>>, std::__1::allocator<std::__1::pair<const cui::WeakPtr<cui::vmdevice::NIC>, utf::string>>> {
    struct __tree<std::__1::__value_type<cui::WeakPtr<cui::vmdevice::NIC>, utf::string>, std::__1::__map_value_compare<cui::WeakPtr<cui::vmdevice::NIC>, std::__1::__value_type<cui::WeakPtr<cui::vmdevice::NIC>, utf::string>, std::__1::less<cui::WeakPtr<cui::vmdevice::NIC>>, true>, std::__1::allocator<std::__1::__value_type<cui::WeakPtr<cui::vmdevice::NIC>, utf::string>>> {
        struct __tree_node<std::__1::__value_type<cui::WeakPtr<cui::vmdevice::NIC>, utf::string>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::WeakPtr<cui::vmdevice::NIC>, utf::string>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::WeakPtr<cui::vmdevice::NIC>, std::__1::__value_type<cui::WeakPtr<cui::vmdevice::NIC>, utf::string>, std::__1::less<cui::WeakPtr<cui::vmdevice::NIC>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::inventory::Node *, sigc::connection, std::__1::less<cui::inventory::Node *>, std::__1::allocator<std::__1::pair<cui::inventory::Node *const, sigc::connection>>> {
    struct __tree<std::__1::__value_type<cui::inventory::Node *, sigc::connection>, std::__1::__map_value_compare<cui::inventory::Node *, std::__1::__value_type<cui::inventory::Node *, sigc::connection>, std::__1::less<cui::inventory::Node *>, true>, std::__1::allocator<std::__1::__value_type<cui::inventory::Node *, sigc::connection>>> {
        struct __tree_node<std::__1::__value_type<cui::inventory::Node *, sigc::connection>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::inventory::Node *, sigc::connection>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::inventory::Node *, std::__1::__value_type<cui::inventory::Node *, sigc::connection>, std::__1::less<cui::inventory::Node *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::vmdevice::Device *, int, std::__1::less<cui::vmdevice::Device *>, std::__1::allocator<std::__1::pair<cui::vmdevice::Device *const, int>>> {
    struct __tree<std::__1::__value_type<cui::vmdevice::Device *, int>, std::__1::__map_value_compare<cui::vmdevice::Device *, std::__1::__value_type<cui::vmdevice::Device *, int>, std::__1::less<cui::vmdevice::Device *>, true>, std::__1::allocator<std::__1::__value_type<cui::vmdevice::Device *, int>>> {
        struct __tree_node<std::__1::__value_type<cui::vmdevice::Device *, int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::vmdevice::Device *, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::vmdevice::Device *, std::__1::__value_type<cui::vmdevice::Device *, int>, std::__1::less<cui::vmdevice::Device *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<cui::vmdevice::Device *, sigc::connection, std::__1::less<cui::vmdevice::Device *>, std::__1::allocator<std::__1::pair<cui::vmdevice::Device *const, sigc::connection>>> {
    struct __tree<std::__1::__value_type<cui::vmdevice::Device *, sigc::connection>, std::__1::__map_value_compare<cui::vmdevice::Device *, std::__1::__value_type<cui::vmdevice::Device *, sigc::connection>, std::__1::less<cui::vmdevice::Device *>, true>, std::__1::allocator<std::__1::__value_type<cui::vmdevice::Device *, sigc::connection>>> {
        struct __tree_node<std::__1::__value_type<cui::vmdevice::Device *, sigc::connection>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<cui::vmdevice::Device *, sigc::connection>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<cui::vmdevice::Device *, std::__1::__value_type<cui::vmdevice::Device *, sigc::connection>, std::__1::less<cui::vmdevice::Device *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, KMMapping, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, KMMapping>>> {
    struct __tree<std::__1::__value_type<int, KMMapping>, std::__1::__map_value_compare<int, std::__1::__value_type<int, KMMapping>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, KMMapping>>> {
        struct __tree_node<std::__1::__value_type<int, KMMapping>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, KMMapping>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, KMMapping>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, bool, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, bool>>> {
    struct __tree<std::__1::__value_type<int, bool>, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, bool>>> {
        struct __tree_node<std::__1::__value_type<int, bool>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, bool>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, bool>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, cui::Snapshot *, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, cui::Snapshot *>>>;

struct map<int, std::__1::pair<int, cui::Size>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::pair<int, cui::Size>>>> {
    struct __tree<std::__1::__value_type<int, std::__1::pair<int, cui::Size>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<int, cui::Size>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, std::__1::pair<int, cui::Size>>>> {
        struct __tree_node<std::__1::__value_type<int, std::__1::pair<int, cui::Size>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, std::__1::pair<int, cui::Size>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, std::__1::pair<int, cui::Size>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>, std::__1::__map_value_compare<std::__1::pair<const cui::Cnx *, utf::string>, std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<const cui::Cnx *, utf::string>, std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::Host *>, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>, std::__1::__map_value_compare<std::__1::pair<const cui::Cnx *, utf::string>, std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<const cui::Cnx *, utf::string>, std::__1::__value_type<std::__1::pair<const cui::Cnx *, utf::string>, cui::HostMgr::HostCreationData>, std::__1::less<std::__1::pair<const cui::Cnx *, utf::string>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>, std::__1::__map_value_compare<std::__1::pair<utf::string, utf::string>, std::__1::__value_type<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>, std::__1::less<std::__1::pair<utf::string, utf::string>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<utf::string, utf::string>, std::__1::__value_type<std::__1::pair<utf::string, utf::string>, cui::WeakPtr<cui::inventory::Node>>, std::__1::less<std::__1::pair<utf::string, utf::string>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<const std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>, std::__1::__map_value_compare<std::__1::pair<utf::string, utf::string>, std::__1::__value_type<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>, std::__1::less<std::__1::pair<utf::string, utf::string>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>>> {
        struct __tree_node<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<utf::string, utf::string>, std::__1::__value_type<std::__1::pair<utf::string, utf::string>, std::__1::map<utf::string, cui::inventory::SearchIndex::Field, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::SearchIndex::Field>>>>, std::__1::less<std::__1::pair<utf::string, utf::string>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, cui::Notification *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::Notification *>>> {
    struct __tree<std::__1::__value_type<unsigned int, cui::Notification *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, cui::Notification *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, cui::Notification *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, cui::Notification *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, cui::Notification *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, cui::Notification *>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, cui::UnityWindow *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::UnityWindow *>>> {
    struct __tree<std::__1::__value_type<unsigned int, cui::UnityWindow *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, cui::UnityWindow *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, cui::UnityWindow *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, cui::UnityWindow *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, cui::UnityWindow *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, cui::UnityWindow *>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>>> {
    struct __tree<std::__1::__value_type<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, cui::vmdevice::DeviceListBase::IndexedDevice *>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, netcfg::common::Network *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, netcfg::common::Network *>>> {
    struct __tree<std::__1::__value_type<unsigned int, netcfg::common::Network *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, netcfg::common::Network *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, netcfg::common::Network *>>> {
        struct __tree_node<std::__1::__value_type<unsigned int, netcfg::common::Network *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, netcfg::common::Network *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, netcfg::common::Network *>, std::__1::less<unsigned int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, KMProfile, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, KMProfile>>> {
    struct __tree<std::__1::__value_type<utf::string, KMProfile>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, KMProfile>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, KMProfile>>> {
        struct __tree_node<std::__1::__value_type<utf::string, KMProfile>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, KMProfile>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, KMProfile>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, boost::shared_ptr<cui::Component>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, boost::shared_ptr<cui::Component>>>> {
    struct __tree<std::__1::__value_type<utf::string, boost::shared_ptr<cui::Component>>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, boost::shared_ptr<cui::Component>>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, boost::shared_ptr<cui::Component>>>> {
        struct __tree_node<std::__1::__value_type<utf::string, boost::shared_ptr<cui::Component>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, boost::shared_ptr<cui::Component>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, boost::shared_ptr<cui::Component>>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, const cui::NamedPVN *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, const cui::NamedPVN *>>> {
    struct __tree<std::__1::__value_type<utf::string, const cui::NamedPVN *>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, const cui::NamedPVN *>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, const cui::NamedPVN *>>> {
        struct __tree_node<std::__1::__value_type<utf::string, const cui::NamedPVN *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, const cui::NamedPVN *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, const cui::NamedPVN *>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::CertType, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::CertType>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::CertType>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::CertType>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::CertType>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::CertType>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::CertType>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::CertType>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::ComponentMgrCDS::ComponentMgrCDSDownloadStatus>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::KeyboardShortcutMgr::Shortcut, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::KeyboardShortcutMgr::Shortcut>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::KeyboardShortcutMgr::Shortcut>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::KeyboardShortcutMgr::Shortcut>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::KeyboardShortcutMgr::Shortcut>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::KeyboardShortcutMgr::Shortcut>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::KeyboardShortcutMgr::Shortcut>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::KeyboardShortcutMgr::Shortcut>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::LicenseRegistrationData, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::LicenseRegistrationData>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::LicenseRegistrationData>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::LicenseRegistrationData>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::LicenseRegistrationData>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::LicenseRegistrationData>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::LicenseRegistrationData>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::LicenseRegistrationData>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::USBDisplayInfo, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::USBDisplayInfo>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::USBDisplayInfo>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::USBDisplayInfo>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::USBDisplayInfo>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::USBDisplayInfo>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::USBDisplayInfo>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::USBDisplayInfo>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::VMBackend *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::VMBackend *>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::VMBackend *>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::VMBackend *>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::VMBackend *>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::VMBackend *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::VMBackend *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::VMBackend *>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::VMStatus::NetworkConnectionEntry, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::VMStatus::NetworkConnectionEntry>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::VMStatus::NetworkConnectionEntry>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::VMStatus::NetworkConnectionEntry>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::VMStatus::NetworkConnectionEntry>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::VMStatus::NetworkConnectionEntry>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::VMStatus::NetworkConnectionEntry>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::VMStatus::NetworkConnectionEntry>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::WeakPtr<cui::inventory::Node>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::WeakPtr<cui::inventory::Node>>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::Node>>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::Node>>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::Node>>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::Node>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::Node>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::Node>>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::WeakPtr<cui::inventory::RestrictedVMNode>>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, cui::inventory::Node *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, cui::inventory::Node *>>> {
    struct __tree<std::__1::__value_type<utf::string, cui::inventory::Node *>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::inventory::Node *>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, cui::inventory::Node *>>> {
        struct __tree_node<std::__1::__value_type<utf::string, cui::inventory::Node *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, cui::inventory::Node *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, cui::inventory::Node *>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, netcfg::common::Network *, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, netcfg::common::Network *>>> {
    struct __tree<std::__1::__value_type<utf::string, netcfg::common::Network *>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, netcfg::common::Network *>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, netcfg::common::Network *>>> {
        struct __tree_node<std::__1::__value_type<utf::string, netcfg::common::Network *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, netcfg::common::Network *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, netcfg::common::Network *>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>> {
    struct __tree<std::__1::__value_type<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>> {
        struct __tree_node<std::__1::__value_type<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, sigc::slot<void, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> {
    struct __tree<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> {
        struct __tree_node<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::GuestApp *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> {
    struct __tree<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>>> {
        struct __tree_node<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, std::__1::list<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>, std::__1::allocator<std::__1::pair<sigc::slot<void, bool, const cui::OpenVMError &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>>>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, unsigned int, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, unsigned int>>> {
    struct __tree<std::__1::__value_type<utf::string, unsigned int>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, unsigned int>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, unsigned int>>> {
        struct __tree_node<std::__1::__value_type<utf::string, unsigned int>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, unsigned int>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<utf::string, utf::string, std::__1::less<utf::string>, std::__1::allocator<std::__1::pair<const utf::string, utf::string>>> {
    struct __tree<std::__1::__value_type<utf::string, utf::string>, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, utf::string>, std::__1::less<utf::string>, true>, std::__1::allocator<std::__1::__value_type<utf::string, utf::string>>> {
        struct __tree_node<std::__1::__value_type<utf::string, utf::string>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<utf::string, utf::string>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<utf::string, std::__1::__value_type<utf::string, utf::string>, std::__1::less<utf::string>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multimap<const cui::Cnx *, cui::Host *, std::__1::less<const cui::Cnx *>, std::__1::allocator<std::__1::pair<const cui::Cnx *const, cui::Host *>>> {
    struct __tree<std::__1::__value_type<const cui::Cnx *, cui::Host *>, std::__1::__map_value_compare<const cui::Cnx *, std::__1::__value_type<const cui::Cnx *, cui::Host *>, std::__1::less<const cui::Cnx *>, true>, std::__1::allocator<std::__1::__value_type<const cui::Cnx *, cui::Host *>>> {
        struct __tree_node<std::__1::__value_type<const cui::Cnx *, cui::Host *>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const cui::Cnx *, cui::Host *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const cui::Cnx *, std::__1::__value_type<const cui::Cnx *, cui::Host *>, std::__1::less<const cui::Cnx *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct pair<utf::string, cui::WeakPtr<vmdb::Object>>;

struct pair<utf::string, int> {
    struct string _field1;
    int _field2;
};

struct queue<cui::inventory::SearchIndex::IndexTask, std::__1::deque<cui::inventory::SearchIndex::IndexTask, std::__1::allocator<cui::inventory::SearchIndex::IndexTask>>> {
    struct deque<cui::inventory::SearchIndex::IndexTask, std::__1::allocator<cui::inventory::SearchIndex::IndexTask>> _field1;
};

struct queue<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::deque<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>>> {
    struct deque<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> _field1;
};

struct set<cui::SharedFolderEntry, std::__1::less<cui::SharedFolderEntry>, std::__1::allocator<cui::SharedFolderEntry>> {
    struct __tree<cui::SharedFolderEntry, std::__1::less<cui::SharedFolderEntry>, std::__1::allocator<cui::SharedFolderEntry>> {
        struct __tree_node<cui::SharedFolderEntry, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<cui::SharedFolderEntry, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<cui::SharedFolderEntry>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_node<int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::pair<utf::string, utf::string>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<utf::string, utf::string>>> {
    struct __tree<std::__1::pair<utf::string, utf::string>, std::__1::less<std::__1::pair<utf::string, utf::string>>, std::__1::allocator<std::__1::pair<utf::string, utf::string>>> {
        struct __tree_node<std::__1::pair<utf::string, utf::string>, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::pair<utf::string, utf::string>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::pair<utf::string, utf::string>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
    struct __tree<unsigned int, std::__1::less<unsigned int>, std::__1::allocator<unsigned int>> {
        struct __tree_node<unsigned int, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<utf::string, cui::CaselessComp, std::__1::allocator<utf::string>> {
    struct __tree<utf::string, cui::CaselessComp, std::__1::allocator<utf::string>> {
        struct __tree_node<utf::string, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<utf::string, void *>>> _field2;
        struct __compressed_pair<unsigned long, cui::CaselessComp> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> {
    struct __tree<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> {
        struct __tree_node<utf::string, void *> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<utf::string, void *>>> _field2;
        struct __compressed_pair<unsigned long, std::__1::less<utf::string>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_count {
    struct sp_counted_base *_field1;
};

struct shared_ptr<cui::Component> {
    struct Component *_field1;
    struct shared_count _field2;
};

struct shared_ptr<cui::MKSScreen> {
    struct MKSScreen *_field1;
    struct shared_count _field2;
};

struct shared_ptr<cui::vcloud::VM> {
    struct VM *_field1;
    struct shared_count _field2;
};

struct shared_ptr<cui::vigor::Cnx> {
    struct Cnx *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<cui::vigor::IObserver<VigorCpp::Devices::MKS>> {
    struct IObserver<VigorCpp::Devices::MKS> *_field1;
    struct __shared_weak_count *_field2;
};

struct signal<cui::Dlg::RepliedAction, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, DND_DROPEFFECT, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, Glib::RefPtr<cui::progress::Progress>, std::__1::__list_iterator<Glib::RefPtr<cui::progress::Progress>, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, HGFileCopyOverwriteAnswer, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *callback_list_;
    struct signal_impl *impl_;
};

struct signal<void, UnityIconType, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, UnityWindowAttribute, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, bool, cui::Error, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, bool, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, boost::shared_ptr<cui::Component>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const CPClipboard *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const cui::ActionTargetURIPair &, const std::__1::list<utf::string, std::__1::allocator<utf::string>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const cui::HotKey &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const std::__1::set<cui::GuestAppMgr::LaunchMenuType, std::__1::less<cui::GuestAppMgr::LaunchMenuType>, std::__1::allocator<cui::GuestAppMgr::LaunchMenuType>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const std::__1::set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const std::__1::vector<boost::shared_ptr<cui::Component>, std::__1::allocator<boost::shared_ptr<cui::Component>>>&, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const std::__1::vector<cui::GuestOps::UnityOperation, std::__1::allocator<cui::GuestOps::UnityOperation>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const std::__1::vector<cui::WeakPtr<cui::UnityWindow>, std::__1::allocator<cui::WeakPtr<cui::UnityWindow>>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const unsigned int, const cui::Size, const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>&, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const utf::string &, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, const utf::string &, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, cui::VM *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::ConfigTransaction *, cui::vmdevice::Device *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::ConnectResult, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::Host *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::VM *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::WeakPtr<cui::UnityWindow>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::dnd::HOST_DND_STATE, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, cui::inventory::Node *, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, netcfg::common::Network *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *callback_list_;
    struct signal_impl *impl_;
};

struct signal<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, const utf::string &, const cui::SensitiveString &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::slot<bool, int, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, std::__1::__list_iterator<Glib::RefPtr<cui::progress::Progress>, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, cui::inventory::FolderNode *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, std::__1::__list_iterator<cui::inventory::Node *, void *>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, std::__1::vector<cui::WeakPtr<cui::USBDevice>, std::__1::allocator<cui::WeakPtr<cui::USBDevice>>>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, std::__1::vector<cui::WeakPtr<cui::USBDeviceRule>, std::__1::allocator<cui::WeakPtr<cui::USBDeviceRule>>>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, unsigned int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal<void, utf::string, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct trackable_callback_list *_field1;
    struct signal_impl *_field2;
};

struct signal_impl;

struct slot<bool, const cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<bool, int, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, const char *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, const std::__1::vector<boost::shared_ptr<cui::Component>, std::__1::allocator<boost::shared_ptr<cui::Component>>>&, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, const utf::string &, bool, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, const utf::string &, sigc::slot<void, HGFileCopyOverwriteAnswer, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, const utf::string &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, const cui::SensitiveString &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *rep_;
    _Bool blocked_;
};

struct slot<void, cui::OVFTool::ProbeResult, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, cui::WeakPtr<cui::Cnx>, const utf::string &, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
};

struct slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, const cui::SensitiveString &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *rep_;
    _Bool blocked_;
};

struct slot<void, sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *rep_;
    _Bool blocked_;
};

struct slot_base;

struct slot_rep;

struct sp_counted_base;

struct string {
    struct ustring mUstr;
    unsigned short *mUtf16Cache;
    unsigned long long mUtf16Length;
};

struct trackable {
    struct trackable_callback_list *_field1;
};

struct trackable_callback_list;

struct ustring {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> string_;
};

struct vector<boost::shared_ptr<cui::Component>, std::__1::allocator<boost::shared_ptr<cui::Component>>> {
    shared_ptr_58551066 *_field1;
    shared_ptr_58551066 *_field2;
    struct __compressed_pair<boost::shared_ptr<cui::Component>*, std::__1::allocator<boost::shared_ptr<cui::Component>>> {
        shared_ptr_58551066 *_field1;
    } _field3;
};

struct vector<cui::HostCredentials, std::__1::allocator<cui::HostCredentials>> {
    struct HostCredentials *_field1;
    struct HostCredentials *_field2;
    struct __compressed_pair<cui::HostCredentials *, std::__1::allocator<cui::HostCredentials>> {
        struct HostCredentials *_field1;
    } _field3;
};

struct vector<cui::HostInfo::Device, std::__1::allocator<cui::HostInfo::Device>> {
    struct Device *_field1;
    struct Device *_field2;
    struct __compressed_pair<cui::HostInfo::Device *, std::__1::allocator<cui::HostInfo::Device>> {
        struct Device *_field1;
    } _field3;
};

struct vector<cui::HostStats::DatastoreStats *, std::__1::allocator<cui::HostStats::DatastoreStats *>> {
    struct DatastoreStats **_field1;
    struct DatastoreStats **_field2;
    struct __compressed_pair<cui::HostStats::DatastoreStats **, std::__1::allocator<cui::HostStats::DatastoreStats *>> {
        struct DatastoreStats **_field1;
    } _field3;
};

struct vector<cui::HotKey, std::__1::allocator<cui::HotKey>> {
    struct HotKey *_field1;
    struct HotKey *_field2;
    struct __compressed_pair<cui::HotKey *, std::__1::allocator<cui::HotKey>> {
        struct HotKey *_field1;
    } _field3;
};

struct vector<cui::OVFTool::OVFCategory, std::__1::allocator<cui::OVFTool::OVFCategory>> {
    struct OVFCategory *_field1;
    struct OVFCategory *_field2;
    struct __compressed_pair<cui::OVFTool::OVFCategory *, std::__1::allocator<cui::OVFTool::OVFCategory>> {
        struct OVFCategory *_field1;
    } _field3;
};

struct vector<cui::OVFTool::OVFDeploymentOption, std::__1::allocator<cui::OVFTool::OVFDeploymentOption>> {
    struct OVFDeploymentOption *_field1;
    struct OVFDeploymentOption *_field2;
    struct __compressed_pair<cui::OVFTool::OVFDeploymentOption *, std::__1::allocator<cui::OVFTool::OVFDeploymentOption>> {
        struct OVFDeploymentOption *_field1;
    } _field3;
};

struct vector<cui::OVFTool::OVFError, std::__1::allocator<cui::OVFTool::OVFError>> {
    struct OVFError *_field1;
    struct OVFError *_field2;
    struct __compressed_pair<cui::OVFTool::OVFError *, std::__1::allocator<cui::OVFTool::OVFError>> {
        struct OVFError *_field1;
    } _field3;
};

struct vector<cui::OVFTool::OVFProperty, std::__1::allocator<cui::OVFTool::OVFProperty>> {
    struct OVFProperty *_field1;
    struct OVFProperty *_field2;
    struct __compressed_pair<cui::OVFTool::OVFProperty *, std::__1::allocator<cui::OVFTool::OVFProperty>> {
        struct OVFProperty *_field1;
    } _field3;
};

struct vector<cui::OVFTool::OVFVMInfo, std::__1::allocator<cui::OVFTool::OVFVMInfo>> {
    struct OVFVMInfo *_field1;
    struct OVFVMInfo *_field2;
    struct __compressed_pair<cui::OVFTool::OVFVMInfo *, std::__1::allocator<cui::OVFTool::OVFVMInfo>> {
        struct OVFVMInfo *_field1;
    } _field3;
};

struct vector<cui::PreferencePropertyBase *, std::__1::allocator<cui::PreferencePropertyBase *>> {
    struct PreferencePropertyBase **_field1;
    struct PreferencePropertyBase **_field2;
    struct __compressed_pair<cui::PreferencePropertyBase **, std::__1::allocator<cui::PreferencePropertyBase *>> {
        struct PreferencePropertyBase **_field1;
    } _field3;
};

struct vector<cui::Rect, std::__1::allocator<cui::Rect>> {
    struct Rect *_field1;
    struct Rect *_field2;
    struct __compressed_pair<cui::Rect *, std::__1::allocator<cui::Rect>> {
        struct Rect *_field1;
    } _field3;
};

struct vector<cui::RememberedHost, std::__1::allocator<cui::RememberedHost>> {
    struct RememberedHost *_field1;
    struct RememberedHost *_field2;
    struct __compressed_pair<cui::RememberedHost *, std::__1::allocator<cui::RememberedHost>> {
        struct RememberedHost *_field1;
    } _field3;
};

struct vector<cui::SSHCredentials, std::__1::allocator<cui::SSHCredentials>> {
    struct SSHCredentials *_field1;
    struct SSHCredentials *_field2;
    struct __compressed_pair<cui::SSHCredentials *, std::__1::allocator<cui::SSHCredentials>> {
        struct SSHCredentials *_field1;
    } _field3;
};

struct vector<cui::ScreenWindow, std::__1::allocator<cui::ScreenWindow>> {
    struct ScreenWindow *_field1;
    struct ScreenWindow *_field2;
    struct __compressed_pair<cui::ScreenWindow *, std::__1::allocator<cui::ScreenWindow>> {
        struct ScreenWindow *_field1;
    } _field3;
};

struct vector<cui::USBDeviceMgr::TargetInfo, std::__1::allocator<cui::USBDeviceMgr::TargetInfo>> {
    struct TargetInfo *_field1;
    struct TargetInfo *_field2;
    struct __compressed_pair<cui::USBDeviceMgr::TargetInfo *, std::__1::allocator<cui::USBDeviceMgr::TargetInfo>> {
        struct TargetInfo *_field1;
    } _field3;
};

struct vector<cui::UnityInputEvent *, std::__1::allocator<cui::UnityInputEvent *>> {
    struct UnityInputEvent **_field1;
    struct UnityInputEvent **_field2;
    struct __compressed_pair<cui::UnityInputEvent **, std::__1::allocator<cui::UnityInputEvent *>> {
        struct UnityInputEvent **_field1;
    } _field3;
};

struct vector<cui::UsbDevice, std::__1::allocator<cui::UsbDevice>> {
    struct UsbDevice *_field1;
    struct UsbDevice *_field2;
    struct __compressed_pair<cui::UsbDevice *, std::__1::allocator<cui::UsbDevice>> {
        struct UsbDevice *_field1;
    } _field3;
};

struct vector<cui::VMLed *, std::__1::allocator<cui::VMLed *>> {
    struct VMLed **_field1;
    struct VMLed **_field2;
    struct __compressed_pair<cui::VMLed **, std::__1::allocator<cui::VMLed *>> {
        struct VMLed **_field1;
    } _field3;
};

struct vector<cui::VMStatus::User, std::__1::allocator<cui::VMStatus::User>> {
    struct User *_field1;
    struct User *_field2;
    struct __compressed_pair<cui::VMStatus::User *, std::__1::allocator<cui::VMStatus::User>> {
        struct User *_field1;
    } _field3;
};

struct vector<cui::WeakPtr<cui::USBDevice>, std::__1::allocator<cui::WeakPtr<cui::USBDevice>>> {
    struct WeakPtr<cui::USBDevice> *_field1;
    struct WeakPtr<cui::USBDevice> *_field2;
    struct __compressed_pair<cui::WeakPtr<cui::USBDevice>*, std::__1::allocator<cui::WeakPtr<cui::USBDevice>>> {
        struct WeakPtr<cui::USBDevice> *_field1;
    } _field3;
};

struct vector<cui::WeakPtr<cui::USBDeviceRule>, std::__1::allocator<cui::WeakPtr<cui::USBDeviceRule>>> {
    struct WeakPtr<cui::USBDeviceRule> *_field1;
    struct WeakPtr<cui::USBDeviceRule> *_field2;
    struct __compressed_pair<cui::WeakPtr<cui::USBDeviceRule>*, std::__1::allocator<cui::WeakPtr<cui::USBDeviceRule>>> {
        struct WeakPtr<cui::USBDeviceRule> *_field1;
    } _field3;
};

struct vector<cui::dnd::CPFileRep, std::__1::allocator<cui::dnd::CPFileRep>> {
    struct CPFileRep *_field1;
    struct CPFileRep *_field2;
    struct __compressed_pair<cui::dnd::CPFileRep *, std::__1::allocator<cui::dnd::CPFileRep>> {
        struct CPFileRep *_field1;
    } _field3;
};

struct vector<cui::vmdevice::Device *, std::__1::allocator<cui::vmdevice::Device *>> {
    struct Device **_field1;
    struct Device **_field2;
    struct __compressed_pair<cui::vmdevice::Device **, std::__1::allocator<cui::vmdevice::Device *>> {
        struct Device **_field1;
    } _field3;
};

struct vector<netcfg::common::NAT::PortForwardEntry, std::__1::allocator<netcfg::common::NAT::PortForwardEntry>> {
    struct PortForwardEntry *_field1;
    struct PortForwardEntry *_field2;
    struct __compressed_pair<netcfg::common::NAT::PortForwardEntry *, std::__1::allocator<netcfg::common::NAT::PortForwardEntry>> {
        struct PortForwardEntry *_field1;
    } _field3;
};

struct vector<sigc::connection, std::__1::allocator<sigc::connection>> {
    struct connection *_field1;
    struct connection *_field2;
    struct __compressed_pair<sigc::connection *, std::__1::allocator<sigc::connection>> {
        struct connection *_field1;
    } _field3;
};

struct vector<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
    slot_c916f39b *_field1;
    slot_c916f39b *_field2;
    struct __compressed_pair<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, std::__1::allocator<sigc::slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
        slot_c916f39b *_field1;
    } _field3;
};

struct vector<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
    slot_b50ce1c7 *_field1;
    slot_b50ce1c7 *_field2;
    struct __compressed_pair<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>*, std::__1::allocator<sigc::slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>>> {
        slot_b50ce1c7 *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
};

struct vector<std::__1::pair<utf::string, cui::WeakPtr<vmdb::Object>>, std::__1::allocator<std::__1::pair<utf::string, cui::WeakPtr<vmdb::Object>>>> {
    struct pair<utf::string, cui::WeakPtr<vmdb::Object>> *_field1;
    struct pair<utf::string, cui::WeakPtr<vmdb::Object>> *_field2;
    struct __compressed_pair<std::__1::pair<utf::string, cui::WeakPtr<vmdb::Object>>*, std::__1::allocator<std::__1::pair<utf::string, cui::WeakPtr<vmdb::Object>>>> {
        struct pair<utf::string, cui::WeakPtr<vmdb::Object>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct vector<utf::string, std::__1::allocator<utf::string>> {
    struct string *__begin_;
    struct string *__end_;
    struct __compressed_pair<utf::string *, std::__1::allocator<utf::string>> {
        struct string *__first_;
    } __end_cap_;
};

struct weak_count {
    struct sp_counted_base *_field1;
};

struct weak_ptr<cui::Capability::FailureReason> {
    struct FailureReason *_field1;
    struct weak_count _field2;
};

#if 0
// Names with conflicting types:
typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct Property<bool> _field13;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field14;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field15;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field16;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field17;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field18;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field19;
    struct string _field20;
    struct Ctx _field21;
    struct DlgMgr *_field22;
    WeakPtr_682d8722 _field23;
    struct shared_ptr<cui::vigor::Cnx> _field24;
    struct SnapshotTree *_field25;
    struct ApplianceView *_field26;
    struct DlgProgress *_field27;
    struct NotificationMgr *_field28;
    struct UnityMgr *_field29;
    struct VMBindingUnityMgr *_field30;
    struct WeakPtr<cui::FullscreenMgr> _field31;
    struct HostDnDCPMgr *_field32;
    struct SharedFolderMgr *_field33;
    struct VMMKS *_field34;
    struct VMHostAppLauncher *_field35;
    RefPtr_5b6f4ec6 _field36;
    struct shared_ptr<cui::vcloud::VM> _field37;
    struct connection _field38;
    struct connection _field39;
    struct connection _field40;
    struct WeakPtr<cui::DlgMgr> _field41;
    struct GuestAppFactory *_field42;
    struct GuestAppMgr *_field43;
    struct GuestAppMgrOptions *_field44;
    struct VMGuestAppLauncher *_field45;
    struct VMBindingGuestAppMgr *_field46;
    struct NotificationAreaMgr *_field47;
    unsigned int _field48;
    struct Handle _field49;
    unsigned int _field50;
    unsigned int _field51;
    _Bool _field52;
    _Bool _field53;
    int _field54;
    int _field55;
    int _field56;
    struct MsgMgr *_field57;
    _Bool _field58;
    struct vector<sigc::connection, std::__1::allocator<sigc::connection>> _field59;
    struct Ctx _field60;
    struct ProgressMgr *_field61;
    _Bool _field62;
    unsigned int _field63;
    unsigned int _field64;
    struct WeakDPtr<cui::Confirm> _field65;
    struct WeakDPtr<cui::Confirm> _field66;
    _Bool _field67;
    struct connection _field68;
    RefPtr_7dbef0f3 _field69;
    RefPtr_7dbef0f3 _field70;
    struct set<utf::string, std::__1::less<utf::string>, std::__1::allocator<utf::string>> _field71;
    struct Size _field72;
    struct Size _field73;
    _Bool _field74;
    struct FileLockToken *_field75;
    int _field76;
    struct VMBackgroundJobMgr *_field77;
    struct VMDataModel *_field78;
    struct VMGuest *_field79;
    struct VMPower *_field80;
    struct VMStatus *_field81;
    struct VMSnapshots *_field82;
    struct VMSnapshotTree *_field83;
    struct VMTicketing *_field84;
    struct VMCrypto *_field85;
    struct VMCapabilities *_field86;
    struct VMPolicy *_field87;
    RefPtr_3bbf08f0 _field88;
    struct RemoteDeviceMgr *_field89;
    struct TaskMgrVIM *_field90;
    CDUnknownFunctionPointerType *_field91;
    struct Signal _field92;
    _Bool _field93;
    struct trackable_callback_list *_field94;
} VM_b037c2d4;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct trackable_callback_list *_field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct Property<bool> _field5;
    struct Property<utf::string> _field6;
    struct Property<utf::string> _field7;
    struct GuestAppFactory *_field8;
    struct GuestAppMgr *_field9;
    struct string _field10;
    struct string _field11;
    struct list<cui::GuestApp::Icon, std::__1::allocator<cui::GuestApp::Icon>> _field12;
    struct list<cui::GuestApp::FileHandler, std::__1::allocator<cui::GuestApp::FileHandler>> _field13;
    struct list<cui::GuestApp::URLHandler, std::__1::allocator<cui::GuestApp::URLHandler>> _field14;
    struct string _field15;
    _Bool _field16;
    _Bool _field17;
    unsigned int _field18;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field19;
    unsigned int _field20;
    _Bool _field21;
    _Bool _field22;
    struct connection _field23;
} GuestApp_fd96ead3;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, cui::ConfigTransaction *, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, cui::ConfigTransaction *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field6;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field7;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field8;
    _Bool _field9;
    struct TransactionProperty<bool, cui::ConfigTransaction> _field10;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field11;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field12;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field13;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field14;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field15;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field16;
    struct TransactionProperty<int, cui::ConfigTransaction> _field17;
    struct TransactionProperty<utf::string, cui::ConfigTransaction> _field18;
    struct WeakPtr<cui::DeviceMgr> _field19;
    struct string _field20;
    struct TransactionProperty<int, cui::ConfigTransaction> _field21;
    struct string _field22;
    struct trackable_callback_list *_field23;
} Device_a32312ef;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field2;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field3;
    struct signal<void, const cui::HotKey &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field4;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field5;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field6;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field7;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field8;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field9;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field10;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field11;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field12;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field13;
    struct Property<bool> _field14;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field15;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field16;
    struct signal<void, int, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field17;
    struct Property<utf::string> _field18;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field19;
    struct signal<void, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field20;
    struct Capability _field21;
    struct Capability _field22;
    struct Capability _field23;
    struct Capability _field24;
    struct Property<bool> _field25;
    struct Property<bool> _field26;
    struct Property<bool> _field27;
    struct Property<bool> _field28;
    struct Property<bool> _field29;
    struct Property<bool> _field30;
    struct Property<bool> _field31;
    struct Property<cui::GamingMouseMode> _field32;
    struct Property<bool> _field33;
    struct Property<unsigned int> _field34;
    struct Property<cui::Modifiers> _field35;
    struct Property<bool> _field36;
    struct Property<bool> _field37;
    struct Property<bool> _field38;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field39;
    struct VM *_field40;
    struct Ctx _field41;
    int _field42;
    struct vector<cui::ScreenWindow, std::__1::allocator<cui::ScreenWindow>> _field43;
    _Bool _field44;
    struct string _field45;
    struct MKSControlAuthToken _field46;
    _Bool _field47;
    _Bool _field48;
    _Bool _field49;
    struct signal<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> _field50;
    unsigned int _field51;
    unsigned int _field52;
    unsigned int _field53;
    unsigned int _field54;
    struct string _field55;
    struct string _field56;
    struct vector<cui::HotKey, std::__1::allocator<cui::HotKey>> _field57;
    struct WeakPtr<vmdbLayout::Cnx> _field58;
    struct DeferredSignal _field59;
    _Bool _field60;
    struct connection _field61;
    struct connection _field62;
    struct auto_ptr<cui::MKSWindowMgr> _field63;
    struct auto_ptr<cui::MKSScreenMgr> _field64;
    struct auto_ptr<cui::MKSScreenView> _field65;
    struct auto_ptr<mksctrl::MKSControlClient> _field66;
    int _field67;
    struct WeakPtr<cui::VMTicketing> _field68;
    struct string _field69;
    struct string _field70;
    struct ServerKey _field71;
    _Bool _field72;
    _Bool _field73;
    _Bool _field74;
    CDUnknownFunctionPointerType *_field75;
    struct Signal _field76;
    _Bool _field77;
    struct trackable_callback_list *_field78;
} MKS_35242ef4;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    int _field2;
} CDStruct_c1a9016d;

typedef struct {
    char _field1[32];
} CDStruct_7a08cd8d;

typedef struct {
    char *osKey;
    char *osKey64;
    int sub;
    char isSecondaryDisc;
    char versionString[32];
    char preferredLanguage[1024];
    char preferredLanguageCode[32];
    char availableLanguages[1024];
    char vistaClgInfo[512];
    char alternateOSName[64];
} CDStruct_14321004;

typedef struct {
    unsigned int _field1;
    int _field2;
    long long _field3;
    unsigned long long _field4;
    double _field5;
    long long _field6;
    struct CVSMPTETime _field7;
    unsigned long long _field8;
    unsigned long long _field9;
} CDStruct_e50ab651;

typedef struct {
    char changed;
    char isInitialized;
    unsigned int maxSize;
    struct CPClipItem items[10];
} CDStruct_64802fdf;

// Template types
typedef struct RefPtr<Glib::Object> {
    struct Object *_field1;
} RefPtr_5b6f4ec6;

typedef struct RefPtr<cui::Cnx> {
    struct Cnx *pCppObject_;
} RefPtr_0f6139b8;

typedef struct RefPtr<cui::EasyInstallConfig> {
    struct EasyInstallConfig *_field1;
} RefPtr_be7a17d2;

typedef struct RefPtr<cui::VMConfig> {
    struct VMConfig *_field1;
} RefPtr_7dbef0f3;

typedef struct RefPtr<cui::VMDeviceMgr> {
    struct VMDeviceMgr *pCppObject_;
} RefPtr_3bbf08f0;

typedef struct RefPtr<cui::progress::Progress> {
    struct Progress *_field1;
} RefPtr_2df7dc43;

typedef struct RefPtr<cui::progress::ProgressCustom> {
    struct ProgressCustom *_field1;
} RefPtr_58bf4239;

typedef struct RefPtr<cui::progress::ProgressTransfer> {
    struct ProgressTransfer *_field1;
} RefPtr_56adc180;

typedef struct WeakPtr<cui::Cnx> {
    struct Cnx *mTrackable;
} WeakPtr_682d8722;

typedef struct __list_iterator<Glib::RefPtr<cui::progress::Progress>, void *> {
    struct __list_node_base<Glib::RefPtr<cui::progress::Progress>, void *> *_field1;
} __list_iterator_d217f3df;

typedef struct __list_iterator<cui::inventory::Node *, void *> {
    struct __list_node_base<cui::inventory::Node *, void *> *_field1;
} __list_iterator_24c82087;

typedef struct list<cui::CnxFS::File, std::__1::allocator<cui::CnxFS::File>> {
    struct __list_node_base<cui::CnxFS::File, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<cui::CnxFS::File, void *>>> {
        unsigned long long _field1;
    } _field2;
} list_9c25e5ed;

typedef struct pair<utf::string, int> {
    struct string _field1;
    int _field2;
} pair_8f99d3fa;

typedef struct shared_ptr<cui::Component> {
    struct Component *_field1;
    struct shared_count _field2;
} shared_ptr_58551066;

typedef struct shared_ptr<cui::MKSScreen> {
    struct MKSScreen *_field1;
    struct shared_count _field2;
} shared_ptr_6cb5aa5c;

typedef struct slot<bool, const cui::inventory::Node *, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
} slot_87f7680d;

typedef struct slot<bool, int, const utf::string &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
} slot_47124170;

typedef struct slot<void, bool, const cui::Error &, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
} slot_c916f39b;

typedef struct slot<void, const utf::string &, sigc::slot<void, HGFileCopyOverwriteAnswer, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil>, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
} slot_d5bddd47;

typedef struct slot<void, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil, sigc::nil> {
    struct slot_rep *_field1;
    _Bool _field2;
} slot_b50ce1c7;

typedef struct vector<boost::shared_ptr<cui::Component>, std::__1::allocator<boost::shared_ptr<cui::Component>>> {
    shared_ptr_58551066 *_field1;
    shared_ptr_58551066 *_field2;
    struct __compressed_pair<boost::shared_ptr<cui::Component>*, std::__1::allocator<boost::shared_ptr<cui::Component>>> {
        shared_ptr_58551066 *_field1;
    } _field3;
} vector_db78adb7;

typedef struct vector<cui::HostInfo::Device, std::__1::allocator<cui::HostInfo::Device>> {
    struct Device *_field1;
    struct Device *_field2;
    struct __compressed_pair<cui::HostInfo::Device *, std::__1::allocator<cui::HostInfo::Device>> {
        struct Device *_field1;
    } _field3;
} vector_a7077208;

typedef struct vector<cui::WeakPtr<cui::USBDevice>, std::__1::allocator<cui::WeakPtr<cui::USBDevice>>> {
    struct WeakPtr<cui::USBDevice> *_field1;
    struct WeakPtr<cui::USBDevice> *_field2;
    struct __compressed_pair<cui::WeakPtr<cui::USBDevice>*, std::__1::allocator<cui::WeakPtr<cui::USBDevice>>> {
        struct WeakPtr<cui::USBDevice> *_field1;
    } _field3;
} vector_2f466f73;

typedef struct vector<cui::WeakPtr<cui::USBDeviceRule>, std::__1::allocator<cui::WeakPtr<cui::USBDeviceRule>>> {
    struct WeakPtr<cui::USBDeviceRule> *_field1;
    struct WeakPtr<cui::USBDeviceRule> *_field2;
    struct __compressed_pair<cui::WeakPtr<cui::USBDeviceRule>*, std::__1::allocator<cui::WeakPtr<cui::USBDeviceRule>>> {
        struct WeakPtr<cui::USBDeviceRule> *_field1;
    } _field3;
} vector_17e0b622;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *_field1;
    } _field3;
} vector_9492931a;

#pragma mark Typedef'd Unions

typedef union {
    unsigned int _field1;
    struct {
        unsigned short _field1;
        unsigned short _field2;
    } _field2;
} CDUnion_e63a103f;

