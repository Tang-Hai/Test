//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PLInventoryDeleteHelperDelegate.h"

@class DUIFeatures, DUIWeakRef, NSArray, NSImage, NSMenu, NSToolbarItem, NSTreeController, PLInventoryWindowController, VMToolbarItemButton;

@interface PLInventoryResponder : NSObject <PLInventoryDeleteHelperDelegate>
{
    PLInventoryWindowController *inventoryWindowController;
    NSTreeController *treeController;
    NSMenu *localVMMenu;
    NSMenu *basicVMMenu;
    NSMenu *basicMenu;
    NSMenu *selectionMenu;
    NSMenu *singleSelectionMenu;
    NSMenu *emptySelectionMenu;
    NSMenu *folderMenu;
    NSMenu *remoteInventoryMenu;
    NSMenu *placeholderMenu;
    NSToolbarItem *powerToolbarItem;
    VMToolbarItemButton *powerButton;
    NSMenu *hostSelectionMenu;
    BOOL mAllowRendering;
    BOOL mHideRefresh;
    NSArray *mMenuTargetNodes;
    DUIWeakRef *mMenuTargetRef;
    DUIFeatures *mFeatures;
}

+ (id)toolbarValidationKeyPaths;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
@property(nonatomic) BOOL hideRefresh; // @synthesize hideRefresh=mHideRefresh;
@property(retain, nonatomic) DUIFeatures *features; // @synthesize features=mFeatures;
@property(nonatomic) BOOL allowRendering; // @synthesize allowRendering=mAllowRendering;
@property(nonatomic) PLInventoryWindowController *inventoryWindowController; // @synthesize inventoryWindowController;
@property(retain, nonatomic) DUIWeakRef *menuTargetRef; // @synthesize menuTargetRef=mMenuTargetRef;
@property(retain, nonatomic) NSArray *menuTargetNodes; // @synthesize menuTargetNodes=mMenuTargetNodes;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)onConfigureSSH:(id)arg1;
- (void)onConnectToSSH:(id)arg1;
- (id)validateSwitchViewSelector:(id)arg1;
- (void)onViewSelected:(id)arg1 DUIInventoryViewType:(id)arg2;
- (void)onMachinesViewSelected:(id)arg1;
- (void)onHostViewSelected:(id)arg1;
- (void)onHostShutdown:(id)arg1;
- (void)onHostReboot:(id)arg1;
- (void)onExitMaintenanceMode:(id)arg1;
- (void)onEnterMaintenanceMode:(id)arg1;
- (void)onDownloadItem:(id)arg1;
- (void)onUploadItem:(id)arg1;
- (void)onRemove:(id)arg1;
- (void)onToggleConnect:(id)arg1;
- (void)onRefresh:(id)arg1;
- (void)onScanForVMs:(id)arg1;
- (void)updateSelectionForDeletion:(id)arg1;
- (void)delete:(id)arg1;
- (void)onDeleteSelection:(id)arg1;
- (void)onRename:(id)arg1;
- (void)onDeleteItem:(id)arg1;
- (void)deleteNodes:(id)arg1;
- (void)onShowConfigInFinder:(id)arg1;
- (void)onShowInFinder:(id)arg1;
- (void)openFilePath:(id)arg1 appForExtension:(id)arg2 overrideAppPrefKey:(const char *)arg3;
- (void)onCancelPlaceholder:(id)arg1;
- (void)onOpenLogFile:(id)arg1;
- (void)onOpenInEditor:(id)arg1;
- (void)onNewVM:(id)arg1;
- (void)onImport:(id)arg1;
- (void)onShowVMInfo:(id)arg1;
- (void)onPowerAction:(id)arg1;
- (void)onExportOVF:(id)arg1;
- (void)onCreateCloneLinked:(id)arg1;
- (void)onCreateClone:(id)arg1;
- (void)onShowSnapshots:(id)arg1;
- (void)onShowVMSettings:(id)arg1;
- (void)onShowReadmeFiles:(id)arg1;
- (void)onShowWindow:(id)arg1;
- (void)onAddFolderWithSelection:(id)arg1;
- (void)onAddFolderToItem:(id)arg1;
- (void)onAddFolder:(id)arg1;
- (void)onOpen:(id)arg1;
@property(readonly, nonatomic) BOOL allowDrag;
- (BOOL)shouldShowCloneSeparator;
- (BOOL)shouldShowSSHSupport;
- (BOOL)shouldShowUpload;
@property(readonly, nonatomic) BOOL shouldShowCloningSupport;
@property(readonly, nonatomic) BOOL shouldShowGettingStarted;
@property(readonly, nonatomic) BOOL shouldEnableImport;
@property(readonly, nonatomic) BOOL shouldShowImport;
- (BOOL)canConfigureSSH;
- (BOOL)canConnectToSSH;
- (BOOL)canScanForVMs;
- (BOOL)canRenameSelection;
@property(readonly, nonatomic) BOOL canDeleteSelection;
@property(readonly, nonatomic) BOOL canAddFolder;
@property(readonly, nonatomic) BOOL canPerformSnapshotsAction;
@property(readonly, nonatomic) BOOL canPerformSettingsAction;
@property(readonly, nonatomic) BOOL canPerformPowerAction;
- (BOOL)canPerformShowOrOpenFile:(id)arg1;
- (BOOL)canShowReadmeFilesOnNode:(id)arg1;
- (BOOL)canPerformSnapshotsActionOnNode:(id)arg1;
- (BOOL)canPerformSettingsActionOnNode:(id)arg1;
- (BOOL)canPerformPowerActionOnNode:(id)arg1;
- (BOOL)canPerformSelector:(SEL)arg1 onNode:(id)arg2;
- (BOOL)validateSelector:(SEL)arg1 onNode:(id)arg2 forToolbarItem:(id)arg3;
- (BOOL)validateSelector:(SEL)arg1 onNode:(id)arg2 forMenuItem:(id)arg3;
- (void)updateButtonItem:(id)arg1;
- (id)powerButtonTitle;
- (id)powerButtonTooltip;
@property(readonly, retain, nonatomic) NSImage *powerButtonImage;
- (BOOL)validateMenuItemContents:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)allowLibraryActions;
- (BOOL)isCreatingRemoteVM;
- (BOOL)validateToolbarItem:(id)arg1;
- (id)powerAction;
- (id)connectToServerDescription;
- (BOOL)handleDoubleClickOnNode:(id)arg1;
- (id)actionControllerForUIItem:(id)arg1;
- (id)actionControllerForNode:(id)arg1;
- (id)vmNodeForUIItem:(id)arg1;
- (id)selectedFolderNode;
- (id)selectedVMNode;
- (id)normalizedFilePathForNode:(id)arg1;
- (id)nodeForAddFolder;
- (id)activeVMController;
- (id)targetPlaceholderNode;
- (id)targetFolderNode;
- (id)targetVMNode;
- (id)targetInventoryNode;
- (void)prepareMenu:(id)arg1 forNodes:(id)arg2 withStyle:(int)arg3 target:(id)arg4;
- (void)prepareMenu:(id)arg1 forNode:(id)arg2 withStyle:(int)arg3 target:(id)arg4;
- (void)onWindowWillClose:(id)arg1;
- (void)cancelAutomaticDiskCleanup;
- (id)diskCleanupMgr;
- (id)inventoryMgr;
- (void)dealloc;
- (void)awakeFromNib;

@end

