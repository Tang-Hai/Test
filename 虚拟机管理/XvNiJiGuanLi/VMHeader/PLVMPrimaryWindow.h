//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "PLVMKioskWindow.h"

#import "DUIMKSChromeOverlayParent.h"
#import "PLFTBTargetWindow.h"
#import "PLMKSRestorableWindow.h"

@class NSMutableArray, NSString, NSWindow, PLFTBAccessoryView;

@interface PLVMPrimaryWindow : PLVMKioskWindow <DUIMKSChromeOverlayParent, PLFTBTargetWindow, PLMKSRestorableWindow>
{
    PLFTBAccessoryView *toolbarAux;
    struct CGRect mSingleWindowFrame;
    int mCurrentMode;
    int mTargetMode;
    NSMutableArray *mSecondaryWindows;
    NSWindow *mOverlayWindow;
    BOOL mAnimating;
    BOOL mWasOnActiveSpace;
    BOOL mIsGrabbed;
    BOOL mHideMenuBar;
    BOOL mUseDefaultMode;
    BOOL mShouldDelayAutohide;
    BOOL mOrderFrontNeeded;
    BOOL mIsInRestoration;
}

@property(nonatomic) BOOL isInRestoration; // @synthesize isInRestoration=mIsInRestoration;
@property(nonatomic) BOOL orderFrontNeeded; // @synthesize orderFrontNeeded=mOrderFrontNeeded;
@property(nonatomic) BOOL shouldDelayAutohide; // @synthesize shouldDelayAutohide=mShouldDelayAutohide;
@property(nonatomic) BOOL useDefaultMode; // @synthesize useDefaultMode=mUseDefaultMode;
@property(nonatomic) BOOL hideMenuBar; // @synthesize hideMenuBar=mHideMenuBar;
@property(nonatomic) BOOL isGrabbed; // @synthesize isGrabbed=mIsGrabbed;
@property(retain, nonatomic) NSWindow *overlayWindow; // @synthesize overlayWindow=mOverlayWindow;
@property(retain, nonatomic) NSMutableArray *secondaryWindows; // @synthesize secondaryWindows=mSecondaryWindows;
@property(nonatomic) int targetMode; // @synthesize targetMode=mTargetMode;
@property(nonatomic) int currentMode; // @synthesize currentMode=mCurrentMode;
@property(nonatomic) struct CGRect singleWindowFrame; // @synthesize singleWindowFrame=mSingleWindowFrame;
- (void)toggleTabOverview:(id)arg1;
- (void)toggleTabBar:(id)arg1;
- (void)mergeAllWindows:(id)arg1;
- (void)moveTabToNewWindow:(id)arg1;
- (void)selectPreviousTab:(id)arg1;
- (void)selectNextTab:(id)arg1;
@property(readonly, copy) NSString *description;
- (void)onDisplayReconfigured:(id)arg1;
- (void)attachOverlayWindow;
- (void)removeOverlayWindow:(id)arg1;
- (void)addOverlayWindow:(id)arg1;
- (BOOL)moveToScreenWithPoint:(struct CGPoint)arg1;
- (void)updateFTBWindowForViewMode;
- (id)accessoryView;
- (void)updateMinibar:(id)arg1;
- (void)encodeRestorableStateWithCoder:(id)arg1;
- (void)restoreStateWithCoder:(id)arg1;
- (void)restoreStandardWindowStateWithCoder:(id)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (BOOL)canMiniaturize;
- (void)doCommandBySelector:(SEL)arg1;
- (void)toggleFullScreen:(id)arg1;
- (BOOL)isFullScreen;
- (void)onSpaceDidChange:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)onWindowDidExitFullScreen:(id)arg1;
- (void)onWindowDidEnterFullScreen:(id)arg1;
- (void)onWindowWillExitFullScreen:(id)arg1;
- (void)onWindowWillEnterFullScreen:(id)arg1;
- (void)onWindowStateChanged:(id)arg1;
- (void)onWindowDidMoveOrResize:(id)arg1;
- (void)makeKeyAndOrderFrontAllMain;
- (void)orderFrontAllMain;
- (void)orderWindow:(long long)arg1 relativeTo:(long long)arg2;
- (void)postDidChangeViewMode:(int)arg1;
- (void)postWillChangeViewMode;
- (void)configureNative;
- (void)configureNormal;
- (id)keyKioskWindow;
- (BOOL)anyMainWindowIsKey;
- (void)updateSecondaryWindowCount:(unsigned long long)arg1;
- (void)removeAllSecondaryWindows;
- (void)removeSecondaryWindow:(id)arg1;
- (void)addSecondaryWindow:(id)arg1;
- (id)windowsToExitFullScreen;
- (id)windowsToEnterFullScreen;
- (id)allMainWindows;
- (id)secondaryWindowArray;
- (id)primaryWindow;
- (BOOL)isPrimary;
- (BOOL)squareCorners;
- (id)kioskDelegate;
- (void)close;
- (void)awakeFromNib;
- (void)dealloc;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

