//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "DUIAdaptorBase.h"

@class DUIDlgMgr, DUISnapshot, DUIVM, NSArray, NSString;

@interface DUISnapshotTree : DUIAdaptorBase
{
}

+ (id)snapshotTreeForAdaptedSnapshotTree:(struct SnapshotTree *)arg1;
- (void)cloneSnapshotWithUID:(id)arg1 cloneType:(int)arg2 displayName:(id)arg3 cfgFile:(id)arg4 abortHandler:(CDUnknownBlockType)arg5 doneHandler:(CDUnknownBlockType)arg6 snapshotDoneHandler:(CDUnknownBlockType)arg7 progressHandler:(CDUnknownBlockType)arg8;
- (BOOL)canCloneSnapshotWithUID:(id)arg1 cloneType:(int)arg2 error:(id *)arg3;
@property(readonly, nonatomic) BOOL hasClones;
@property(readonly, copy, nonatomic) NSArray *clones;
@property(readonly, copy, nonatomic) NSString *uniqueSnapshotName;
@property(readonly, nonatomic) BOOL needsConsolidate;
- (void)setTiersForSnapshotWithUID:(id)arg1 tiers:(id)arg2 abortHandler:(CDUnknownBlockType)arg3 doneHandler:(CDUnknownBlockType)arg4;
- (void)setClientFlagsForSnapshotWithUID:(id)arg1 clientFlags:(unsigned int)arg2 abortHandler:(CDUnknownBlockType)arg3 doneHandler:(CDUnknownBlockType)arg4;
- (void)screenshotForSnapshotWithUID:(id)arg1 abortHandler:(CDUnknownBlockType)arg2 doneHandler:(CDUnknownBlockType)arg3;
- (void)renameSnapshotWithUID:(id)arg1 name:(id)arg2 description:(id)arg3 abortHandler:(CDUnknownBlockType)arg4 doneHandler:(CDUnknownBlockType)arg5;
- (void)restoreSnapshotWithUID:(id)arg1 suppressPowerOn:(BOOL)arg2 abortHandler:(CDUnknownBlockType)arg3 doneHandler:(CDUnknownBlockType)arg4;
- (void)takeSnapshot:(id)arg1 description:(id)arg2 abortHandler:(CDUnknownBlockType)arg3 doneHandler:(CDUnknownBlockType)arg4 progress:(id *)arg5;
- (void)shrinkDiskTreeInteractive:(BOOL)arg1 abortHandler:(CDUnknownBlockType)arg2 doneHandler:(CDUnknownBlockType)arg3 progress:(id *)arg4;
- (void)estimateShrinkWithAbortHandler:(CDUnknownBlockType)arg1 doneHandler:(CDUnknownBlockType)arg2;
- (void)calculateDiskUsageForSnapshotsWithUIDs:(id)arg1 abortHandler:(CDUnknownBlockType)arg2 doneHandler:(CDUnknownBlockType)arg3;
- (void)calculateDiskUsageForAllSnapshotsWithAbortHandler:(CDUnknownBlockType)arg1 doneHandler:(CDUnknownBlockType)arg2;
- (void)consolidateInteractive:(BOOL)arg1 abortHandler:(CDUnknownBlockType)arg2 doneHandler:(CDUnknownBlockType)arg3 progress:(id *)arg4;
- (void)deleteSnapshotsWithUIDs:(id)arg1 deleteChildren:(BOOL)arg2 interactive:(BOOL)arg3 abortHandler:(CDUnknownBlockType)arg4 doneHandler:(CDUnknownBlockType)arg5;
@property(nonatomic) DUIDlgMgr *dlgMgr;
@property(readonly, copy, nonatomic) NSArray *visibleSnapshots;
@property(readonly, copy, nonatomic) NSArray *snapshots;
- (id)snapshotWithUID:(id)arg1;
- (BOOL)hasYAH:(id)arg1;
@property(readonly, nonatomic) DUISnapshot *currentState;
@property(readonly, nonatomic) DUISnapshot *rootSnapshot;
@property(readonly, nonatomic) DUISnapshot *currentSnapshot;
@property(readonly, nonatomic) int snapshotCount;
- (void)refresh;
@property(readonly, nonatomic) DUIVM *vm;
@property(readonly, nonatomic) struct SnapshotTree *adaptedSnapshotTree;
- (id)initWithAdaptedSnapshotTree:(struct SnapshotTree *)arg1;
@property(readonly, retain, nonatomic) NSArray *canTakeFailureReasons;
@property(readonly, nonatomic) BOOL canTake;
@property(readonly, retain, nonatomic) NSArray *canRevertFailureReasons;
@property(readonly, nonatomic) BOOL canRevert;
@property(readonly, retain, nonatomic) NSArray *canRenameFailureReasons;
@property(readonly, nonatomic) BOOL canRename;
@property(readonly, retain, nonatomic) NSArray *canRestoreFailureReasons;
@property(readonly, nonatomic) BOOL canRestore;
@property(readonly, retain, nonatomic) NSArray *canManageFailureReasons;
@property(readonly, nonatomic) BOOL canManage;
@property(readonly, retain, nonatomic) NSArray *canDeleteFailureReasons;
@property(readonly, nonatomic) BOOL canDelete;
@property(readonly, retain, nonatomic) NSArray *canConsolidateFailureReasons;
@property(readonly, nonatomic) BOOL canConsolidate;
@property(readonly, retain, nonatomic) NSArray *canAutoProtectFailureReasons;
@property(readonly, nonatomic) BOOL canAutoProtect;

@end

