//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "DUISettingsItemBase.h"

#import "NSComboBoxDelegate.h"
#import "NSDatePickerCellDelegate.h"
#import "NSTabViewDelegate.h"
#import "NSTextFieldDelegate.h"

@class DUIFeatures, DUIVMEditor, NSArrayController, NSComboBox, NSDate, NSDateFormatter, NSDatePicker, NSImageView, NSNumberFormatter, NSPopUpButton, NSStackView, NSString, NSTabView, NSTextField, NSURLConnection, NSView, NSWindow;

@interface PLSettingsItemEncryption : DUISettingsItemBase <NSDatePickerCellDelegate, NSTabViewDelegate, NSTextFieldDelegate, NSComboBoxDelegate>
{
    NSView *mRestrictionsDetailsView;
    NSView *enableRestrictionsView;
    NSStackView *stackView;
    NSWindow *mConfigurationWindow;
    NSDatePicker *mExpireVirtualMachineDatePicker;
    NSTextField *mWarningTimeInDaysField;
    NSTextField *mUpdateFrequencyField;
    NSComboBox *mUpdateFrequencyUnitsBox;
    NSTextField *mCacheExpireTimeField;
    NSImageView *serverAddressCheckResults;
    NSDateFormatter *expirationDateUTCFormatter;
    NSArrayController *certController;
    NSTabView *fixedTabView;
    NSPopUpButton *restrictionTypePopup;
    double mHeightWithoutRestrictionsDetails;
    BOOL mIsEncrypted;
    BOOL mIsRestricted;
    BOOL mEnableWarningButtonState;
    BOOL mIsCheckingServer;
    BOOL mDidAwakeFromNib;
    BOOL mWaitingForCertificate;
    BOOL mServerNameValid;
    BOOL _shouldShowRestrictionsDetails;
    BOOL _alertPending;
    int mUpdateFrequency;
    int mCacheExpireTimeInDays;
    DUIVMEditor *mRestrictionsEditor;
    NSNumberFormatter *mNumberFormatter;
    NSDate *mExpireDate;
    NSString *mViewIdentifier;
    NSURLConnection *mConnection;
    struct __SecTrust *mTrust;
}

+ (BOOL)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)observationKeyPaths;
+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)keyPathsAffectingSettingsValueForKey:(id)arg1;
@property(nonatomic) BOOL alertPending; // @synthesize alertPending=_alertPending;
@property(readonly, nonatomic) BOOL shouldShowRestrictionsDetails; // @synthesize shouldShowRestrictionsDetails=_shouldShowRestrictionsDetails;
@property(nonatomic) BOOL serverNameValid; // @synthesize serverNameValid=mServerNameValid;
@property(nonatomic) BOOL waitingForCertificate; // @synthesize waitingForCertificate=mWaitingForCertificate;
@property(nonatomic) struct __SecTrust *trust; // @synthesize trust=mTrust;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=mConnection;
@property(copy, nonatomic) NSString *viewIdentifier; // @synthesize viewIdentifier=mViewIdentifier;
@property(nonatomic) BOOL didAwakeFromNib; // @synthesize didAwakeFromNib=mDidAwakeFromNib;
@property(retain, nonatomic) NSDate *expireDate; // @synthesize expireDate=mExpireDate;
@property(nonatomic) BOOL isCheckingServer; // @synthesize isCheckingServer=mIsCheckingServer;
@property(retain, nonatomic) NSNumberFormatter *numberFormatter; // @synthesize numberFormatter=mNumberFormatter;
@property(retain, nonatomic) DUIVMEditor *restrictionsEditor; // @synthesize restrictionsEditor=mRestrictionsEditor;
@property(nonatomic) int cacheExpireTimeInDays; // @synthesize cacheExpireTimeInDays=mCacheExpireTimeInDays;
@property(nonatomic) int updateFrequency; // @synthesize updateFrequency=mUpdateFrequency;
@property(nonatomic) BOOL enableWarningButtonState; // @synthesize enableWarningButtonState=mEnableWarningButtonState;
@property(nonatomic) BOOL isRestricted; // @synthesize isRestricted=mIsRestricted;
@property(nonatomic) BOOL isEncrypted; // @synthesize isEncrypted=mIsEncrypted;
- (void)onSheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)connection:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2;
- (BOOL)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (BOOL)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)getServerCertificate:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (BOOL)validateWarningTimeInDays:(id *)arg1 error:(id *)arg2;
@property(nonatomic) int warningTimeInDays;
- (BOOL)validateServerAddress:(id *)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSString *serverAddress;
@property(retain, nonatomic) NSString *expireText;
- (void)setRootCertificates:(id)arg1;
- (id)rootCertificates;
@property(retain, nonatomic) NSString *warningText;
- (void)setUsbDeviceAccessibleDefault:(BOOL)arg1;
@property(readonly, nonatomic) BOOL usbDeviceAccessibleDefault;
- (void)setForceEncryptionPasswordChangeOnMove:(BOOL)arg1;
@property(readonly, nonatomic) BOOL forceEncryptionPasswordChangeOnMove;
- (void)setUseServer:(BOOL)arg1;
- (BOOL)useServer;
@property(nonatomic) BOOL isPolicyServer;
- (BOOL)neverExpire;
- (void)setValidTill:(long long)arg1;
- (long long)validTill;
- (id)configPolicies;
- (id)generatePEMString;
- (void)showCertDetails:(id)arg1;
- (void)removeCertSelection:(id)arg1;
- (void)restoreCertObjects:(id)arg1;
- (void)prepareForCertTableUndo:(id)arg1;
- (void)importCertFile:(id)arg1;
- (BOOL)openFile:(id)arg1;
- (BOOL)addCertFromData:(id)arg1;
- (BOOL)addPEMFromData:(id)arg1;
- (BOOL)addCert:(struct OpaqueSecCertificateRef *)arg1;
- (id)imageForCert:(struct OpaqueSecCertificateRef *)arg1;
- (BOOL)tabView:(id)arg1 shouldSelectTabViewItem:(id)arg2;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)comboBoxSelectionDidChange:(id)arg1;
- (void)updateExpireDate;
- (void)datePickerCell:(id)arg1 validateProposedDateValue:(id *)arg2 timeInterval:(double *)arg3;
- (BOOL)validateCacheExpireTimeInDays:(id *)arg1 error:(id *)arg2;
- (BOOL)validateUpdateFrequency:(id *)arg1 error:(id *)arg2;
@property(readonly, nonatomic) double minCacheExpireTimeInDays;
@property(readonly, nonatomic) double maxCacheExpireTimeInDays;
@property(readonly, nonatomic) double minUpdateFrequency;
@property(readonly, nonatomic) double maxUpdateFrequency;
@property(readonly, nonatomic) double minWarningDays;
@property(readonly, nonatomic) double maxWarningDays;
@property(nonatomic) long long restrictionTypeTabIndex;
- (void)restrictionTypeChange:(id)arg1;
- (void)checkServerAddress:(id)arg1;
- (void)changePassword:(id)arg1;
- (void)showSuccessAlert:(id)arg1;
- (void)toggleRestrictions:(id)arg1;
- (void)promptForRemoveRestrictions:(id)arg1;
- (void)promptForRestrictions:(id)arg1;
- (void)toggleEncryption:(id)arg1;
@property(readonly, nonatomic) int updateFrequencyInMinutes;
- (void)configurationWindowSave:(id)arg1;
- (void)configurationWindowCancel:(id)arg1;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)configurationAction:(id)arg1;
- (void)configureRestrictionsEditor;
- (void)promptForDecryption:(id)arg1;
- (void)promptForEncryption:(id)arg1;
- (void)beginPasswordDialog:(int)arg1 text:(id)arg2 warningText:(id)arg3 showRememberPassword:(BOOL)arg4 repliedHandler:(CDUnknownBlockType)arg5;
- (void)onUnrestrictDialogDidEnd:(id)arg1;
- (void)onRestrictDialogDidEnd:(id)arg1;
- (void)onChangePasswordDialogDidEnd:(id)arg1;
- (void)onDecryptDialogDidEnd:(id)arg1;
- (void)onEncryptDialogDidEnd:(id)arg1;
@property(readonly, copy, nonatomic) NSString *restrictionText;
@property(readonly, copy, nonatomic) NSString *encryptionText;
- (id)restrictedStandardText;
- (id)restrictedText;
- (id)unrestrictedText;
- (id)encryptedRestrictedText;
- (id)encryptedUnrestrictedText;
- (id)unencryptedText;
- (id)lockTitle;
- (id)lockImage;
- (void)updateRestrictedState;
- (BOOL)areConfigPoliciesPresent;
- (void)updateEncryptedState;
- (void)updateShowRestrictions;
- (id)warnings;
@property(readonly, nonatomic) BOOL encryptedPending;
@property(readonly, nonatomic) BOOL canConnectToHorizonFlex;
@property(readonly, nonatomic) BOOL canReencrypt;
@property(readonly, nonatomic) DUIFeatures *duiFeatures;
@property(readonly, nonatomic) BOOL canAuthorRestrictedVMs;
@property(readonly, nonatomic) BOOL canRestrictVMs;
- (BOOL)canChangeRestrictionSettings;
@property(readonly, nonatomic) BOOL canModifyRestrictionsPolicies;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
@property(readonly, nonatomic) BOOL canModifySettings;
- (id)vmCrypto;
- (void)closeView;
- (void)openView;
- (void)dealloc;
- (void)awakeFromNib;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

