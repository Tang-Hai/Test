//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "VMBaseWindow.h"

#import "NSAnimationDelegate.h"

@class NSString, NSTimer, NSViewAnimation, NSWindow, NSWindow<PLFTBBaseWindow>, NSWindow<PLFTBTargetWindow>, PLFTBMinibarViewController;

@interface PLFTBWindow : VMBaseWindow <NSAnimationDelegate>
{
    PLFTBMinibarViewController *mMinibarViewController;
    NSWindow<PLFTBBaseWindow> *mBaseWindow;
    NSWindow *mFakeMenuBar;
    NSViewAnimation *mResizeAnimation;
    int mCurrentMode;
    int mShowPref;
    int mFrameEdge;
    BOOL mIsCollapsed;
    BOOL mShouldCollapse;
    BOOL mIsAnimating;
    BOOL mIsOrderedOut;
    BOOL mIsHidden;
    BOOL mIsTrackingForVisibleMenu;
    BOOL mIsShiftedForVisibleMenu;
    BOOL mIsToolbarAttachment;
    BOOL mNeedsLayout;
    struct CGRect mTrackingScreenRect;
    NSTimer *mTrackingScreenTimer;
    double mMinLength;
    BOOL mIsInDrag;
    BOOL mHasNotificationObservers;
    BOOL mIsObservingMenuBarVisible;
    BOOL mIsPlaceholder;
}

@property(nonatomic) BOOL isPlaceholder; // @synthesize isPlaceholder=mIsPlaceholder;
@property(nonatomic) BOOL isObservingMenuBarVisible; // @synthesize isObservingMenuBarVisible=mIsObservingMenuBarVisible;
@property(nonatomic) BOOL hasNotificationObservers; // @synthesize hasNotificationObservers=mHasNotificationObservers;
@property(nonatomic) BOOL isInDrag; // @synthesize isInDrag=mIsInDrag;
@property(retain, nonatomic) NSTimer *trackingScreenTimer; // @synthesize trackingScreenTimer=mTrackingScreenTimer;
@property(nonatomic) int currentMode; // @synthesize currentMode=mCurrentMode;
@property(nonatomic) BOOL needsLayout; // @synthesize needsLayout=mNeedsLayout;
@property(retain, nonatomic) NSViewAnimation *resizeAnimation; // @synthesize resizeAnimation=mResizeAnimation;
@property(nonatomic) BOOL shouldCollapse; // @synthesize shouldCollapse=mShouldCollapse;
@property(nonatomic) BOOL isToolbarAttachment; // @synthesize isToolbarAttachment=mIsToolbarAttachment;
@property(nonatomic) int showPref; // @synthesize showPref=mShowPref;
@property(retain, nonatomic) NSWindow *fakeMenuBar; // @synthesize fakeMenuBar=mFakeMenuBar;
@property(nonatomic) double minLength; // @synthesize minLength=mMinLength;
@property(nonatomic) BOOL isOrderedOut; // @synthesize isOrderedOut=mIsOrderedOut;
@property(nonatomic) BOOL isHidden; // @synthesize isHidden=mIsHidden;
@property(nonatomic) int frameEdge; // @synthesize frameEdge=mFrameEdge;
@property(retain, nonatomic) NSWindow<PLFTBBaseWindow> *baseWindow; // @synthesize baseWindow=mBaseWindow;
@property(retain, nonatomic) PLFTBMinibarViewController *minibarViewController; // @synthesize minibarViewController=mMinibarViewController;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
@property(readonly, copy) NSString *description;
- (void)raiseAboveParent;
- (void)updateCollapsedState;
- (BOOL)shouldShiftForMenu;
- (BOOL)overlapsMenu;
- (double)sizeForParentSize:(double)arg1;
- (BOOL)validateMenuItem:(id)arg1;
- (id)standardWindowButton:(unsigned long long)arg1;
- (double)animationResizeTime:(struct CGRect)arg1;
- (BOOL)shouldOrderOut;
- (void)onMenuBarVisibleChanged:(id)arg1;
- (void)endMenuBarTracking;
- (void)trackingScreenTimerFired:(id)arg1;
- (void)onSpaceDidChange:(id)arg1;
- (void)updateMenuBarObserver;
- (void)updateFakeMenuBar;
- (void)validateUserInterface;
- (void)showCollapsedState;
- (void)showExpandedState;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (BOOL)mouseInWindow;
- (BOOL)isSingleWindowMode;
- (BOOL)shouldAutoHide;
- (BOOL)shouldAlwaysHide;
- (BOOL)isKeyWindow;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (void)snapToPosition;
- (BOOL)isPositionEqualToWindow:(id)arg1;
- (BOOL)isAtLocation:(CDStruct_c1a9016d)arg1;
- (void)performLayout:(BOOL)arg1;
- (void)close;
- (void)animationDidStop:(id)arg1;
- (void)animationDidEnd:(id)arg1;
- (void)resizeWithAnimation;
- (struct CGRect)frameForTitleSize:(double)arg1;
- (struct CGRect)frameForLayout;
- (struct CGRect)frameForLayoutWithTitleSize:(double)arg1;
- (void)setTemporarilyDisabled:(BOOL)arg1;
- (void)setIsDisabled:(BOOL)arg1;
@property(nonatomic) BOOL isHighlighted;
- (float)preferredMinLength;
- (void)onParentWindowWillMiniaturize:(id)arg1;
- (void)onParentWindowDidChangeScreen:(id)arg1;
- (void)onParentWindowDidMove:(id)arg1;
- (void)onParentWindowDidResize:(id)arg1;
- (void)setParentWindow:(id)arg1;
- (void)attachToBaseWindow;
- (void)moveToBaseWindow:(id)arg1 onEdge:(int)arg2;
- (void)updateUngrabRect:(BOOL)arg1;
- (BOOL)minibarIsLocatedBetweenScreens:(struct CGRect)arg1;
@property(readonly, nonatomic) NSWindow<PLFTBTargetWindow> *targetWindow;
- (id)minibarView;
- (void)dealloc;
- (id)initWithBaseWindow:(id)arg1 frameEdge:(int)arg2 session:(id)arg3;
- (id)initWithBaseWindow:(id)arg1 frameEdge:(int)arg2 originalView:(id)arg3;
- (id)initWithBaseWindow:(id)arg1 frameEdge:(int)arg2 contentView:(id)arg3 isPlaceholder:(BOOL)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

