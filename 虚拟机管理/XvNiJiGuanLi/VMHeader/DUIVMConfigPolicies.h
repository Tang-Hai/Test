//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "DUIAdaptorBase.h"

@interface DUIVMConfigPolicies : DUIAdaptorBase
{
}

+ (id)vmConfigPoliciesForAdaptedVMConfigPolicies:(struct VMConfigPolicies *)arg1;
@property(readonly, nonatomic) struct VMConfigPolicies *adaptedVMConfigPolicies;
- (id)initWithAdaptedVMConfigPolicies:(struct VMConfigPolicies *)arg1;
- (void)setWarningTimeInDays:(int)arg1 forTransaction:(id)arg2;
- (int)warningTimeInDaysForTransaction:(id)arg1;
- (int)warningTimeInDays;
- (void)setWarningText:(id)arg1 forTransaction:(id)arg2;
- (id)warningTextForTransaction:(id)arg1;
- (id)warningText;
- (void)setValidTill:(long long)arg1 forTransaction:(id)arg2;
- (long long)validTillForTransaction:(id)arg1;
- (long long)validTill;
- (void)setUseServer:(BOOL)arg1 forTransaction:(id)arg2;
- (BOOL)useServerForTransaction:(id)arg1;
- (BOOL)useServer;
- (void)setUsbDeviceAccessibleDefault:(BOOL)arg1 forTransaction:(id)arg2;
- (BOOL)usbDeviceAccessibleDefaultForTransaction:(id)arg1;
- (BOOL)usbDeviceAccessibleDefault;
- (void)setUpdateFrequencyInMinutes:(int)arg1 forTransaction:(id)arg2;
- (int)updateFrequencyInMinutesForTransaction:(id)arg1;
- (int)updateFrequencyInMinutes;
- (void)setServerAddress:(id)arg1 forTransaction:(id)arg2;
- (id)serverAddressForTransaction:(id)arg1;
- (id)serverAddress;
- (void)setRootCertificates:(id)arg1 forTransaction:(id)arg2;
- (id)rootCertificatesForTransaction:(id)arg1;
- (id)rootCertificates;
- (void)setProtection:(int)arg1 forTransaction:(id)arg2;
- (int)protectionForTransaction:(id)arg1;
- (int)protection;
- (void)setPresent:(BOOL)arg1 forTransaction:(id)arg2;
- (BOOL)presentForTransaction:(id)arg1;
- (BOOL)present;
- (void)setIsPolicyServer:(BOOL)arg1 forTransaction:(id)arg2;
- (BOOL)isPolicyServerForTransaction:(id)arg1;
- (BOOL)isPolicyServer;
- (void)setForceEncryptionPasswordChangeOnMove:(BOOL)arg1 forTransaction:(id)arg2;
- (BOOL)forceEncryptionPasswordChangeOnMoveForTransaction:(id)arg1;
- (BOOL)forceEncryptionPasswordChangeOnMove;
- (void)setExpireText:(id)arg1 forTransaction:(id)arg2;
- (id)expireTextForTransaction:(id)arg1;
- (id)expireText;
- (void)setCacheExpireTimeInMinutes:(int)arg1 forTransaction:(id)arg2;
- (int)cacheExpireTimeInMinutesForTransaction:(id)arg1;
- (int)cacheExpireTimeInMinutes;

@end

