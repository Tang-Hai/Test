//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

//#import "NSObject.h"

@class DUILocalInventory, NSMutableArray, NSMutableSet;

@interface PLInventoryManager : NSObject
{
    NSMutableArray *contents;
    DUILocalInventory *userInventory;
    DUILocalInventory *sharedInventory;
    BOOL mLoadingRememberedHosts;
    NSMutableSet *mInventories;
}

+ (void)releaseDefaultInventoryManager;
+ (id)defaultInventoryManager;
+ (id)observationKeyPaths;
+ (void)initialize;
@property(nonatomic) BOOL loadingRememberedHosts; // @synthesize loadingRememberedHosts=mLoadingRememberedHosts;
@property(retain, nonatomic) DUILocalInventory *sharedInventory; // @synthesize sharedInventory;
@property(retain, nonatomic) DUILocalInventory *userInventory; // @synthesize userInventory;
@property(retain, nonatomic) NSMutableSet <DUILocalInventory*>*inventories; // @synthesize inventories=mInventories;
@property(retain, nonatomic) NSMutableArray *contents;
//@property(retain, nonatomic) NSMutableArray <DUIInventoryFolderNode*>*contents; // @synthesize contents;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)includeAnyPresetVMs;
- (void)processUserDefaultsModifications;
- (void)removeAllObjects;
- (void)removeObjects:(id)arg1;
- (void)removeObject:(id)arg1;
- (void)addObjects:(id)arg1;
- (void)addObject:(id)arg1;
- (void)iterateDisconnectInventoriesWithAbortHandler:(CDUnknownBlockType)arg1 doneHandler:(CDUnknownBlockType)arg2;
- (id)nextConnectedInventory;
- (BOOL)canConnectToInventory:(id)arg1;
- (void)onCanConnectToRemoteChanged;
- (id)features;
- (void)onInventoryDidChangeNotification:(id)arg1;
- (id)inventoryForPath:(id)arg1;
- (void)openLocalInventory;
- (id)itemForPersistentObject:(id)arg1;
- (id)persistentObjectForItem:(id)arg1;
- (id)inventoryForID:(id)arg1;
- (id)idForInventory:(id)arg1;
- (void)moveNode:(id)arg1 toFolder:(id)arg2 insertBefore:(id)arg3 abortHandler:(CDUnknownBlockType)arg4 doneHandler:(CDUnknownBlockType)arg5;
- (id)dropPlaceholderWithTitle:(id)arg1 onFolder:(id)arg2 atIndex:(long long)arg3;
- (void)cleanUpDownloadedFilesForVMWithName:(id)arg1 inDirectory:(id)arg2;
- (void)downloadVMNode:(id)arg1 placeholder:(id)arg2 folder:(id)arg3 targetDirectory:(id)arg4 targetName:(id)arg5 dlgMgr:(id)arg6 savePanelAccessory:(id)arg7;
- (id)timeStamp;
- (void)startDownloadForNode:(id)arg1 folder:(id)arg2 atIndex:(long long)arg3 dlgMgr:(id)arg4 abortHandler:(CDUnknownBlockType)arg5;
- (void)startUploadForNode:(id)arg1 folder:(id)arg2 dlgMgr:(id)arg3;
- (id)acceptDrop:(id)arg1 withURLs:(id)arg2 onFolder:(id)arg3 atIndex:(long long)arg4;
- (unsigned long long)validateDropURLs:(id)arg1 onFolder:(id)arg2;
- (BOOL)acceptsURLs:(id)arg1;
- (void)acceptDrop:(id)arg1 withNodes:(id)arg2 onFolder:(id)arg3 atIndex:(long long)arg4 dlgMgr:(id)arg5;
- (void)acceptDrop:(id)arg1 withNodes:(id)arg2 onFolder:(id)arg3 atIndex:(long long)arg4 dlgMgr:(id)arg5 abortHandler:(CDUnknownBlockType)arg6 doneHandler:(CDUnknownBlockType)arg7;
- (void)findAvailableDidEndWithName:(id)arg1 dlgMgr:(id)arg2 savePanelAccessory:(id)arg3 placeholder:(id)arg4 vmNode:(id)arg5 folder:(id)arg6;
- (void)acceptSameInventoryDrop:(id)arg1 withNodes:(id)arg2 onFolder:(id)arg3 atIndex:(long long)arg4 abortHandler:(CDUnknownBlockType)arg5 doneHandler:(CDUnknownBlockType)arg6;
- (unsigned long long)validateDropNodes:(id)arg1 onFolder:(id)arg2;
- (unsigned long long)validateDropNode:(id)arg1 onFolder:(id)arg2;
- (BOOL)canDeleteNodes:(id)arg1;
- (BOOL)canDeleteNode:(id)arg1;
- (void)addFolderToNode:(id)arg1 abortHandler:(CDUnknownBlockType)arg2 doneHandler:(CDUnknownBlockType)arg3;
- (void)addNewVMAtPath:(id)arg1 withName:(id)arg2;
- (void)validateVMWithID:(id)arg1 withName:(id)arg2;
- (BOOL)canReparentNode:(id)arg1 toFolder:(id)arg2;
- (BOOL)canReorderNode:(id)arg1;
- (id)configFileDisplayName:(id)arg1;
- (id)nodeForPath:(id)arg1;
- (BOOL)shouldCollapseItem:(id)arg1;
- (BOOL)isRegisteredInventory:(id)arg1;
- (BOOL)isLocalInventory:(id)arg1;
- (BOOL)isGroupItem:(id)arg1;
- (void)prepareToClose;
- (void)flushContentsToDisk;
- (id)favoriteNodes;
- (id)vmNodesForVMWithID:(id)arg1;
- (id)vmNodesForVMWithID:(id)arg1 isLocal:(BOOL)arg2;
- (id)allLocalVMNodes;
- (id)inventoryNodesForVMWithUUID:(id)arg1;
- (id)filteredChildrenUsingPredicate:(id)arg1;
- (void)validateContents:(BOOL)arg1;
- (BOOL)canRemoveInventoryNode:(id)arg1;
- (BOOL)canRemoveInventory:(id)arg1;
- (void)removeInventory:(id)arg1;
- (void)addInventory:(id)arg1;
- (id)remoteInventories;
- (void)loadRememberedHosts;
- (void)addDisconnectedHostID:(id)arg1 cnxType:(int)arg2;
- (void)saveRememberedHosts;
- (id)openSharedInventoryAtPath:(id)arg1;
- (id)openUserInventoryAtPath:(id)arg1;
- (id)sharedFilename;
- (id)userFilename;
- (void)dealloc;
- (id)init;

@end

